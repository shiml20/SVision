{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar _watch;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { extend } from '../../vue';\nimport { NAME_COLLAPSE } from '../../constants/components';\nimport { CLASS_NAME_SHOW } from '../../constants/classes';\nimport { IS_BROWSER } from '../../constants/env';\nimport { EVENT_NAME_HIDDEN, EVENT_NAME_HIDE, EVENT_NAME_SHOW, EVENT_NAME_SHOWN, EVENT_OPTIONS_NO_CAPTURE } from '../../constants/events';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { addClass, hasClass, removeClass, closest, matches, getCS } from '../../utils/dom';\nimport { getRootActionEventName, getRootEventName, eventOnOff } from '../../utils/events';\nimport { makeModelMixin } from '../../utils/model';\nimport { sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { listenOnRootMixin } from '../../mixins/listen-on-root';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BVCollapse } from './helpers/bv-collapse'; // --- Constants ---\n\nvar ROOT_ACTION_EVENT_NAME_TOGGLE = getRootActionEventName(NAME_COLLAPSE, 'toggle');\nvar ROOT_ACTION_EVENT_NAME_REQUEST_STATE = getRootActionEventName(NAME_COLLAPSE, 'request-state');\nvar ROOT_EVENT_NAME_ACCORDION = getRootEventName(NAME_COLLAPSE, 'accordion');\nvar ROOT_EVENT_NAME_STATE = getRootEventName(NAME_COLLAPSE, 'state');\nvar ROOT_EVENT_NAME_SYNC_STATE = getRootEventName(NAME_COLLAPSE, 'sync-state');\nvar _makeModelMixin = makeModelMixin('visible', {\n    type: PROP_TYPE_BOOLEAN,\n    defaultValue: false\n  }),\n  modelMixin = _makeModelMixin.mixin,\n  modelProps = _makeModelMixin.props,\n  MODEL_PROP_NAME = _makeModelMixin.prop,\n  MODEL_EVENT_NAME = _makeModelMixin.event; // --- Props ---\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread({}, idProps), modelProps), {}, {\n  // If `true` (and `visible` is `true` on mount), animate initially visible\n  accordion: makeProp(PROP_TYPE_STRING),\n  appear: makeProp(PROP_TYPE_BOOLEAN, false),\n  isNav: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'div')\n})), NAME_COLLAPSE); // --- Main component ---\n// @vue/component\n\nexport var BCollapse = /*#__PURE__*/extend({\n  name: NAME_COLLAPSE,\n  mixins: [idMixin, modelMixin, normalizeSlotMixin, listenOnRootMixin],\n  props: props,\n  data: function data() {\n    return {\n      show: this[MODEL_PROP_NAME],\n      transitioning: false\n    };\n  },\n  computed: {\n    classObject: function classObject() {\n      var transitioning = this.transitioning;\n      return {\n        'navbar-collapse': this.isNav,\n        collapse: !transitioning,\n        show: this.show && !transitioning\n      };\n    },\n    slotScope: function slotScope() {\n      var _this = this;\n      return {\n        visible: this.show,\n        close: function close() {\n          _this.show = false;\n        }\n      };\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue) {\n    if (newValue !== this.show) {\n      this.show = newValue;\n    }\n  }), _defineProperty(_watch, \"show\", function show(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.emitState();\n    }\n  }), _watch),\n  created: function created() {\n    this.show = this[MODEL_PROP_NAME];\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n    this.show = this[MODEL_PROP_NAME]; // Listen for toggle events to open/close us\n\n    this.listenOnRoot(ROOT_ACTION_EVENT_NAME_TOGGLE, this.handleToggleEvent); // Listen to other collapses for accordion events\n\n    this.listenOnRoot(ROOT_EVENT_NAME_ACCORDION, this.handleAccordionEvent);\n    if (this.isNav) {\n      // Set up handlers\n      this.setWindowEvents(true);\n      this.handleResize();\n    }\n    this.$nextTick(function () {\n      _this2.emitState();\n    }); // Listen for \"Sync state\" requests from `v-b-toggle`\n\n    this.listenOnRoot(ROOT_ACTION_EVENT_NAME_REQUEST_STATE, function (id) {\n      if (id === _this2.safeId()) {\n        _this2.$nextTick(_this2.emitSync);\n      }\n    });\n  },\n  updated: function updated() {\n    // Emit a private event every time this component updates to ensure\n    // the toggle button is in sync with the collapse's state\n    // It is emitted regardless if the visible state changes\n    this.emitSync();\n  },\n  /* istanbul ignore next */\n  deactivated: function deactivated() {\n    if (this.isNav) {\n      this.setWindowEvents(false);\n    }\n  },\n  /* istanbul ignore next */\n  activated: function activated() {\n    if (this.isNav) {\n      this.setWindowEvents(true);\n    }\n    this.emitSync();\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Trigger state emit if needed\n    this.show = false;\n    if (this.isNav && IS_BROWSER) {\n      this.setWindowEvents(false);\n    }\n  },\n  methods: {\n    setWindowEvents: function setWindowEvents(on) {\n      eventOnOff(on, window, 'resize', this.handleResize, EVENT_OPTIONS_NO_CAPTURE);\n      eventOnOff(on, window, 'orientationchange', this.handleResize, EVENT_OPTIONS_NO_CAPTURE);\n    },\n    toggle: function toggle() {\n      this.show = !this.show;\n    },\n    onEnter: function onEnter() {\n      this.transitioning = true; // This should be moved out so we can add cancellable events\n\n      this.$emit(EVENT_NAME_SHOW);\n    },\n    onAfterEnter: function onAfterEnter() {\n      this.transitioning = false;\n      this.$emit(EVENT_NAME_SHOWN);\n    },\n    onLeave: function onLeave() {\n      this.transitioning = true; // This should be moved out so we can add cancellable events\n\n      this.$emit(EVENT_NAME_HIDE);\n    },\n    onAfterLeave: function onAfterLeave() {\n      this.transitioning = false;\n      this.$emit(EVENT_NAME_HIDDEN);\n    },\n    emitState: function emitState() {\n      var show = this.show,\n        accordion = this.accordion;\n      var id = this.safeId();\n      this.$emit(MODEL_EVENT_NAME, show); // Let `v-b-toggle` know the state of this collapse\n\n      this.emitOnRoot(ROOT_EVENT_NAME_STATE, id, show);\n      if (accordion && show) {\n        // Tell the other collapses in this accordion to close\n        this.emitOnRoot(ROOT_EVENT_NAME_ACCORDION, id, accordion);\n      }\n    },\n    emitSync: function emitSync() {\n      // Emit a private event every time this component updates to ensure\n      // the toggle button is in sync with the collapse's state\n      // It is emitted regardless if the visible state changes\n      this.emitOnRoot(ROOT_EVENT_NAME_SYNC_STATE, this.safeId(), this.show);\n    },\n    checkDisplayBlock: function checkDisplayBlock() {\n      // Check to see if the collapse has `display: block !important` set\n      // We can't set `display: none` directly on `this.$el`, as it would\n      // trigger a new transition to start (or cancel a current one)\n      var $el = this.$el;\n      var restore = hasClass($el, CLASS_NAME_SHOW);\n      removeClass($el, CLASS_NAME_SHOW);\n      var isBlock = getCS($el).display === 'block';\n      if (restore) {\n        addClass($el, CLASS_NAME_SHOW);\n      }\n      return isBlock;\n    },\n    clickHandler: function clickHandler(event) {\n      var el = event.target; // If we are in a nav/navbar, close the collapse when non-disabled link clicked\n\n      /* istanbul ignore next: can't test `getComputedStyle()` in JSDOM */\n\n      if (!this.isNav || !el || getCS(this.$el).display !== 'block') {\n        return;\n      } // Only close the collapse if it is not forced to be `display: block !important`\n\n      if ((matches(el, '.nav-link,.dropdown-item') || closest('.nav-link,.dropdown-item', el)) && !this.checkDisplayBlock()) {\n        this.show = false;\n      }\n    },\n    handleToggleEvent: function handleToggleEvent(id) {\n      if (id === this.safeId()) {\n        this.toggle();\n      }\n    },\n    handleAccordionEvent: function handleAccordionEvent(openedId, openAccordion) {\n      var accordion = this.accordion,\n        show = this.show;\n      if (!accordion || accordion !== openAccordion) {\n        return;\n      }\n      var isThis = openedId === this.safeId(); // Open this collapse if not shown or\n      // close this collapse if shown\n\n      if (isThis && !show || !isThis && show) {\n        this.toggle();\n      }\n    },\n    handleResize: function handleResize() {\n      // Handler for orientation/resize to set collapsed state in nav/navbar\n      this.show = getCS(this.$el).display === 'block';\n    }\n  },\n  render: function render(h) {\n    var appear = this.appear;\n    var $content = h(this.tag, {\n      class: this.classObject,\n      directives: [{\n        name: 'show',\n        value: this.show\n      }],\n      attrs: {\n        id: this.safeId()\n      },\n      on: {\n        click: this.clickHandler\n      }\n    }, this.normalizeSlot(SLOT_NAME_DEFAULT, this.slotScope));\n    return h(BVCollapse, {\n      props: {\n        appear: appear\n      },\n      on: {\n        enter: this.onEnter,\n        afterEnter: this.onAfterEnter,\n        leave: this.onLeave,\n        afterLeave: this.onAfterLeave\n      }\n    }, [$content]);\n  }\n});","map":{"version":3,"names":["_watch","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","extend","NAME_COLLAPSE","CLASS_NAME_SHOW","IS_BROWSER","EVENT_NAME_HIDDEN","EVENT_NAME_HIDE","EVENT_NAME_SHOW","EVENT_NAME_SHOWN","EVENT_OPTIONS_NO_CAPTURE","PROP_TYPE_BOOLEAN","PROP_TYPE_STRING","SLOT_NAME_DEFAULT","addClass","hasClass","removeClass","closest","matches","getCS","getRootActionEventName","getRootEventName","eventOnOff","makeModelMixin","sortKeys","makeProp","makePropsConfigurable","idMixin","props","idProps","listenOnRootMixin","normalizeSlotMixin","BVCollapse","ROOT_ACTION_EVENT_NAME_TOGGLE","ROOT_ACTION_EVENT_NAME_REQUEST_STATE","ROOT_EVENT_NAME_ACCORDION","ROOT_EVENT_NAME_STATE","ROOT_EVENT_NAME_SYNC_STATE","_makeModelMixin","type","defaultValue","modelMixin","mixin","modelProps","MODEL_PROP_NAME","prop","MODEL_EVENT_NAME","event","accordion","appear","isNav","tag","BCollapse","name","mixins","data","show","transitioning","computed","classObject","collapse","slotScope","_this","visible","close","watch","newValue","oldValue","emitState","created","mounted","_this2","listenOnRoot","handleToggleEvent","handleAccordionEvent","setWindowEvents","handleResize","$nextTick","id","safeId","emitSync","updated","deactivated","activated","beforeDestroy","methods","on","window","toggle","onEnter","$emit","onAfterEnter","onLeave","onAfterLeave","emitOnRoot","checkDisplayBlock","$el","restore","isBlock","display","clickHandler","el","openedId","openAccordion","isThis","render","h","$content","class","directives","attrs","click","normalizeSlot","enter","afterEnter","leave","afterLeave"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/collapse/collapse.js"],"sourcesContent":["var _watch;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { extend } from '../../vue';\nimport { NAME_COLLAPSE } from '../../constants/components';\nimport { CLASS_NAME_SHOW } from '../../constants/classes';\nimport { IS_BROWSER } from '../../constants/env';\nimport { EVENT_NAME_HIDDEN, EVENT_NAME_HIDE, EVENT_NAME_SHOW, EVENT_NAME_SHOWN, EVENT_OPTIONS_NO_CAPTURE } from '../../constants/events';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_DEFAULT } from '../../constants/slots';\nimport { addClass, hasClass, removeClass, closest, matches, getCS } from '../../utils/dom';\nimport { getRootActionEventName, getRootEventName, eventOnOff } from '../../utils/events';\nimport { makeModelMixin } from '../../utils/model';\nimport { sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { listenOnRootMixin } from '../../mixins/listen-on-root';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BVCollapse } from './helpers/bv-collapse'; // --- Constants ---\n\nvar ROOT_ACTION_EVENT_NAME_TOGGLE = getRootActionEventName(NAME_COLLAPSE, 'toggle');\nvar ROOT_ACTION_EVENT_NAME_REQUEST_STATE = getRootActionEventName(NAME_COLLAPSE, 'request-state');\nvar ROOT_EVENT_NAME_ACCORDION = getRootEventName(NAME_COLLAPSE, 'accordion');\nvar ROOT_EVENT_NAME_STATE = getRootEventName(NAME_COLLAPSE, 'state');\nvar ROOT_EVENT_NAME_SYNC_STATE = getRootEventName(NAME_COLLAPSE, 'sync-state');\n\nvar _makeModelMixin = makeModelMixin('visible', {\n  type: PROP_TYPE_BOOLEAN,\n  defaultValue: false\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event; // --- Props ---\n\n\nexport var props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread({}, idProps), modelProps), {}, {\n  // If `true` (and `visible` is `true` on mount), animate initially visible\n  accordion: makeProp(PROP_TYPE_STRING),\n  appear: makeProp(PROP_TYPE_BOOLEAN, false),\n  isNav: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'div')\n})), NAME_COLLAPSE); // --- Main component ---\n// @vue/component\n\nexport var BCollapse = /*#__PURE__*/extend({\n  name: NAME_COLLAPSE,\n  mixins: [idMixin, modelMixin, normalizeSlotMixin, listenOnRootMixin],\n  props: props,\n  data: function data() {\n    return {\n      show: this[MODEL_PROP_NAME],\n      transitioning: false\n    };\n  },\n  computed: {\n    classObject: function classObject() {\n      var transitioning = this.transitioning;\n      return {\n        'navbar-collapse': this.isNav,\n        collapse: !transitioning,\n        show: this.show && !transitioning\n      };\n    },\n    slotScope: function slotScope() {\n      var _this = this;\n\n      return {\n        visible: this.show,\n        close: function close() {\n          _this.show = false;\n        }\n      };\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue) {\n    if (newValue !== this.show) {\n      this.show = newValue;\n    }\n  }), _defineProperty(_watch, \"show\", function show(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.emitState();\n    }\n  }), _watch),\n  created: function created() {\n    this.show = this[MODEL_PROP_NAME];\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.show = this[MODEL_PROP_NAME]; // Listen for toggle events to open/close us\n\n    this.listenOnRoot(ROOT_ACTION_EVENT_NAME_TOGGLE, this.handleToggleEvent); // Listen to other collapses for accordion events\n\n    this.listenOnRoot(ROOT_EVENT_NAME_ACCORDION, this.handleAccordionEvent);\n\n    if (this.isNav) {\n      // Set up handlers\n      this.setWindowEvents(true);\n      this.handleResize();\n    }\n\n    this.$nextTick(function () {\n      _this2.emitState();\n    }); // Listen for \"Sync state\" requests from `v-b-toggle`\n\n    this.listenOnRoot(ROOT_ACTION_EVENT_NAME_REQUEST_STATE, function (id) {\n      if (id === _this2.safeId()) {\n        _this2.$nextTick(_this2.emitSync);\n      }\n    });\n  },\n  updated: function updated() {\n    // Emit a private event every time this component updates to ensure\n    // the toggle button is in sync with the collapse's state\n    // It is emitted regardless if the visible state changes\n    this.emitSync();\n  },\n\n  /* istanbul ignore next */\n  deactivated: function deactivated() {\n    if (this.isNav) {\n      this.setWindowEvents(false);\n    }\n  },\n\n  /* istanbul ignore next */\n  activated: function activated() {\n    if (this.isNav) {\n      this.setWindowEvents(true);\n    }\n\n    this.emitSync();\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Trigger state emit if needed\n    this.show = false;\n\n    if (this.isNav && IS_BROWSER) {\n      this.setWindowEvents(false);\n    }\n  },\n  methods: {\n    setWindowEvents: function setWindowEvents(on) {\n      eventOnOff(on, window, 'resize', this.handleResize, EVENT_OPTIONS_NO_CAPTURE);\n      eventOnOff(on, window, 'orientationchange', this.handleResize, EVENT_OPTIONS_NO_CAPTURE);\n    },\n    toggle: function toggle() {\n      this.show = !this.show;\n    },\n    onEnter: function onEnter() {\n      this.transitioning = true; // This should be moved out so we can add cancellable events\n\n      this.$emit(EVENT_NAME_SHOW);\n    },\n    onAfterEnter: function onAfterEnter() {\n      this.transitioning = false;\n      this.$emit(EVENT_NAME_SHOWN);\n    },\n    onLeave: function onLeave() {\n      this.transitioning = true; // This should be moved out so we can add cancellable events\n\n      this.$emit(EVENT_NAME_HIDE);\n    },\n    onAfterLeave: function onAfterLeave() {\n      this.transitioning = false;\n      this.$emit(EVENT_NAME_HIDDEN);\n    },\n    emitState: function emitState() {\n      var show = this.show,\n          accordion = this.accordion;\n      var id = this.safeId();\n      this.$emit(MODEL_EVENT_NAME, show); // Let `v-b-toggle` know the state of this collapse\n\n      this.emitOnRoot(ROOT_EVENT_NAME_STATE, id, show);\n\n      if (accordion && show) {\n        // Tell the other collapses in this accordion to close\n        this.emitOnRoot(ROOT_EVENT_NAME_ACCORDION, id, accordion);\n      }\n    },\n    emitSync: function emitSync() {\n      // Emit a private event every time this component updates to ensure\n      // the toggle button is in sync with the collapse's state\n      // It is emitted regardless if the visible state changes\n      this.emitOnRoot(ROOT_EVENT_NAME_SYNC_STATE, this.safeId(), this.show);\n    },\n    checkDisplayBlock: function checkDisplayBlock() {\n      // Check to see if the collapse has `display: block !important` set\n      // We can't set `display: none` directly on `this.$el`, as it would\n      // trigger a new transition to start (or cancel a current one)\n      var $el = this.$el;\n      var restore = hasClass($el, CLASS_NAME_SHOW);\n      removeClass($el, CLASS_NAME_SHOW);\n      var isBlock = getCS($el).display === 'block';\n\n      if (restore) {\n        addClass($el, CLASS_NAME_SHOW);\n      }\n\n      return isBlock;\n    },\n    clickHandler: function clickHandler(event) {\n      var el = event.target; // If we are in a nav/navbar, close the collapse when non-disabled link clicked\n\n      /* istanbul ignore next: can't test `getComputedStyle()` in JSDOM */\n\n      if (!this.isNav || !el || getCS(this.$el).display !== 'block') {\n        return;\n      } // Only close the collapse if it is not forced to be `display: block !important`\n\n\n      if ((matches(el, '.nav-link,.dropdown-item') || closest('.nav-link,.dropdown-item', el)) && !this.checkDisplayBlock()) {\n        this.show = false;\n      }\n    },\n    handleToggleEvent: function handleToggleEvent(id) {\n      if (id === this.safeId()) {\n        this.toggle();\n      }\n    },\n    handleAccordionEvent: function handleAccordionEvent(openedId, openAccordion) {\n      var accordion = this.accordion,\n          show = this.show;\n\n      if (!accordion || accordion !== openAccordion) {\n        return;\n      }\n\n      var isThis = openedId === this.safeId(); // Open this collapse if not shown or\n      // close this collapse if shown\n\n      if (isThis && !show || !isThis && show) {\n        this.toggle();\n      }\n    },\n    handleResize: function handleResize() {\n      // Handler for orientation/resize to set collapsed state in nav/navbar\n      this.show = getCS(this.$el).display === 'block';\n    }\n  },\n  render: function render(h) {\n    var appear = this.appear;\n    var $content = h(this.tag, {\n      class: this.classObject,\n      directives: [{\n        name: 'show',\n        value: this.show\n      }],\n      attrs: {\n        id: this.safeId()\n      },\n      on: {\n        click: this.clickHandler\n      }\n    }, this.normalizeSlot(SLOT_NAME_DEFAULT, this.slotScope));\n    return h(BVCollapse, {\n      props: {\n        appear: appear\n      },\n      on: {\n        enter: this.onEnter,\n        afterEnter: this.onAfterEnter,\n        leave: this.onLeave,\n        afterLeave: this.onAfterLeave\n      }\n    }, [$content]);\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}