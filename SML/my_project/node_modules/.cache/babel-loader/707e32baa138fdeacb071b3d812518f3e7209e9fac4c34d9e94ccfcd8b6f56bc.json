{"ast":null,"code":"import { HAS_PASSIVE_EVENT_SUPPORT } from '../constants/env';\nimport { ROOT_EVENT_NAME_PREFIX, ROOT_EVENT_NAME_SEPARATOR } from '../constants/events';\nimport { RX_BV_PREFIX } from '../constants/regex';\nimport { isObject } from './inspect';\nimport { kebabCase } from './string'; // --- Utils ---\n// Normalize event options based on support of passive option\n// Exported only for testing purposes\n\nexport var parseEventOptions = function parseEventOptions(options) {\n  /* istanbul ignore else: can't test in JSDOM, as it supports passive */\n  if (HAS_PASSIVE_EVENT_SUPPORT) {\n    return isObject(options) ? options : {\n      capture: !!options || false\n    };\n  } else {\n    // Need to translate to actual Boolean value\n    return !!(isObject(options) ? options.capture : options);\n  }\n}; // Attach an event listener to an element\n\nexport var eventOn = function eventOn(el, eventName, handler, options) {\n  if (el && el.addEventListener) {\n    el.addEventListener(eventName, handler, parseEventOptions(options));\n  }\n}; // Remove an event listener from an element\n\nexport var eventOff = function eventOff(el, eventName, handler, options) {\n  if (el && el.removeEventListener) {\n    el.removeEventListener(eventName, handler, parseEventOptions(options));\n  }\n}; // Utility method to add/remove a event listener based on first argument (boolean)\n// It passes all other arguments to the `eventOn()` or `eventOff` method\n\nexport var eventOnOff = function eventOnOff(on) {\n  var method = on ? eventOn : eventOff;\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  method.apply(void 0, args);\n}; // Utility method to prevent the default event handling and propagation\n\nexport var stopEvent = function stopEvent(event) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$preventDefault = _ref.preventDefault,\n    preventDefault = _ref$preventDefault === void 0 ? true : _ref$preventDefault,\n    _ref$propagation = _ref.propagation,\n    propagation = _ref$propagation === void 0 ? true : _ref$propagation,\n    _ref$immediatePropaga = _ref.immediatePropagation,\n    immediatePropagation = _ref$immediatePropaga === void 0 ? false : _ref$immediatePropaga;\n  if (preventDefault) {\n    event.preventDefault();\n  }\n  if (propagation) {\n    event.stopPropagation();\n  }\n  if (immediatePropagation) {\n    event.stopImmediatePropagation();\n  }\n}; // Helper method to convert a component/directive name to a base event name\n// `getBaseEventName('BNavigationItem')` => 'navigation-item'\n// `getBaseEventName('BVToggle')` => 'toggle'\n\nvar getBaseEventName = function getBaseEventName(value) {\n  return kebabCase(value.replace(RX_BV_PREFIX, ''));\n}; // Get a root event name by component/directive and event name\n// `getBaseEventName('BModal', 'show')` => 'bv::modal::show'\n\nexport var getRootEventName = function getRootEventName(name, eventName) {\n  return [ROOT_EVENT_NAME_PREFIX, getBaseEventName(name), eventName].join(ROOT_EVENT_NAME_SEPARATOR);\n}; // Get a root action event name by component/directive and action name\n// `getRootActionEventName('BModal', 'show')` => 'bv::show::modal'\n\nexport var getRootActionEventName = function getRootActionEventName(name, actionName) {\n  return [ROOT_EVENT_NAME_PREFIX, actionName, getBaseEventName(name)].join(ROOT_EVENT_NAME_SEPARATOR);\n};","map":{"version":3,"names":["HAS_PASSIVE_EVENT_SUPPORT","ROOT_EVENT_NAME_PREFIX","ROOT_EVENT_NAME_SEPARATOR","RX_BV_PREFIX","isObject","kebabCase","parseEventOptions","options","capture","eventOn","el","eventName","handler","addEventListener","eventOff","removeEventListener","eventOnOff","on","method","_len","arguments","length","args","Array","_key","apply","stopEvent","event","_ref","undefined","_ref$preventDefault","preventDefault","_ref$propagation","propagation","_ref$immediatePropaga","immediatePropagation","stopPropagation","stopImmediatePropagation","getBaseEventName","value","replace","getRootEventName","name","join","getRootActionEventName","actionName"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/utils/events.js"],"sourcesContent":["import { HAS_PASSIVE_EVENT_SUPPORT } from '../constants/env';\nimport { ROOT_EVENT_NAME_PREFIX, ROOT_EVENT_NAME_SEPARATOR } from '../constants/events';\nimport { RX_BV_PREFIX } from '../constants/regex';\nimport { isObject } from './inspect';\nimport { kebabCase } from './string'; // --- Utils ---\n// Normalize event options based on support of passive option\n// Exported only for testing purposes\n\nexport var parseEventOptions = function parseEventOptions(options) {\n  /* istanbul ignore else: can't test in JSDOM, as it supports passive */\n  if (HAS_PASSIVE_EVENT_SUPPORT) {\n    return isObject(options) ? options : {\n      capture: !!options || false\n    };\n  } else {\n    // Need to translate to actual Boolean value\n    return !!(isObject(options) ? options.capture : options);\n  }\n}; // Attach an event listener to an element\n\nexport var eventOn = function eventOn(el, eventName, handler, options) {\n  if (el && el.addEventListener) {\n    el.addEventListener(eventName, handler, parseEventOptions(options));\n  }\n}; // Remove an event listener from an element\n\nexport var eventOff = function eventOff(el, eventName, handler, options) {\n  if (el && el.removeEventListener) {\n    el.removeEventListener(eventName, handler, parseEventOptions(options));\n  }\n}; // Utility method to add/remove a event listener based on first argument (boolean)\n// It passes all other arguments to the `eventOn()` or `eventOff` method\n\nexport var eventOnOff = function eventOnOff(on) {\n  var method = on ? eventOn : eventOff;\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  method.apply(void 0, args);\n}; // Utility method to prevent the default event handling and propagation\n\nexport var stopEvent = function stopEvent(event) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$preventDefault = _ref.preventDefault,\n      preventDefault = _ref$preventDefault === void 0 ? true : _ref$preventDefault,\n      _ref$propagation = _ref.propagation,\n      propagation = _ref$propagation === void 0 ? true : _ref$propagation,\n      _ref$immediatePropaga = _ref.immediatePropagation,\n      immediatePropagation = _ref$immediatePropaga === void 0 ? false : _ref$immediatePropaga;\n\n  if (preventDefault) {\n    event.preventDefault();\n  }\n\n  if (propagation) {\n    event.stopPropagation();\n  }\n\n  if (immediatePropagation) {\n    event.stopImmediatePropagation();\n  }\n}; // Helper method to convert a component/directive name to a base event name\n// `getBaseEventName('BNavigationItem')` => 'navigation-item'\n// `getBaseEventName('BVToggle')` => 'toggle'\n\nvar getBaseEventName = function getBaseEventName(value) {\n  return kebabCase(value.replace(RX_BV_PREFIX, ''));\n}; // Get a root event name by component/directive and event name\n// `getBaseEventName('BModal', 'show')` => 'bv::modal::show'\n\n\nexport var getRootEventName = function getRootEventName(name, eventName) {\n  return [ROOT_EVENT_NAME_PREFIX, getBaseEventName(name), eventName].join(ROOT_EVENT_NAME_SEPARATOR);\n}; // Get a root action event name by component/directive and action name\n// `getRootActionEventName('BModal', 'show')` => 'bv::show::modal'\n\nexport var getRootActionEventName = function getRootActionEventName(name, actionName) {\n  return [ROOT_EVENT_NAME_PREFIX, actionName, getBaseEventName(name)].join(ROOT_EVENT_NAME_SEPARATOR);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}