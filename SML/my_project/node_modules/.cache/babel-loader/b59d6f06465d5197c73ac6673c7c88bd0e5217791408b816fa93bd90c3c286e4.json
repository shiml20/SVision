{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { extend, mergeData } from '../../vue';\nimport { NAME_JUMBOTRON } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_HEADER, SLOT_NAME_LEAD } from '../../constants/slots';\nimport { htmlOrText } from '../../utils/html';\nimport { hasNormalizedSlot, normalizeSlot } from '../../utils/normalize-slot';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { BContainer } from '../layout/container'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  bgVariant: makeProp(PROP_TYPE_STRING),\n  borderVariant: makeProp(PROP_TYPE_STRING),\n  containerFluid: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  fluid: makeProp(PROP_TYPE_BOOLEAN, false),\n  header: makeProp(PROP_TYPE_STRING),\n  headerHtml: makeProp(PROP_TYPE_STRING),\n  headerLevel: makeProp(PROP_TYPE_NUMBER_STRING, 3),\n  headerTag: makeProp(PROP_TYPE_STRING, 'h1'),\n  lead: makeProp(PROP_TYPE_STRING),\n  leadHtml: makeProp(PROP_TYPE_STRING),\n  leadTag: makeProp(PROP_TYPE_STRING, 'p'),\n  tag: makeProp(PROP_TYPE_STRING, 'div'),\n  textVariant: makeProp(PROP_TYPE_STRING)\n}, NAME_JUMBOTRON); // --- Main component ---\n// @vue/component\n\nexport var BJumbotron = /*#__PURE__*/extend({\n  name: NAME_JUMBOTRON,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class2;\n    var props = _ref.props,\n      data = _ref.data,\n      slots = _ref.slots,\n      scopedSlots = _ref.scopedSlots;\n    var header = props.header,\n      headerHtml = props.headerHtml,\n      lead = props.lead,\n      leadHtml = props.leadHtml,\n      textVariant = props.textVariant,\n      bgVariant = props.bgVariant,\n      borderVariant = props.borderVariant;\n    var $scopedSlots = scopedSlots || {};\n    var $slots = slots();\n    var slotScope = {};\n    var $header = h();\n    var hasHeaderSlot = hasNormalizedSlot(SLOT_NAME_HEADER, $scopedSlots, $slots);\n    if (hasHeaderSlot || header || headerHtml) {\n      var headerLevel = props.headerLevel;\n      $header = h(props.headerTag, {\n        class: _defineProperty({}, \"display-\".concat(headerLevel), headerLevel),\n        domProps: hasHeaderSlot ? {} : htmlOrText(headerHtml, header)\n      }, normalizeSlot(SLOT_NAME_HEADER, slotScope, $scopedSlots, $slots));\n    }\n    var $lead = h();\n    var hasLeadSlot = hasNormalizedSlot(SLOT_NAME_LEAD, $scopedSlots, $slots);\n    if (hasLeadSlot || lead || leadHtml) {\n      $lead = h(props.leadTag, {\n        staticClass: 'lead',\n        domProps: hasLeadSlot ? {} : htmlOrText(leadHtml, lead)\n      }, normalizeSlot(SLOT_NAME_LEAD, slotScope, $scopedSlots, $slots));\n    }\n    var $children = [$header, $lead, normalizeSlot(SLOT_NAME_DEFAULT, slotScope, $scopedSlots, $slots)]; // If fluid, wrap content in a container\n\n    if (props.fluid) {\n      $children = [h(BContainer, {\n        props: {\n          fluid: props.containerFluid\n        }\n      }, $children)];\n    }\n    return h(props.tag, mergeData(data, {\n      staticClass: 'jumbotron',\n      class: (_class2 = {\n        'jumbotron-fluid': props.fluid\n      }, _defineProperty(_class2, \"text-\".concat(textVariant), textVariant), _defineProperty(_class2, \"bg-\".concat(bgVariant), bgVariant), _defineProperty(_class2, \"border-\".concat(borderVariant), borderVariant), _defineProperty(_class2, \"border\", borderVariant), _class2)\n    }), $children);\n  }\n});","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","extend","mergeData","NAME_JUMBOTRON","PROP_TYPE_BOOLEAN","PROP_TYPE_BOOLEAN_STRING","PROP_TYPE_NUMBER_STRING","PROP_TYPE_STRING","SLOT_NAME_DEFAULT","SLOT_NAME_HEADER","SLOT_NAME_LEAD","htmlOrText","hasNormalizedSlot","normalizeSlot","makeProp","makePropsConfigurable","BContainer","props","bgVariant","borderVariant","containerFluid","fluid","header","headerHtml","headerLevel","headerTag","lead","leadHtml","leadTag","tag","textVariant","BJumbotron","name","functional","render","h","_ref","_class2","data","slots","scopedSlots","$scopedSlots","$slots","slotScope","$header","hasHeaderSlot","class","concat","domProps","$lead","hasLeadSlot","staticClass","$children"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/jumbotron/jumbotron.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { extend, mergeData } from '../../vue';\nimport { NAME_JUMBOTRON } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_HEADER, SLOT_NAME_LEAD } from '../../constants/slots';\nimport { htmlOrText } from '../../utils/html';\nimport { hasNormalizedSlot, normalizeSlot } from '../../utils/normalize-slot';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { BContainer } from '../layout/container'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  bgVariant: makeProp(PROP_TYPE_STRING),\n  borderVariant: makeProp(PROP_TYPE_STRING),\n  containerFluid: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  fluid: makeProp(PROP_TYPE_BOOLEAN, false),\n  header: makeProp(PROP_TYPE_STRING),\n  headerHtml: makeProp(PROP_TYPE_STRING),\n  headerLevel: makeProp(PROP_TYPE_NUMBER_STRING, 3),\n  headerTag: makeProp(PROP_TYPE_STRING, 'h1'),\n  lead: makeProp(PROP_TYPE_STRING),\n  leadHtml: makeProp(PROP_TYPE_STRING),\n  leadTag: makeProp(PROP_TYPE_STRING, 'p'),\n  tag: makeProp(PROP_TYPE_STRING, 'div'),\n  textVariant: makeProp(PROP_TYPE_STRING)\n}, NAME_JUMBOTRON); // --- Main component ---\n// @vue/component\n\nexport var BJumbotron = /*#__PURE__*/extend({\n  name: NAME_JUMBOTRON,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class2;\n\n    var props = _ref.props,\n        data = _ref.data,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots;\n    var header = props.header,\n        headerHtml = props.headerHtml,\n        lead = props.lead,\n        leadHtml = props.leadHtml,\n        textVariant = props.textVariant,\n        bgVariant = props.bgVariant,\n        borderVariant = props.borderVariant;\n    var $scopedSlots = scopedSlots || {};\n    var $slots = slots();\n    var slotScope = {};\n    var $header = h();\n    var hasHeaderSlot = hasNormalizedSlot(SLOT_NAME_HEADER, $scopedSlots, $slots);\n\n    if (hasHeaderSlot || header || headerHtml) {\n      var headerLevel = props.headerLevel;\n      $header = h(props.headerTag, {\n        class: _defineProperty({}, \"display-\".concat(headerLevel), headerLevel),\n        domProps: hasHeaderSlot ? {} : htmlOrText(headerHtml, header)\n      }, normalizeSlot(SLOT_NAME_HEADER, slotScope, $scopedSlots, $slots));\n    }\n\n    var $lead = h();\n    var hasLeadSlot = hasNormalizedSlot(SLOT_NAME_LEAD, $scopedSlots, $slots);\n\n    if (hasLeadSlot || lead || leadHtml) {\n      $lead = h(props.leadTag, {\n        staticClass: 'lead',\n        domProps: hasLeadSlot ? {} : htmlOrText(leadHtml, lead)\n      }, normalizeSlot(SLOT_NAME_LEAD, slotScope, $scopedSlots, $slots));\n    }\n\n    var $children = [$header, $lead, normalizeSlot(SLOT_NAME_DEFAULT, slotScope, $scopedSlots, $slots)]; // If fluid, wrap content in a container\n\n    if (props.fluid) {\n      $children = [h(BContainer, {\n        props: {\n          fluid: props.containerFluid\n        }\n      }, $children)];\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'jumbotron',\n      class: (_class2 = {\n        'jumbotron-fluid': props.fluid\n      }, _defineProperty(_class2, \"text-\".concat(textVariant), textVariant), _defineProperty(_class2, \"bg-\".concat(bgVariant), bgVariant), _defineProperty(_class2, \"border-\".concat(borderVariant), borderVariant), _defineProperty(_class2, \"border\", borderVariant), _class2)\n    }), $children);\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}