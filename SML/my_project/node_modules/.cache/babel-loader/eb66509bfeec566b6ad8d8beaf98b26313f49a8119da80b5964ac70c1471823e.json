{"ast":null,"code":"import { Vue } from '../vue';\nimport { DEFAULT_BREAKPOINT, PROP_NAME } from '../constants/config';\nimport { cloneDeep } from './clone-deep';\nimport { memoize } from './memoize'; // --- Constants ---\n\nvar VueProto = Vue.prototype; // --- Getter methods ---\n// All methods return a deep clone (immutable) copy of the config value,\n// to prevent mutation of the user config object\n// Get the current config\n\nexport var getConfig = function getConfig() {\n  var bvConfig = VueProto[PROP_NAME];\n  return bvConfig ? bvConfig.getConfig() : {};\n}; // Method to grab a config value based on a dotted/array notation key\n\nexport var getConfigValue = function getConfigValue(key) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var bvConfig = VueProto[PROP_NAME];\n  return bvConfig ? bvConfig.getConfigValue(key, defaultValue) : cloneDeep(defaultValue);\n}; // Method to grab a config value for a particular component\n\nexport var getComponentConfig = function getComponentConfig(key) {\n  var propKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  // Return the particular config value for key if specified,\n  // otherwise we return the full config (or an empty object if not found)\n  return propKey ? getConfigValue(\"\".concat(key, \".\").concat(propKey), defaultValue) : getConfigValue(key, {});\n}; // Get all breakpoint names\n\nexport var getBreakpoints = function getBreakpoints() {\n  return getConfigValue('breakpoints', DEFAULT_BREAKPOINT);\n}; // Private method for caching breakpoint names\n\nvar _getBreakpointsCached = memoize(function () {\n  return getBreakpoints();\n}); // Get all breakpoint names (cached)\n\nexport var getBreakpointsCached = function getBreakpointsCached() {\n  return cloneDeep(_getBreakpointsCached());\n}; // Get breakpoints with the smallest breakpoint set as ''\n// Useful for components that create breakpoint specific props\n\nexport var getBreakpointsUp = function getBreakpointsUp() {\n  var breakpoints = getBreakpoints();\n  breakpoints[0] = '';\n  return breakpoints;\n}; // Get breakpoints with the smallest breakpoint set as '' (cached)\n// Useful for components that create breakpoint specific props\n\nexport var getBreakpointsUpCached = memoize(function () {\n  var breakpoints = getBreakpointsCached();\n  breakpoints[0] = '';\n  return breakpoints;\n}); // Get breakpoints with the largest breakpoint set as ''\n\nexport var getBreakpointsDown = function getBreakpointsDown() {\n  var breakpoints = getBreakpoints();\n  breakpoints[breakpoints.length - 1] = '';\n  return breakpoints;\n}; // Get breakpoints with the largest breakpoint set as '' (cached)\n// Useful for components that create breakpoint specific props\n\n/* istanbul ignore next: we don't use this method anywhere, yet */\n\nexport var getBreakpointsDownCached = function getBreakpointsDownCached() {\n  var breakpoints = getBreakpointsCached();\n  breakpoints[breakpoints.length - 1] = '';\n  return breakpoints;\n};","map":{"version":3,"names":["Vue","DEFAULT_BREAKPOINT","PROP_NAME","cloneDeep","memoize","VueProto","prototype","getConfig","bvConfig","getConfigValue","key","defaultValue","arguments","length","undefined","getComponentConfig","propKey","concat","getBreakpoints","_getBreakpointsCached","getBreakpointsCached","getBreakpointsUp","breakpoints","getBreakpointsUpCached","getBreakpointsDown","getBreakpointsDownCached"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/utils/config.js"],"sourcesContent":["import { Vue } from '../vue';\nimport { DEFAULT_BREAKPOINT, PROP_NAME } from '../constants/config';\nimport { cloneDeep } from './clone-deep';\nimport { memoize } from './memoize'; // --- Constants ---\n\nvar VueProto = Vue.prototype; // --- Getter methods ---\n// All methods return a deep clone (immutable) copy of the config value,\n// to prevent mutation of the user config object\n// Get the current config\n\nexport var getConfig = function getConfig() {\n  var bvConfig = VueProto[PROP_NAME];\n  return bvConfig ? bvConfig.getConfig() : {};\n}; // Method to grab a config value based on a dotted/array notation key\n\nexport var getConfigValue = function getConfigValue(key) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  var bvConfig = VueProto[PROP_NAME];\n  return bvConfig ? bvConfig.getConfigValue(key, defaultValue) : cloneDeep(defaultValue);\n}; // Method to grab a config value for a particular component\n\nexport var getComponentConfig = function getComponentConfig(key) {\n  var propKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  // Return the particular config value for key if specified,\n  // otherwise we return the full config (or an empty object if not found)\n  return propKey ? getConfigValue(\"\".concat(key, \".\").concat(propKey), defaultValue) : getConfigValue(key, {});\n}; // Get all breakpoint names\n\nexport var getBreakpoints = function getBreakpoints() {\n  return getConfigValue('breakpoints', DEFAULT_BREAKPOINT);\n}; // Private method for caching breakpoint names\n\nvar _getBreakpointsCached = memoize(function () {\n  return getBreakpoints();\n}); // Get all breakpoint names (cached)\n\n\nexport var getBreakpointsCached = function getBreakpointsCached() {\n  return cloneDeep(_getBreakpointsCached());\n}; // Get breakpoints with the smallest breakpoint set as ''\n// Useful for components that create breakpoint specific props\n\nexport var getBreakpointsUp = function getBreakpointsUp() {\n  var breakpoints = getBreakpoints();\n  breakpoints[0] = '';\n  return breakpoints;\n}; // Get breakpoints with the smallest breakpoint set as '' (cached)\n// Useful for components that create breakpoint specific props\n\nexport var getBreakpointsUpCached = memoize(function () {\n  var breakpoints = getBreakpointsCached();\n  breakpoints[0] = '';\n  return breakpoints;\n}); // Get breakpoints with the largest breakpoint set as ''\n\nexport var getBreakpointsDown = function getBreakpointsDown() {\n  var breakpoints = getBreakpoints();\n  breakpoints[breakpoints.length - 1] = '';\n  return breakpoints;\n}; // Get breakpoints with the largest breakpoint set as '' (cached)\n// Useful for components that create breakpoint specific props\n\n/* istanbul ignore next: we don't use this method anywhere, yet */\n\nexport var getBreakpointsDownCached = function getBreakpointsDownCached() {\n  var breakpoints = getBreakpointsCached();\n  breakpoints[breakpoints.length - 1] = '';\n  return breakpoints;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}