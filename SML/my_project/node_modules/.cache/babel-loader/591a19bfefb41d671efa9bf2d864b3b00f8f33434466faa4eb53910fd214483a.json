{"ast":null,"code":"import { extend } from '../vue';\nimport { PROP_TYPE_ARRAY_OBJECT, PROP_TYPE_STRING } from '../constants/props';\nimport { get } from '../utils/get';\nimport { stripTags } from '../utils/html';\nimport { isArray, isPlainObject, isUndefined } from '../utils/inspect';\nimport { keys } from '../utils/object';\nimport { makeProp, makePropsConfigurable } from '../utils/props';\nimport { warn } from '../utils/warn'; // --- Constants ---\n\nvar OPTIONS_OBJECT_DEPRECATED_MSG = 'Setting prop \"options\" to an object is deprecated. Use the array format instead.'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  disabledField: makeProp(PROP_TYPE_STRING, 'disabled'),\n  htmlField: makeProp(PROP_TYPE_STRING, 'html'),\n  options: makeProp(PROP_TYPE_ARRAY_OBJECT, []),\n  textField: makeProp(PROP_TYPE_STRING, 'text'),\n  valueField: makeProp(PROP_TYPE_STRING, 'value')\n}, 'formOptionControls'); // --- Mixin ---\n// @vue/component\n\nexport var formOptionsMixin = extend({\n  props: props,\n  computed: {\n    formOptions: function formOptions() {\n      return this.normalizeOptions(this.options);\n    }\n  },\n  methods: {\n    normalizeOption: function normalizeOption(option) {\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      // When the option is an object, normalize it\n      if (isPlainObject(option)) {\n        var value = get(option, this.valueField);\n        var text = get(option, this.textField);\n        return {\n          value: isUndefined(value) ? key || text : value,\n          text: stripTags(String(isUndefined(text) ? key : text)),\n          html: get(option, this.htmlField),\n          disabled: Boolean(get(option, this.disabledField))\n        };\n      } // Otherwise create an `<option>` object from the given value\n\n      return {\n        value: key || option,\n        text: stripTags(String(option)),\n        disabled: false\n      };\n    },\n    normalizeOptions: function normalizeOptions(options) {\n      var _this = this;\n\n      // Normalize the given options array\n      if (isArray(options)) {\n        return options.map(function (option) {\n          return _this.normalizeOption(option);\n        });\n      } else if (isPlainObject(options)) {\n        // Deprecate the object options format\n        warn(OPTIONS_OBJECT_DEPRECATED_MSG, this.$options.name); // Normalize a `options` object to an array of options\n\n        return keys(options).map(function (key) {\n          return _this.normalizeOption(options[key] || {}, key);\n        });\n      } // If not an array or object, return an empty array\n\n      /* istanbul ignore next */\n\n      return [];\n    }\n  }\n});","map":{"version":3,"names":["extend","PROP_TYPE_ARRAY_OBJECT","PROP_TYPE_STRING","get","stripTags","isArray","isPlainObject","isUndefined","keys","makeProp","makePropsConfigurable","warn","OPTIONS_OBJECT_DEPRECATED_MSG","props","disabledField","htmlField","options","textField","valueField","formOptionsMixin","computed","formOptions","normalizeOptions","methods","normalizeOption","option","key","arguments","length","undefined","value","text","String","html","disabled","Boolean","_this","map","$options","name"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/mixins/form-options.js"],"sourcesContent":["import { extend } from '../vue';\nimport { PROP_TYPE_ARRAY_OBJECT, PROP_TYPE_STRING } from '../constants/props';\nimport { get } from '../utils/get';\nimport { stripTags } from '../utils/html';\nimport { isArray, isPlainObject, isUndefined } from '../utils/inspect';\nimport { keys } from '../utils/object';\nimport { makeProp, makePropsConfigurable } from '../utils/props';\nimport { warn } from '../utils/warn'; // --- Constants ---\n\nvar OPTIONS_OBJECT_DEPRECATED_MSG = 'Setting prop \"options\" to an object is deprecated. Use the array format instead.'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  disabledField: makeProp(PROP_TYPE_STRING, 'disabled'),\n  htmlField: makeProp(PROP_TYPE_STRING, 'html'),\n  options: makeProp(PROP_TYPE_ARRAY_OBJECT, []),\n  textField: makeProp(PROP_TYPE_STRING, 'text'),\n  valueField: makeProp(PROP_TYPE_STRING, 'value')\n}, 'formOptionControls'); // --- Mixin ---\n// @vue/component\n\nexport var formOptionsMixin = extend({\n  props: props,\n  computed: {\n    formOptions: function formOptions() {\n      return this.normalizeOptions(this.options);\n    }\n  },\n  methods: {\n    normalizeOption: function normalizeOption(option) {\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      // When the option is an object, normalize it\n      if (isPlainObject(option)) {\n        var value = get(option, this.valueField);\n        var text = get(option, this.textField);\n        return {\n          value: isUndefined(value) ? key || text : value,\n          text: stripTags(String(isUndefined(text) ? key : text)),\n          html: get(option, this.htmlField),\n          disabled: Boolean(get(option, this.disabledField))\n        };\n      } // Otherwise create an `<option>` object from the given value\n\n\n      return {\n        value: key || option,\n        text: stripTags(String(option)),\n        disabled: false\n      };\n    },\n    normalizeOptions: function normalizeOptions(options) {\n      var _this = this;\n\n      // Normalize the given options array\n      if (isArray(options)) {\n        return options.map(function (option) {\n          return _this.normalizeOption(option);\n        });\n      } else if (isPlainObject(options)) {\n        // Deprecate the object options format\n        warn(OPTIONS_OBJECT_DEPRECATED_MSG, this.$options.name); // Normalize a `options` object to an array of options\n\n        return keys(options).map(function (key) {\n          return _this.normalizeOption(options[key] || {}, key);\n        });\n      } // If not an array or object, return an empty array\n\n      /* istanbul ignore next */\n\n\n      return [];\n    }\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}