{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Tooltip \"Class\" (Built as a renderless Vue instance)\n//\n// Handles trigger events, etc.\n// Instantiates template on demand\nimport { COMPONENT_UID_KEY, extend } from '../../../vue';\nimport { NAME_MODAL, NAME_TOOLTIP_HELPER } from '../../../constants/components';\nimport { EVENT_NAME_DISABLE, EVENT_NAME_DISABLED, EVENT_NAME_ENABLE, EVENT_NAME_ENABLED, EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT, EVENT_NAME_HIDDEN, EVENT_NAME_HIDE, EVENT_NAME_MOUSEENTER, EVENT_NAME_MOUSELEAVE, EVENT_NAME_SHOW, EVENT_NAME_SHOWN, EVENT_OPTIONS_NO_CAPTURE, HOOK_EVENT_NAME_BEFORE_DESTROY, HOOK_EVENT_NAME_DESTROYED } from '../../../constants/events';\nimport { useParentMixin } from '../../../mixins/use-parent';\nimport { arrayIncludes, concat, from as arrayFrom } from '../../../utils/array';\nimport { getInstanceFromElement } from '../../../utils/element-to-vue-instance-registry';\nimport { attemptFocus, closest, contains, getAttr, getById, hasAttr, hasClass, isDisabled, isElement, isVisible, removeAttr, requestAF, select, setAttr } from '../../../utils/dom';\nimport { eventOff, eventOn, eventOnOff, getRootActionEventName, getRootEventName } from '../../../utils/events';\nimport { getScopeId } from '../../../utils/get-scope-id';\nimport { identity } from '../../../utils/identity';\nimport { isFunction, isNumber, isPlainObject, isString, isUndefined, isUndefinedOrNull } from '../../../utils/inspect';\nimport { looseEqual } from '../../../utils/loose-equal';\nimport { mathMax } from '../../../utils/math';\nimport { noop } from '../../../utils/noop';\nimport { toInteger } from '../../../utils/number';\nimport { keys } from '../../../utils/object';\nimport { warn } from '../../../utils/warn';\nimport { BvEvent } from '../../../utils/bv-event.class';\nimport { createNewChildComponent } from '../../../utils/create-new-child-component';\nimport { listenOnRootMixin } from '../../../mixins/listen-on-root';\nimport { BVTooltipTemplate } from './bv-tooltip-template'; // --- Constants ---\n// Modal container selector for appending tooltip/popover\n\nvar MODAL_SELECTOR = '.modal-content'; // Modal `$root` hidden event\n\nvar ROOT_EVENT_NAME_MODAL_HIDDEN = getRootEventName(NAME_MODAL, EVENT_NAME_HIDDEN); // Sidebar container selector for appending tooltip/popover\n\nvar SIDEBAR_SELECTOR = '.b-sidebar'; // For finding the container to append to\n\nvar CONTAINER_SELECTOR = [MODAL_SELECTOR, SIDEBAR_SELECTOR].join(', '); // For dropdown sniffing\n\nvar DROPDOWN_CLASS = 'dropdown';\nvar DROPDOWN_OPEN_SELECTOR = '.dropdown-menu.show'; // Data attribute to temporary store the `title` attribute's value\n\nvar DATA_TITLE_ATTR = 'data-original-title'; // Data specific to popper and template\n// We don't use props, as we need reactivity (we can't pass reactive props)\n\nvar templateData = {\n  // Text string or Scoped slot function\n  title: '',\n  // Text string or Scoped slot function\n  content: '',\n  // String\n  variant: null,\n  // String, Array, Object\n  customClass: null,\n  // String or array of Strings (overwritten by BVPopper)\n  triggers: '',\n  // String (overwritten by BVPopper)\n  placement: 'auto',\n  // String or array of strings\n  fallbackPlacement: 'flip',\n  // Element or Component reference (or function that returns element) of\n  // the element that will have the trigger events bound, and is also\n  // default element for positioning\n  target: null,\n  // HTML ID, Element or Component reference\n  container: null,\n  // 'body'\n  // Boolean\n  noFade: false,\n  // 'scrollParent', 'viewport', 'window', Element, or Component reference\n  boundary: 'scrollParent',\n  // Tooltip/popover will try and stay away from\n  // boundary edge by this many pixels (Number)\n  boundaryPadding: 5,\n  // Arrow offset (Number)\n  offset: 0,\n  // Hover/focus delay (Number or Object)\n  delay: 0,\n  // Arrow of Tooltip/popover will try and stay away from\n  // the edge of tooltip/popover edge by this many pixels\n  arrowPadding: 6,\n  // Interactive state (Boolean)\n  interactive: true,\n  // Disabled state (Boolean)\n  disabled: false,\n  // ID to use for tooltip/popover\n  id: null,\n  // Flag used by directives only, for HTML content\n  html: false\n}; // --- Main component ---\n// @vue/component\n\nexport var BVTooltip = /*#__PURE__*/extend({\n  name: NAME_TOOLTIP_HELPER,\n  mixins: [listenOnRootMixin, useParentMixin],\n  data: function data() {\n    return _objectSpread(_objectSpread({}, templateData), {}, {\n      // State management data\n      activeTrigger: {\n        // manual: false,\n        hover: false,\n        click: false,\n        focus: false\n      },\n      localShow: false\n    });\n  },\n  computed: {\n    templateType: function templateType() {\n      // Overwritten by BVPopover\n      return 'tooltip';\n    },\n    computedId: function computedId() {\n      return this.id || \"__bv_\".concat(this.templateType, \"_\").concat(this[COMPONENT_UID_KEY], \"__\");\n    },\n    computedDelay: function computedDelay() {\n      // Normalizes delay into object form\n      var delay = {\n        show: 0,\n        hide: 0\n      };\n      if (isPlainObject(this.delay)) {\n        delay.show = mathMax(toInteger(this.delay.show, 0), 0);\n        delay.hide = mathMax(toInteger(this.delay.hide, 0), 0);\n      } else if (isNumber(this.delay) || isString(this.delay)) {\n        delay.show = delay.hide = mathMax(toInteger(this.delay, 0), 0);\n      }\n      return delay;\n    },\n    computedTriggers: function computedTriggers() {\n      // Returns the triggers in sorted array form\n      // TODO: Switch this to object form for easier lookup\n      return concat(this.triggers).filter(identity).join(' ').trim().toLowerCase().split(/\\s+/).sort();\n    },\n    isWithActiveTrigger: function isWithActiveTrigger() {\n      for (var trigger in this.activeTrigger) {\n        if (this.activeTrigger[trigger]) {\n          return true;\n        }\n      }\n      return false;\n    },\n    computedTemplateData: function computedTemplateData() {\n      var title = this.title,\n        content = this.content,\n        variant = this.variant,\n        customClass = this.customClass,\n        noFade = this.noFade,\n        interactive = this.interactive;\n      return {\n        title: title,\n        content: content,\n        variant: variant,\n        customClass: customClass,\n        noFade: noFade,\n        interactive: interactive\n      };\n    }\n  },\n  watch: {\n    computedTriggers: function computedTriggers(newTriggers, oldTriggers) {\n      var _this = this;\n\n      // Triggers have changed, so re-register them\n\n      /* istanbul ignore next */\n      if (!looseEqual(newTriggers, oldTriggers)) {\n        this.$nextTick(function () {\n          // Disable trigger listeners\n          _this.unListen(); // Clear any active triggers that are no longer in the list of triggers\n\n          oldTriggers.forEach(function (trigger) {\n            if (!arrayIncludes(newTriggers, trigger)) {\n              if (_this.activeTrigger[trigger]) {\n                _this.activeTrigger[trigger] = false;\n              }\n            }\n          }); // Re-enable the trigger listeners\n\n          _this.listen();\n        });\n      }\n    },\n    computedTemplateData: function computedTemplateData() {\n      // If any of the while open reactive \"props\" change,\n      // ensure that the template updates accordingly\n      this.handleTemplateUpdate();\n    },\n    title: function title(newValue, oldValue) {\n      // Make sure to hide the tooltip when the title is set empty\n      if (newValue !== oldValue && !newValue) {\n        this.hide();\n      }\n    },\n    disabled: function disabled(newValue) {\n      if (newValue) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    // Create non-reactive properties\n    this.$_tip = null;\n    this.$_hoverTimeout = null;\n    this.$_hoverState = '';\n    this.$_visibleInterval = null;\n    this.$_enabled = !this.disabled;\n    this.$_noop = noop.bind(this); // Destroy ourselves when the parent is destroyed\n\n    if (this.bvParent) {\n      this.bvParent.$once(HOOK_EVENT_NAME_BEFORE_DESTROY, function () {\n        _this2.$nextTick(function () {\n          // In a `requestAF()` to release control back to application\n          requestAF(function () {\n            _this2.$destroy();\n          });\n        });\n      });\n    }\n    this.$nextTick(function () {\n      var target = _this2.getTarget();\n      if (target && contains(document.body, target)) {\n        // Copy the parent's scoped style attribute\n        _this2.scopeId = getScopeId(_this2.bvParent); // Set up all trigger handlers and listeners\n\n        _this2.listen();\n      } else {\n        /* istanbul ignore next */\n        warn(isString(_this2.target) ? \"Unable to find target element by ID \\\"#\".concat(_this2.target, \"\\\" in document.\") : 'The provided target is no valid HTML element.', _this2.templateType);\n      }\n    });\n  },\n  /* istanbul ignore next */\n  updated: function updated() {\n    // Usually called when the slots/data changes\n    this.$nextTick(this.handleTemplateUpdate);\n  },\n  /* istanbul ignore next */\n  deactivated: function deactivated() {\n    // In a keepalive that has been deactivated, so hide\n    // the tooltip/popover if it is showing\n    this.forceHide();\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Remove all handler/listeners\n    this.unListen();\n    this.setWhileOpenListeners(false); // Clear any timeouts/intervals\n\n    this.clearHoverTimeout();\n    this.clearVisibilityInterval(); // Destroy the template\n\n    this.destroyTemplate(); // Remove any other private properties created during create\n\n    this.$_noop = null;\n  },\n  methods: {\n    // --- Methods for creating and destroying the template ---\n    getTemplate: function getTemplate() {\n      // Overridden by BVPopover\n      return BVTooltipTemplate;\n    },\n    updateData: function updateData() {\n      var _this3 = this;\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // Method for updating popper/template data\n      // We only update data if it exists, and has not changed\n      var titleUpdated = false;\n      keys(templateData).forEach(function (prop) {\n        if (!isUndefined(data[prop]) && _this3[prop] !== data[prop]) {\n          _this3[prop] = data[prop];\n          if (prop === 'title') {\n            titleUpdated = true;\n          }\n        }\n      }); // If the title has updated, we may need to handle the `title`\n      // attribute on the trigger target\n      // We only do this while the template is open\n\n      if (titleUpdated && this.localShow) {\n        this.fixTitle();\n      }\n    },\n    createTemplateAndShow: function createTemplateAndShow() {\n      // Creates the template instance and show it\n      var container = this.getContainer();\n      var Template = this.getTemplate();\n      var $tip = this.$_tip = createNewChildComponent(this, Template, {\n        // The following is not reactive to changes in the props data\n        propsData: {\n          // These values cannot be changed while template is showing\n          id: this.computedId,\n          html: this.html,\n          placement: this.placement,\n          fallbackPlacement: this.fallbackPlacement,\n          target: this.getPlacementTarget(),\n          boundary: this.getBoundary(),\n          // Ensure the following are integers\n          offset: toInteger(this.offset, 0),\n          arrowPadding: toInteger(this.arrowPadding, 0),\n          boundaryPadding: toInteger(this.boundaryPadding, 0)\n        }\n      }); // We set the initial reactive data (values that can be changed while open)\n\n      this.handleTemplateUpdate(); // Template transition phase events (handled once only)\n      // When the template has mounted, but not visibly shown yet\n\n      $tip.$once(EVENT_NAME_SHOW, this.onTemplateShow); // When the template has completed showing\n\n      $tip.$once(EVENT_NAME_SHOWN, this.onTemplateShown); // When the template has started to hide\n\n      $tip.$once(EVENT_NAME_HIDE, this.onTemplateHide); // When the template has completed hiding\n\n      $tip.$once(EVENT_NAME_HIDDEN, this.onTemplateHidden); // When the template gets destroyed for any reason\n\n      $tip.$once(HOOK_EVENT_NAME_DESTROYED, this.destroyTemplate); // Convenience events from template\n      // To save us from manually adding/removing DOM\n      // listeners to tip element when it is open\n\n      $tip.$on(EVENT_NAME_FOCUSIN, this.handleEvent);\n      $tip.$on(EVENT_NAME_FOCUSOUT, this.handleEvent);\n      $tip.$on(EVENT_NAME_MOUSEENTER, this.handleEvent);\n      $tip.$on(EVENT_NAME_MOUSELEAVE, this.handleEvent); // Mount (which triggers the `show`)\n\n      $tip.$mount(container.appendChild(document.createElement('div'))); // Template will automatically remove its markup from DOM when hidden\n    },\n\n    hideTemplate: function hideTemplate() {\n      // Trigger the template to start hiding\n      // The template will emit the `hide` event after this and\n      // then emit the `hidden` event once it is fully hidden\n      // The `hook:destroyed` will also be called (safety measure)\n      this.$_tip && this.$_tip.hide(); // Clear out any stragging active triggers\n\n      this.clearActiveTriggers(); // Reset the hover state\n\n      this.$_hoverState = '';\n    },\n    // Destroy the template instance and reset state\n    destroyTemplate: function destroyTemplate() {\n      this.setWhileOpenListeners(false);\n      this.clearHoverTimeout();\n      this.$_hoverState = '';\n      this.clearActiveTriggers();\n      this.localPlacementTarget = null;\n      try {\n        this.$_tip.$destroy();\n      } catch (_unused) {}\n      this.$_tip = null;\n      this.removeAriaDescribedby();\n      this.restoreTitle();\n      this.localShow = false;\n    },\n    getTemplateElement: function getTemplateElement() {\n      return this.$_tip ? this.$_tip.$el : null;\n    },\n    handleTemplateUpdate: function handleTemplateUpdate() {\n      var _this4 = this;\n\n      // Update our template title/content \"props\"\n      // So that the template updates accordingly\n      var $tip = this.$_tip;\n      if ($tip) {\n        var props = ['title', 'content', 'variant', 'customClass', 'noFade', 'interactive']; // Only update the values if they have changed\n\n        props.forEach(function (prop) {\n          if ($tip[prop] !== _this4[prop]) {\n            $tip[prop] = _this4[prop];\n          }\n        });\n      }\n    },\n    // --- Show/Hide handlers ---\n    // Show the tooltip\n    show: function show() {\n      var target = this.getTarget();\n      if (!target || !contains(document.body, target) || !isVisible(target) || this.dropdownOpen() || (isUndefinedOrNull(this.title) || this.title === '') && (isUndefinedOrNull(this.content) || this.content === '')) {\n        // If trigger element isn't in the DOM or is not visible, or\n        // is on an open dropdown toggle, or has no content, then\n        // we exit without showing\n        return;\n      } // If tip already exists, exit early\n\n      if (this.$_tip || this.localShow) {\n        /* istanbul ignore next */\n        return;\n      } // In the process of showing\n\n      this.localShow = true; // Create a cancelable BvEvent\n\n      var showEvent = this.buildEvent(EVENT_NAME_SHOW, {\n        cancelable: true\n      });\n      this.emitEvent(showEvent); // Don't show if event cancelled\n\n      /* istanbul ignore if */\n\n      if (showEvent.defaultPrevented) {\n        // Destroy the template (if for some reason it was created)\n        this.destroyTemplate();\n        return;\n      } // Fix the title attribute on target\n\n      this.fixTitle(); // Set aria-describedby on target\n\n      this.addAriaDescribedby(); // Create and show the tooltip\n\n      this.createTemplateAndShow();\n    },\n    hide: function hide() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      // Hide the tooltip\n      var tip = this.getTemplateElement();\n      /* istanbul ignore if */\n\n      if (!tip || !this.localShow) {\n        this.restoreTitle();\n        return;\n      } // Emit cancelable BvEvent 'hide'\n      // We disable cancelling if `force` is true\n\n      var hideEvent = this.buildEvent(EVENT_NAME_HIDE, {\n        cancelable: !force\n      });\n      this.emitEvent(hideEvent);\n      /* istanbul ignore if: ignore for now */\n\n      if (hideEvent.defaultPrevented) {\n        // Don't hide if event cancelled\n        return;\n      } // Tell the template to hide\n\n      this.hideTemplate();\n    },\n    forceHide: function forceHide() {\n      // Forcefully hides/destroys the template, regardless of any active triggers\n      var tip = this.getTemplateElement();\n      if (!tip || !this.localShow) {\n        /* istanbul ignore next */\n        return;\n      } // Disable while open listeners/watchers\n      // This is also done in the template `hide` event handler\n\n      this.setWhileOpenListeners(false); // Clear any hover enter/leave event\n\n      this.clearHoverTimeout();\n      this.$_hoverState = '';\n      this.clearActiveTriggers(); // Disable the fade animation on the template\n\n      if (this.$_tip) {\n        this.$_tip.noFade = true;\n      } // Hide the tip (with force = true)\n\n      this.hide(true);\n    },\n    enable: function enable() {\n      this.$_enabled = true; // Create a non-cancelable BvEvent\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_ENABLED));\n    },\n    disable: function disable() {\n      this.$_enabled = false; // Create a non-cancelable BvEvent\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_DISABLED));\n    },\n    // --- Handlers for template events ---\n    // When template is inserted into DOM, but not yet shown\n    onTemplateShow: function onTemplateShow() {\n      // Enable while open listeners/watchers\n      this.setWhileOpenListeners(true);\n    },\n    // When template show transition completes\n    onTemplateShown: function onTemplateShown() {\n      var prevHoverState = this.$_hoverState;\n      this.$_hoverState = '';\n      /* istanbul ignore next: occasional Node 10 coverage error */\n\n      if (prevHoverState === 'out') {\n        this.leave(null);\n      } // Emit a non-cancelable BvEvent 'shown'\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_SHOWN));\n    },\n    // When template is starting to hide\n    onTemplateHide: function onTemplateHide() {\n      // Disable while open listeners/watchers\n      this.setWhileOpenListeners(false);\n    },\n    // When template has completed closing (just before it self destructs)\n    onTemplateHidden: function onTemplateHidden() {\n      // Destroy the template\n      this.destroyTemplate(); // Emit a non-cancelable BvEvent 'shown'\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_HIDDEN));\n    },\n    // --- Helper methods ---\n    getTarget: function getTarget() {\n      var target = this.target;\n      if (isString(target)) {\n        target = getById(target.replace(/^#/, ''));\n      } else if (isFunction(target)) {\n        target = target();\n      } else if (target) {\n        target = target.$el || target;\n      }\n      return isElement(target) ? target : null;\n    },\n    getPlacementTarget: function getPlacementTarget() {\n      // This is the target that the tooltip will be placed on, which may not\n      // necessarily be the same element that has the trigger event listeners\n      // For now, this is the same as target\n      // TODO:\n      //   Add in child selector support\n      //   Add in visibility checks for this element\n      //   Fallback to target if not found\n      return this.getTarget();\n    },\n    getTargetId: function getTargetId() {\n      // Returns the ID of the trigger element\n      var target = this.getTarget();\n      return target && target.id ? target.id : null;\n    },\n    getContainer: function getContainer() {\n      // Handle case where container may be a component ref\n      var container = this.container ? this.container.$el || this.container : false;\n      var body = document.body;\n      var target = this.getTarget(); // If we are in a modal, we append to the modal, If we\n      // are in a sidebar, we append to the sidebar, else append\n      // to body, unless a container is specified\n      // TODO:\n      //   Template should periodically check to see if it is in dom\n      //   And if not, self destruct (if container got v-if'ed out of DOM)\n      //   Or this could possibly be part of the visibility check\n\n      return container === false ? closest(CONTAINER_SELECTOR, target) || body : /*istanbul ignore next */\n      isString(container) ? /*istanbul ignore next */\n      getById(container.replace(/^#/, '')) || body : /*istanbul ignore next */\n      body;\n    },\n    getBoundary: function getBoundary() {\n      return this.boundary ? this.boundary.$el || this.boundary : 'scrollParent';\n    },\n    isInModal: function isInModal() {\n      var target = this.getTarget();\n      return target && closest(MODAL_SELECTOR, target);\n    },\n    isDropdown: function isDropdown() {\n      // Returns true if trigger is a dropdown\n      var target = this.getTarget();\n      return target && hasClass(target, DROPDOWN_CLASS);\n    },\n    dropdownOpen: function dropdownOpen() {\n      // Returns true if trigger is a dropdown and the dropdown menu is open\n      var target = this.getTarget();\n      return this.isDropdown() && target && select(DROPDOWN_OPEN_SELECTOR, target);\n    },\n    clearHoverTimeout: function clearHoverTimeout() {\n      clearTimeout(this.$_hoverTimeout);\n      this.$_hoverTimeout = null;\n    },\n    clearVisibilityInterval: function clearVisibilityInterval() {\n      clearInterval(this.$_visibleInterval);\n      this.$_visibleInterval = null;\n    },\n    clearActiveTriggers: function clearActiveTriggers() {\n      for (var trigger in this.activeTrigger) {\n        this.activeTrigger[trigger] = false;\n      }\n    },\n    addAriaDescribedby: function addAriaDescribedby() {\n      // Add aria-describedby on trigger element, without removing any other IDs\n      var target = this.getTarget();\n      var desc = getAttr(target, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).concat(this.computedId).join(' ').trim(); // Update/add aria-described by\n\n      setAttr(target, 'aria-describedby', desc);\n    },\n    removeAriaDescribedby: function removeAriaDescribedby() {\n      var _this5 = this;\n\n      // Remove aria-describedby on trigger element, without removing any other IDs\n      var target = this.getTarget();\n      var desc = getAttr(target, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).filter(function (d) {\n        return d !== _this5.computedId;\n      }).join(' ').trim(); // Update or remove aria-describedby\n\n      if (desc) {\n        /* istanbul ignore next */\n        setAttr(target, 'aria-describedby', desc);\n      } else {\n        removeAttr(target, 'aria-describedby');\n      }\n    },\n    fixTitle: function fixTitle() {\n      // If the target has a `title` attribute,\n      // remove it and store it on a data attribute\n      var target = this.getTarget();\n      if (hasAttr(target, 'title')) {\n        // Get `title` attribute value and remove it from target\n        var title = getAttr(target, 'title');\n        setAttr(target, 'title', ''); // Only set the data attribute when the value is truthy\n\n        if (title) {\n          setAttr(target, DATA_TITLE_ATTR, title);\n        }\n      }\n    },\n    restoreTitle: function restoreTitle() {\n      // If the target had a `title` attribute,\n      // restore it and remove the data attribute\n      var target = this.getTarget();\n      if (hasAttr(target, DATA_TITLE_ATTR)) {\n        // Get data attribute value and remove it from target\n        var title = getAttr(target, DATA_TITLE_ATTR);\n        removeAttr(target, DATA_TITLE_ATTR); // Only restore the `title` attribute when the value is truthy\n\n        if (title) {\n          setAttr(target, 'title', title);\n        }\n      }\n    },\n    // --- BvEvent helpers ---\n    buildEvent: function buildEvent(type) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Defaults to a non-cancellable event\n      return new BvEvent(type, _objectSpread({\n        cancelable: false,\n        target: this.getTarget(),\n        relatedTarget: this.getTemplateElement() || null,\n        componentId: this.computedId,\n        vueTarget: this\n      }, options));\n    },\n    emitEvent: function emitEvent(bvEvent) {\n      var type = bvEvent.type;\n      this.emitOnRoot(getRootEventName(this.templateType, type), bvEvent);\n      this.$emit(type, bvEvent);\n    },\n    // --- Event handler setup methods ---\n    listen: function listen() {\n      var _this6 = this;\n\n      // Enable trigger event handlers\n      var el = this.getTarget();\n      if (!el) {\n        /* istanbul ignore next */\n        return;\n      } // Listen for global show/hide events\n\n      this.setRootListener(true); // Set up our listeners on the target trigger element\n\n      this.computedTriggers.forEach(function (trigger) {\n        if (trigger === 'click') {\n          eventOn(el, 'click', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'focus') {\n          eventOn(el, 'focusin', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n          eventOn(el, 'focusout', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'blur') {\n          // Used to close $tip when element loses focus\n\n          /* istanbul ignore next */\n          eventOn(el, 'focusout', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'hover') {\n          eventOn(el, 'mouseenter', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n          eventOn(el, 'mouseleave', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        }\n      }, this);\n    },\n    /* istanbul ignore next */\n    unListen: function unListen() {\n      var _this7 = this;\n\n      // Remove trigger event handlers\n      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave'];\n      var target = this.getTarget(); // Stop listening for global show/hide/enable/disable events\n\n      this.setRootListener(false); // Clear out any active target listeners\n\n      events.forEach(function (event) {\n        target && eventOff(target, event, _this7.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n      }, this);\n    },\n    setRootListener: function setRootListener(on) {\n      // Listen for global `bv::{hide|show}::{tooltip|popover}` hide request event\n      var method = on ? 'listenOnRoot' : 'listenOffRoot';\n      var type = this.templateType;\n      this[method](getRootActionEventName(type, EVENT_NAME_HIDE), this.doHide);\n      this[method](getRootActionEventName(type, EVENT_NAME_SHOW), this.doShow);\n      this[method](getRootActionEventName(type, EVENT_NAME_DISABLE), this.doDisable);\n      this[method](getRootActionEventName(type, EVENT_NAME_ENABLE), this.doEnable);\n    },\n    setWhileOpenListeners: function setWhileOpenListeners(on) {\n      // Events that are only registered when the template is showing\n      // Modal close events\n      this.setModalListener(on); // Dropdown open events (if we are attached to a dropdown)\n\n      this.setDropdownListener(on); // Periodic $element visibility check\n      // For handling when tip target is in <keepalive>, tabs, carousel, etc\n\n      this.visibleCheck(on); // On-touch start listeners\n\n      this.setOnTouchStartListener(on);\n    },\n    // Handler for periodic visibility check\n    visibleCheck: function visibleCheck(on) {\n      var _this8 = this;\n      this.clearVisibilityInterval();\n      var target = this.getTarget();\n      if (on) {\n        this.$_visibleInterval = setInterval(function () {\n          var tip = _this8.getTemplateElement();\n          if (tip && _this8.localShow && (!target.parentNode || !isVisible(target))) {\n            // Target element is no longer visible or not in DOM, so force-hide the tooltip\n            _this8.forceHide();\n          }\n        }, 100);\n      }\n    },\n    setModalListener: function setModalListener(on) {\n      // Handle case where tooltip/target is in a modal\n      if (this.isInModal()) {\n        // We can listen for modal hidden events on `$root`\n        this[on ? 'listenOnRoot' : 'listenOffRoot'](ROOT_EVENT_NAME_MODAL_HIDDEN, this.forceHide);\n      }\n    },\n    /* istanbul ignore next: JSDOM doesn't support `ontouchstart` */\n    setOnTouchStartListener: function setOnTouchStartListener(on) {\n      var _this9 = this;\n\n      // If this is a touch-enabled device we add extra empty\n      // `mouseover` listeners to the body's immediate children\n      // Only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement) {\n        arrayFrom(document.body.children).forEach(function (el) {\n          eventOnOff(on, el, 'mouseover', _this9.$_noop);\n        });\n      }\n    },\n    setDropdownListener: function setDropdownListener(on) {\n      var target = this.getTarget();\n      if (!target || !this.bvEventRoot || !this.isDropdown) {\n        return;\n      } // We can listen for dropdown shown events on its instance\n      // TODO:\n      //   We could grab the ID from the dropdown, and listen for\n      //   $root events for that particular dropdown id\n      //   Dropdown shown and hidden events will need to emit\n      //   Note: Dropdown auto-ID happens in a `$nextTick()` after mount\n      //         So the ID lookup would need to be done in a `$nextTick()`\n\n      var instance = getInstanceFromElement(target);\n      if (instance) {\n        instance[on ? '$on' : '$off'](EVENT_NAME_SHOWN, this.forceHide);\n      }\n    },\n    // --- Event handlers ---\n    handleEvent: function handleEvent(event) {\n      // General trigger event handler\n      // target is the trigger element\n      var target = this.getTarget();\n      if (!target || isDisabled(target) || !this.$_enabled || this.dropdownOpen()) {\n        // If disabled or not enabled, or if a dropdown that is open, don't do anything\n        // If tip is shown before element gets disabled, then tip will not\n        // close until no longer disabled or forcefully closed\n        return;\n      }\n      var type = event.type;\n      var triggers = this.computedTriggers;\n      if (type === 'click' && arrayIncludes(triggers, 'click')) {\n        this.click(event);\n      } else if (type === 'mouseenter' && arrayIncludes(triggers, 'hover')) {\n        // `mouseenter` is a non-bubbling event\n        this.enter(event);\n      } else if (type === 'focusin' && arrayIncludes(triggers, 'focus')) {\n        // `focusin` is a bubbling event\n        // `event` includes `relatedTarget` (element losing focus)\n        this.enter(event);\n      } else if (type === 'focusout' && (arrayIncludes(triggers, 'focus') || arrayIncludes(triggers, 'blur')) || type === 'mouseleave' && arrayIncludes(triggers, 'hover')) {\n        // `focusout` is a bubbling event\n        // `mouseleave` is a non-bubbling event\n        // `tip` is the template (will be null if not open)\n        var tip = this.getTemplateElement(); // `eventTarget` is the element which is losing focus/hover and\n\n        var eventTarget = event.target; // `relatedTarget` is the element gaining focus/hover\n\n        var relatedTarget = event.relatedTarget;\n        /* istanbul ignore next */\n\n        if (\n        // From tip to target\n        tip && contains(tip, eventTarget) && contains(target, relatedTarget) ||\n        // From target to tip\n        tip && contains(target, eventTarget) && contains(tip, relatedTarget) ||\n        // Within tip\n        tip && contains(tip, eventTarget) && contains(tip, relatedTarget) ||\n        // Within target\n        contains(target, eventTarget) && contains(target, relatedTarget)) {\n          // If focus/hover moves within `tip` and `target`, don't trigger a leave\n          return;\n        } // Otherwise trigger a leave\n\n        this.leave(event);\n      }\n    },\n    doHide: function doHide(id) {\n      // Programmatically hide tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Close all tooltips or popovers, or this specific tip (with ID)\n        this.forceHide();\n      }\n    },\n    doShow: function doShow(id) {\n      // Programmatically show tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Open all tooltips or popovers, or this specific tip (with ID)\n        this.show();\n      }\n    },\n    /*istanbul ignore next: ignore for now */\n    doDisable: function doDisable(id) /*istanbul ignore next: ignore for now */\n    {\n      // Programmatically disable tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Disable all tooltips or popovers (no ID), or this specific tip (with ID)\n        this.disable();\n      }\n    },\n    /*istanbul ignore next: ignore for now */\n    doEnable: function doEnable(id) /*istanbul ignore next: ignore for now */\n    {\n      // Programmatically enable tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Enable all tooltips or popovers (no ID), or this specific tip (with ID)\n        this.enable();\n      }\n    },\n    click: function click(event) {\n      if (!this.$_enabled || this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Get around a WebKit bug where `click` does not trigger focus events\n      // On most browsers, `click` triggers a `focusin`/`focus` event first\n      // Needed so that trigger 'click blur' works on iOS\n      // https://github.com/bootstrap-vue/bootstrap-vue/issues/5099\n      // We use `currentTarget` rather than `target` to trigger on the\n      // element, not the inner content\n\n      attemptFocus(event.currentTarget);\n      this.activeTrigger.click = !this.activeTrigger.click;\n      if (this.isWithActiveTrigger) {\n        this.enter(null);\n      } else {\n        /* istanbul ignore next */\n        this.leave(null);\n      }\n    },\n    /* istanbul ignore next */\n    toggle: function toggle() {\n      // Manual toggle handler\n      if (!this.$_enabled || this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Should we register as an active trigger?\n      // this.activeTrigger.manual = !this.activeTrigger.manual\n\n      if (this.localShow) {\n        this.leave(null);\n      } else {\n        this.enter(null);\n      }\n    },\n    enter: function enter() {\n      var _this10 = this;\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      // Opening trigger handler\n      // Note: Click events are sent with event === null\n      if (event) {\n        this.activeTrigger[event.type === 'focusin' ? 'focus' : 'hover'] = true;\n      }\n      /* istanbul ignore next */\n\n      if (this.localShow || this.$_hoverState === 'in') {\n        this.$_hoverState = 'in';\n        return;\n      }\n      this.clearHoverTimeout();\n      this.$_hoverState = 'in';\n      if (!this.computedDelay.show) {\n        this.show();\n      } else {\n        // Hide any title attribute while enter delay is active\n        this.fixTitle();\n        this.$_hoverTimeout = setTimeout(function () {\n          /* istanbul ignore else */\n          if (_this10.$_hoverState === 'in') {\n            _this10.show();\n          } else if (!_this10.localShow) {\n            _this10.restoreTitle();\n          }\n        }, this.computedDelay.show);\n      }\n    },\n    leave: function leave() {\n      var _this11 = this;\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      // Closing trigger handler\n      // Note: Click events are sent with event === null\n      if (event) {\n        this.activeTrigger[event.type === 'focusout' ? 'focus' : 'hover'] = false;\n        /* istanbul ignore next */\n\n        if (event.type === 'focusout' && arrayIncludes(this.computedTriggers, 'blur')) {\n          // Special case for `blur`: we clear out the other triggers\n          this.activeTrigger.click = false;\n          this.activeTrigger.hover = false;\n        }\n      }\n      /* istanbul ignore next: ignore for now */\n\n      if (this.isWithActiveTrigger) {\n        return;\n      }\n      this.clearHoverTimeout();\n      this.$_hoverState = 'out';\n      if (!this.computedDelay.hide) {\n        this.hide();\n      } else {\n        this.$_hoverTimeout = setTimeout(function () {\n          if (_this11.$_hoverState === 'out') {\n            _this11.hide();\n          }\n        }, this.computedDelay.hide);\n      }\n    }\n  }\n});","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","COMPONENT_UID_KEY","extend","NAME_MODAL","NAME_TOOLTIP_HELPER","EVENT_NAME_DISABLE","EVENT_NAME_DISABLED","EVENT_NAME_ENABLE","EVENT_NAME_ENABLED","EVENT_NAME_FOCUSIN","EVENT_NAME_FOCUSOUT","EVENT_NAME_HIDDEN","EVENT_NAME_HIDE","EVENT_NAME_MOUSEENTER","EVENT_NAME_MOUSELEAVE","EVENT_NAME_SHOW","EVENT_NAME_SHOWN","EVENT_OPTIONS_NO_CAPTURE","HOOK_EVENT_NAME_BEFORE_DESTROY","HOOK_EVENT_NAME_DESTROYED","useParentMixin","arrayIncludes","concat","from","arrayFrom","getInstanceFromElement","attemptFocus","closest","contains","getAttr","getById","hasAttr","hasClass","isDisabled","isElement","isVisible","removeAttr","requestAF","select","setAttr","eventOff","eventOn","eventOnOff","getRootActionEventName","getRootEventName","getScopeId","identity","isFunction","isNumber","isPlainObject","isString","isUndefined","isUndefinedOrNull","looseEqual","mathMax","noop","toInteger","warn","BvEvent","createNewChildComponent","listenOnRootMixin","BVTooltipTemplate","MODAL_SELECTOR","ROOT_EVENT_NAME_MODAL_HIDDEN","SIDEBAR_SELECTOR","CONTAINER_SELECTOR","join","DROPDOWN_CLASS","DROPDOWN_OPEN_SELECTOR","DATA_TITLE_ATTR","templateData","title","content","variant","customClass","triggers","placement","fallbackPlacement","container","noFade","boundary","boundaryPadding","offset","delay","arrowPadding","interactive","disabled","id","html","BVTooltip","name","mixins","data","activeTrigger","hover","click","focus","localShow","computed","templateType","computedId","computedDelay","show","hide","computedTriggers","trim","toLowerCase","split","sort","isWithActiveTrigger","trigger","computedTemplateData","watch","newTriggers","oldTriggers","_this","$nextTick","unListen","listen","handleTemplateUpdate","newValue","oldValue","disable","enable","created","_this2","$_tip","$_hoverTimeout","$_hoverState","$_visibleInterval","$_enabled","$_noop","bind","bvParent","$once","$destroy","getTarget","document","body","scopeId","updated","deactivated","forceHide","beforeDestroy","setWhileOpenListeners","clearHoverTimeout","clearVisibilityInterval","destroyTemplate","methods","getTemplate","updateData","_this3","undefined","titleUpdated","prop","fixTitle","createTemplateAndShow","getContainer","Template","$tip","propsData","getPlacementTarget","getBoundary","onTemplateShow","onTemplateShown","onTemplateHide","onTemplateHidden","$on","handleEvent","$mount","appendChild","createElement","hideTemplate","clearActiveTriggers","localPlacementTarget","_unused","removeAriaDescribedby","restoreTitle","getTemplateElement","$el","_this4","props","dropdownOpen","showEvent","buildEvent","cancelable","emitEvent","defaultPrevented","addAriaDescribedby","force","tip","hideEvent","prevHoverState","leave","replace","getTargetId","isInModal","isDropdown","clearTimeout","clearInterval","desc","_this5","d","type","options","relatedTarget","componentId","vueTarget","bvEvent","emitOnRoot","$emit","_this6","el","setRootListener","_this7","events","event","on","method","doHide","doShow","doDisable","doEnable","setModalListener","setDropdownListener","visibleCheck","setOnTouchStartListener","_this8","setInterval","parentNode","_this9","documentElement","children","bvEventRoot","instance","enter","eventTarget","currentTarget","toggle","_this10","setTimeout","_this11"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Tooltip \"Class\" (Built as a renderless Vue instance)\n//\n// Handles trigger events, etc.\n// Instantiates template on demand\nimport { COMPONENT_UID_KEY, extend } from '../../../vue';\nimport { NAME_MODAL, NAME_TOOLTIP_HELPER } from '../../../constants/components';\nimport { EVENT_NAME_DISABLE, EVENT_NAME_DISABLED, EVENT_NAME_ENABLE, EVENT_NAME_ENABLED, EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT, EVENT_NAME_HIDDEN, EVENT_NAME_HIDE, EVENT_NAME_MOUSEENTER, EVENT_NAME_MOUSELEAVE, EVENT_NAME_SHOW, EVENT_NAME_SHOWN, EVENT_OPTIONS_NO_CAPTURE, HOOK_EVENT_NAME_BEFORE_DESTROY, HOOK_EVENT_NAME_DESTROYED } from '../../../constants/events';\nimport { useParentMixin } from '../../../mixins/use-parent';\nimport { arrayIncludes, concat, from as arrayFrom } from '../../../utils/array';\nimport { getInstanceFromElement } from '../../../utils/element-to-vue-instance-registry';\nimport { attemptFocus, closest, contains, getAttr, getById, hasAttr, hasClass, isDisabled, isElement, isVisible, removeAttr, requestAF, select, setAttr } from '../../../utils/dom';\nimport { eventOff, eventOn, eventOnOff, getRootActionEventName, getRootEventName } from '../../../utils/events';\nimport { getScopeId } from '../../../utils/get-scope-id';\nimport { identity } from '../../../utils/identity';\nimport { isFunction, isNumber, isPlainObject, isString, isUndefined, isUndefinedOrNull } from '../../../utils/inspect';\nimport { looseEqual } from '../../../utils/loose-equal';\nimport { mathMax } from '../../../utils/math';\nimport { noop } from '../../../utils/noop';\nimport { toInteger } from '../../../utils/number';\nimport { keys } from '../../../utils/object';\nimport { warn } from '../../../utils/warn';\nimport { BvEvent } from '../../../utils/bv-event.class';\nimport { createNewChildComponent } from '../../../utils/create-new-child-component';\nimport { listenOnRootMixin } from '../../../mixins/listen-on-root';\nimport { BVTooltipTemplate } from './bv-tooltip-template'; // --- Constants ---\n// Modal container selector for appending tooltip/popover\n\nvar MODAL_SELECTOR = '.modal-content'; // Modal `$root` hidden event\n\nvar ROOT_EVENT_NAME_MODAL_HIDDEN = getRootEventName(NAME_MODAL, EVENT_NAME_HIDDEN); // Sidebar container selector for appending tooltip/popover\n\nvar SIDEBAR_SELECTOR = '.b-sidebar'; // For finding the container to append to\n\nvar CONTAINER_SELECTOR = [MODAL_SELECTOR, SIDEBAR_SELECTOR].join(', '); // For dropdown sniffing\n\nvar DROPDOWN_CLASS = 'dropdown';\nvar DROPDOWN_OPEN_SELECTOR = '.dropdown-menu.show'; // Data attribute to temporary store the `title` attribute's value\n\nvar DATA_TITLE_ATTR = 'data-original-title'; // Data specific to popper and template\n// We don't use props, as we need reactivity (we can't pass reactive props)\n\nvar templateData = {\n  // Text string or Scoped slot function\n  title: '',\n  // Text string or Scoped slot function\n  content: '',\n  // String\n  variant: null,\n  // String, Array, Object\n  customClass: null,\n  // String or array of Strings (overwritten by BVPopper)\n  triggers: '',\n  // String (overwritten by BVPopper)\n  placement: 'auto',\n  // String or array of strings\n  fallbackPlacement: 'flip',\n  // Element or Component reference (or function that returns element) of\n  // the element that will have the trigger events bound, and is also\n  // default element for positioning\n  target: null,\n  // HTML ID, Element or Component reference\n  container: null,\n  // 'body'\n  // Boolean\n  noFade: false,\n  // 'scrollParent', 'viewport', 'window', Element, or Component reference\n  boundary: 'scrollParent',\n  // Tooltip/popover will try and stay away from\n  // boundary edge by this many pixels (Number)\n  boundaryPadding: 5,\n  // Arrow offset (Number)\n  offset: 0,\n  // Hover/focus delay (Number or Object)\n  delay: 0,\n  // Arrow of Tooltip/popover will try and stay away from\n  // the edge of tooltip/popover edge by this many pixels\n  arrowPadding: 6,\n  // Interactive state (Boolean)\n  interactive: true,\n  // Disabled state (Boolean)\n  disabled: false,\n  // ID to use for tooltip/popover\n  id: null,\n  // Flag used by directives only, for HTML content\n  html: false\n}; // --- Main component ---\n// @vue/component\n\nexport var BVTooltip = /*#__PURE__*/extend({\n  name: NAME_TOOLTIP_HELPER,\n  mixins: [listenOnRootMixin, useParentMixin],\n  data: function data() {\n    return _objectSpread(_objectSpread({}, templateData), {}, {\n      // State management data\n      activeTrigger: {\n        // manual: false,\n        hover: false,\n        click: false,\n        focus: false\n      },\n      localShow: false\n    });\n  },\n  computed: {\n    templateType: function templateType() {\n      // Overwritten by BVPopover\n      return 'tooltip';\n    },\n    computedId: function computedId() {\n      return this.id || \"__bv_\".concat(this.templateType, \"_\").concat(this[COMPONENT_UID_KEY], \"__\");\n    },\n    computedDelay: function computedDelay() {\n      // Normalizes delay into object form\n      var delay = {\n        show: 0,\n        hide: 0\n      };\n\n      if (isPlainObject(this.delay)) {\n        delay.show = mathMax(toInteger(this.delay.show, 0), 0);\n        delay.hide = mathMax(toInteger(this.delay.hide, 0), 0);\n      } else if (isNumber(this.delay) || isString(this.delay)) {\n        delay.show = delay.hide = mathMax(toInteger(this.delay, 0), 0);\n      }\n\n      return delay;\n    },\n    computedTriggers: function computedTriggers() {\n      // Returns the triggers in sorted array form\n      // TODO: Switch this to object form for easier lookup\n      return concat(this.triggers).filter(identity).join(' ').trim().toLowerCase().split(/\\s+/).sort();\n    },\n    isWithActiveTrigger: function isWithActiveTrigger() {\n      for (var trigger in this.activeTrigger) {\n        if (this.activeTrigger[trigger]) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    computedTemplateData: function computedTemplateData() {\n      var title = this.title,\n          content = this.content,\n          variant = this.variant,\n          customClass = this.customClass,\n          noFade = this.noFade,\n          interactive = this.interactive;\n      return {\n        title: title,\n        content: content,\n        variant: variant,\n        customClass: customClass,\n        noFade: noFade,\n        interactive: interactive\n      };\n    }\n  },\n  watch: {\n    computedTriggers: function computedTriggers(newTriggers, oldTriggers) {\n      var _this = this;\n\n      // Triggers have changed, so re-register them\n\n      /* istanbul ignore next */\n      if (!looseEqual(newTriggers, oldTriggers)) {\n        this.$nextTick(function () {\n          // Disable trigger listeners\n          _this.unListen(); // Clear any active triggers that are no longer in the list of triggers\n\n\n          oldTriggers.forEach(function (trigger) {\n            if (!arrayIncludes(newTriggers, trigger)) {\n              if (_this.activeTrigger[trigger]) {\n                _this.activeTrigger[trigger] = false;\n              }\n            }\n          }); // Re-enable the trigger listeners\n\n          _this.listen();\n        });\n      }\n    },\n    computedTemplateData: function computedTemplateData() {\n      // If any of the while open reactive \"props\" change,\n      // ensure that the template updates accordingly\n      this.handleTemplateUpdate();\n    },\n    title: function title(newValue, oldValue) {\n      // Make sure to hide the tooltip when the title is set empty\n      if (newValue !== oldValue && !newValue) {\n        this.hide();\n      }\n    },\n    disabled: function disabled(newValue) {\n      if (newValue) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    // Create non-reactive properties\n    this.$_tip = null;\n    this.$_hoverTimeout = null;\n    this.$_hoverState = '';\n    this.$_visibleInterval = null;\n    this.$_enabled = !this.disabled;\n    this.$_noop = noop.bind(this); // Destroy ourselves when the parent is destroyed\n\n    if (this.bvParent) {\n      this.bvParent.$once(HOOK_EVENT_NAME_BEFORE_DESTROY, function () {\n        _this2.$nextTick(function () {\n          // In a `requestAF()` to release control back to application\n          requestAF(function () {\n            _this2.$destroy();\n          });\n        });\n      });\n    }\n\n    this.$nextTick(function () {\n      var target = _this2.getTarget();\n\n      if (target && contains(document.body, target)) {\n        // Copy the parent's scoped style attribute\n        _this2.scopeId = getScopeId(_this2.bvParent); // Set up all trigger handlers and listeners\n\n        _this2.listen();\n      } else {\n        /* istanbul ignore next */\n        warn(isString(_this2.target) ? \"Unable to find target element by ID \\\"#\".concat(_this2.target, \"\\\" in document.\") : 'The provided target is no valid HTML element.', _this2.templateType);\n      }\n    });\n  },\n\n  /* istanbul ignore next */\n  updated: function updated() {\n    // Usually called when the slots/data changes\n    this.$nextTick(this.handleTemplateUpdate);\n  },\n\n  /* istanbul ignore next */\n  deactivated: function deactivated() {\n    // In a keepalive that has been deactivated, so hide\n    // the tooltip/popover if it is showing\n    this.forceHide();\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Remove all handler/listeners\n    this.unListen();\n    this.setWhileOpenListeners(false); // Clear any timeouts/intervals\n\n    this.clearHoverTimeout();\n    this.clearVisibilityInterval(); // Destroy the template\n\n    this.destroyTemplate(); // Remove any other private properties created during create\n\n    this.$_noop = null;\n  },\n  methods: {\n    // --- Methods for creating and destroying the template ---\n    getTemplate: function getTemplate() {\n      // Overridden by BVPopover\n      return BVTooltipTemplate;\n    },\n    updateData: function updateData() {\n      var _this3 = this;\n\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // Method for updating popper/template data\n      // We only update data if it exists, and has not changed\n      var titleUpdated = false;\n      keys(templateData).forEach(function (prop) {\n        if (!isUndefined(data[prop]) && _this3[prop] !== data[prop]) {\n          _this3[prop] = data[prop];\n\n          if (prop === 'title') {\n            titleUpdated = true;\n          }\n        }\n      }); // If the title has updated, we may need to handle the `title`\n      // attribute on the trigger target\n      // We only do this while the template is open\n\n      if (titleUpdated && this.localShow) {\n        this.fixTitle();\n      }\n    },\n    createTemplateAndShow: function createTemplateAndShow() {\n      // Creates the template instance and show it\n      var container = this.getContainer();\n      var Template = this.getTemplate();\n      var $tip = this.$_tip = createNewChildComponent(this, Template, {\n        // The following is not reactive to changes in the props data\n        propsData: {\n          // These values cannot be changed while template is showing\n          id: this.computedId,\n          html: this.html,\n          placement: this.placement,\n          fallbackPlacement: this.fallbackPlacement,\n          target: this.getPlacementTarget(),\n          boundary: this.getBoundary(),\n          // Ensure the following are integers\n          offset: toInteger(this.offset, 0),\n          arrowPadding: toInteger(this.arrowPadding, 0),\n          boundaryPadding: toInteger(this.boundaryPadding, 0)\n        }\n      }); // We set the initial reactive data (values that can be changed while open)\n\n      this.handleTemplateUpdate(); // Template transition phase events (handled once only)\n      // When the template has mounted, but not visibly shown yet\n\n      $tip.$once(EVENT_NAME_SHOW, this.onTemplateShow); // When the template has completed showing\n\n      $tip.$once(EVENT_NAME_SHOWN, this.onTemplateShown); // When the template has started to hide\n\n      $tip.$once(EVENT_NAME_HIDE, this.onTemplateHide); // When the template has completed hiding\n\n      $tip.$once(EVENT_NAME_HIDDEN, this.onTemplateHidden); // When the template gets destroyed for any reason\n\n      $tip.$once(HOOK_EVENT_NAME_DESTROYED, this.destroyTemplate); // Convenience events from template\n      // To save us from manually adding/removing DOM\n      // listeners to tip element when it is open\n\n      $tip.$on(EVENT_NAME_FOCUSIN, this.handleEvent);\n      $tip.$on(EVENT_NAME_FOCUSOUT, this.handleEvent);\n      $tip.$on(EVENT_NAME_MOUSEENTER, this.handleEvent);\n      $tip.$on(EVENT_NAME_MOUSELEAVE, this.handleEvent); // Mount (which triggers the `show`)\n\n      $tip.$mount(container.appendChild(document.createElement('div'))); // Template will automatically remove its markup from DOM when hidden\n    },\n    hideTemplate: function hideTemplate() {\n      // Trigger the template to start hiding\n      // The template will emit the `hide` event after this and\n      // then emit the `hidden` event once it is fully hidden\n      // The `hook:destroyed` will also be called (safety measure)\n      this.$_tip && this.$_tip.hide(); // Clear out any stragging active triggers\n\n      this.clearActiveTriggers(); // Reset the hover state\n\n      this.$_hoverState = '';\n    },\n    // Destroy the template instance and reset state\n    destroyTemplate: function destroyTemplate() {\n      this.setWhileOpenListeners(false);\n      this.clearHoverTimeout();\n      this.$_hoverState = '';\n      this.clearActiveTriggers();\n      this.localPlacementTarget = null;\n\n      try {\n        this.$_tip.$destroy();\n      } catch (_unused) {}\n\n      this.$_tip = null;\n      this.removeAriaDescribedby();\n      this.restoreTitle();\n      this.localShow = false;\n    },\n    getTemplateElement: function getTemplateElement() {\n      return this.$_tip ? this.$_tip.$el : null;\n    },\n    handleTemplateUpdate: function handleTemplateUpdate() {\n      var _this4 = this;\n\n      // Update our template title/content \"props\"\n      // So that the template updates accordingly\n      var $tip = this.$_tip;\n\n      if ($tip) {\n        var props = ['title', 'content', 'variant', 'customClass', 'noFade', 'interactive']; // Only update the values if they have changed\n\n        props.forEach(function (prop) {\n          if ($tip[prop] !== _this4[prop]) {\n            $tip[prop] = _this4[prop];\n          }\n        });\n      }\n    },\n    // --- Show/Hide handlers ---\n    // Show the tooltip\n    show: function show() {\n      var target = this.getTarget();\n\n      if (!target || !contains(document.body, target) || !isVisible(target) || this.dropdownOpen() || (isUndefinedOrNull(this.title) || this.title === '') && (isUndefinedOrNull(this.content) || this.content === '')) {\n        // If trigger element isn't in the DOM or is not visible, or\n        // is on an open dropdown toggle, or has no content, then\n        // we exit without showing\n        return;\n      } // If tip already exists, exit early\n\n\n      if (this.$_tip || this.localShow) {\n        /* istanbul ignore next */\n        return;\n      } // In the process of showing\n\n\n      this.localShow = true; // Create a cancelable BvEvent\n\n      var showEvent = this.buildEvent(EVENT_NAME_SHOW, {\n        cancelable: true\n      });\n      this.emitEvent(showEvent); // Don't show if event cancelled\n\n      /* istanbul ignore if */\n\n      if (showEvent.defaultPrevented) {\n        // Destroy the template (if for some reason it was created)\n        this.destroyTemplate();\n        return;\n      } // Fix the title attribute on target\n\n\n      this.fixTitle(); // Set aria-describedby on target\n\n      this.addAriaDescribedby(); // Create and show the tooltip\n\n      this.createTemplateAndShow();\n    },\n    hide: function hide() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      // Hide the tooltip\n      var tip = this.getTemplateElement();\n      /* istanbul ignore if */\n\n      if (!tip || !this.localShow) {\n        this.restoreTitle();\n        return;\n      } // Emit cancelable BvEvent 'hide'\n      // We disable cancelling if `force` is true\n\n\n      var hideEvent = this.buildEvent(EVENT_NAME_HIDE, {\n        cancelable: !force\n      });\n      this.emitEvent(hideEvent);\n      /* istanbul ignore if: ignore for now */\n\n      if (hideEvent.defaultPrevented) {\n        // Don't hide if event cancelled\n        return;\n      } // Tell the template to hide\n\n\n      this.hideTemplate();\n    },\n    forceHide: function forceHide() {\n      // Forcefully hides/destroys the template, regardless of any active triggers\n      var tip = this.getTemplateElement();\n\n      if (!tip || !this.localShow) {\n        /* istanbul ignore next */\n        return;\n      } // Disable while open listeners/watchers\n      // This is also done in the template `hide` event handler\n\n\n      this.setWhileOpenListeners(false); // Clear any hover enter/leave event\n\n      this.clearHoverTimeout();\n      this.$_hoverState = '';\n      this.clearActiveTriggers(); // Disable the fade animation on the template\n\n      if (this.$_tip) {\n        this.$_tip.noFade = true;\n      } // Hide the tip (with force = true)\n\n\n      this.hide(true);\n    },\n    enable: function enable() {\n      this.$_enabled = true; // Create a non-cancelable BvEvent\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_ENABLED));\n    },\n    disable: function disable() {\n      this.$_enabled = false; // Create a non-cancelable BvEvent\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_DISABLED));\n    },\n    // --- Handlers for template events ---\n    // When template is inserted into DOM, but not yet shown\n    onTemplateShow: function onTemplateShow() {\n      // Enable while open listeners/watchers\n      this.setWhileOpenListeners(true);\n    },\n    // When template show transition completes\n    onTemplateShown: function onTemplateShown() {\n      var prevHoverState = this.$_hoverState;\n      this.$_hoverState = '';\n      /* istanbul ignore next: occasional Node 10 coverage error */\n\n      if (prevHoverState === 'out') {\n        this.leave(null);\n      } // Emit a non-cancelable BvEvent 'shown'\n\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_SHOWN));\n    },\n    // When template is starting to hide\n    onTemplateHide: function onTemplateHide() {\n      // Disable while open listeners/watchers\n      this.setWhileOpenListeners(false);\n    },\n    // When template has completed closing (just before it self destructs)\n    onTemplateHidden: function onTemplateHidden() {\n      // Destroy the template\n      this.destroyTemplate(); // Emit a non-cancelable BvEvent 'shown'\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_HIDDEN));\n    },\n    // --- Helper methods ---\n    getTarget: function getTarget() {\n      var target = this.target;\n\n      if (isString(target)) {\n        target = getById(target.replace(/^#/, ''));\n      } else if (isFunction(target)) {\n        target = target();\n      } else if (target) {\n        target = target.$el || target;\n      }\n\n      return isElement(target) ? target : null;\n    },\n    getPlacementTarget: function getPlacementTarget() {\n      // This is the target that the tooltip will be placed on, which may not\n      // necessarily be the same element that has the trigger event listeners\n      // For now, this is the same as target\n      // TODO:\n      //   Add in child selector support\n      //   Add in visibility checks for this element\n      //   Fallback to target if not found\n      return this.getTarget();\n    },\n    getTargetId: function getTargetId() {\n      // Returns the ID of the trigger element\n      var target = this.getTarget();\n      return target && target.id ? target.id : null;\n    },\n    getContainer: function getContainer() {\n      // Handle case where container may be a component ref\n      var container = this.container ? this.container.$el || this.container : false;\n      var body = document.body;\n      var target = this.getTarget(); // If we are in a modal, we append to the modal, If we\n      // are in a sidebar, we append to the sidebar, else append\n      // to body, unless a container is specified\n      // TODO:\n      //   Template should periodically check to see if it is in dom\n      //   And if not, self destruct (if container got v-if'ed out of DOM)\n      //   Or this could possibly be part of the visibility check\n\n      return container === false ? closest(CONTAINER_SELECTOR, target) || body :\n      /*istanbul ignore next */\n      isString(container) ?\n      /*istanbul ignore next */\n      getById(container.replace(/^#/, '')) || body :\n      /*istanbul ignore next */\n      body;\n    },\n    getBoundary: function getBoundary() {\n      return this.boundary ? this.boundary.$el || this.boundary : 'scrollParent';\n    },\n    isInModal: function isInModal() {\n      var target = this.getTarget();\n      return target && closest(MODAL_SELECTOR, target);\n    },\n    isDropdown: function isDropdown() {\n      // Returns true if trigger is a dropdown\n      var target = this.getTarget();\n      return target && hasClass(target, DROPDOWN_CLASS);\n    },\n    dropdownOpen: function dropdownOpen() {\n      // Returns true if trigger is a dropdown and the dropdown menu is open\n      var target = this.getTarget();\n      return this.isDropdown() && target && select(DROPDOWN_OPEN_SELECTOR, target);\n    },\n    clearHoverTimeout: function clearHoverTimeout() {\n      clearTimeout(this.$_hoverTimeout);\n      this.$_hoverTimeout = null;\n    },\n    clearVisibilityInterval: function clearVisibilityInterval() {\n      clearInterval(this.$_visibleInterval);\n      this.$_visibleInterval = null;\n    },\n    clearActiveTriggers: function clearActiveTriggers() {\n      for (var trigger in this.activeTrigger) {\n        this.activeTrigger[trigger] = false;\n      }\n    },\n    addAriaDescribedby: function addAriaDescribedby() {\n      // Add aria-describedby on trigger element, without removing any other IDs\n      var target = this.getTarget();\n      var desc = getAttr(target, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).concat(this.computedId).join(' ').trim(); // Update/add aria-described by\n\n      setAttr(target, 'aria-describedby', desc);\n    },\n    removeAriaDescribedby: function removeAriaDescribedby() {\n      var _this5 = this;\n\n      // Remove aria-describedby on trigger element, without removing any other IDs\n      var target = this.getTarget();\n      var desc = getAttr(target, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).filter(function (d) {\n        return d !== _this5.computedId;\n      }).join(' ').trim(); // Update or remove aria-describedby\n\n      if (desc) {\n        /* istanbul ignore next */\n        setAttr(target, 'aria-describedby', desc);\n      } else {\n        removeAttr(target, 'aria-describedby');\n      }\n    },\n    fixTitle: function fixTitle() {\n      // If the target has a `title` attribute,\n      // remove it and store it on a data attribute\n      var target = this.getTarget();\n\n      if (hasAttr(target, 'title')) {\n        // Get `title` attribute value and remove it from target\n        var title = getAttr(target, 'title');\n        setAttr(target, 'title', ''); // Only set the data attribute when the value is truthy\n\n        if (title) {\n          setAttr(target, DATA_TITLE_ATTR, title);\n        }\n      }\n    },\n    restoreTitle: function restoreTitle() {\n      // If the target had a `title` attribute,\n      // restore it and remove the data attribute\n      var target = this.getTarget();\n\n      if (hasAttr(target, DATA_TITLE_ATTR)) {\n        // Get data attribute value and remove it from target\n        var title = getAttr(target, DATA_TITLE_ATTR);\n        removeAttr(target, DATA_TITLE_ATTR); // Only restore the `title` attribute when the value is truthy\n\n        if (title) {\n          setAttr(target, 'title', title);\n        }\n      }\n    },\n    // --- BvEvent helpers ---\n    buildEvent: function buildEvent(type) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Defaults to a non-cancellable event\n      return new BvEvent(type, _objectSpread({\n        cancelable: false,\n        target: this.getTarget(),\n        relatedTarget: this.getTemplateElement() || null,\n        componentId: this.computedId,\n        vueTarget: this\n      }, options));\n    },\n    emitEvent: function emitEvent(bvEvent) {\n      var type = bvEvent.type;\n      this.emitOnRoot(getRootEventName(this.templateType, type), bvEvent);\n      this.$emit(type, bvEvent);\n    },\n    // --- Event handler setup methods ---\n    listen: function listen() {\n      var _this6 = this;\n\n      // Enable trigger event handlers\n      var el = this.getTarget();\n\n      if (!el) {\n        /* istanbul ignore next */\n        return;\n      } // Listen for global show/hide events\n\n\n      this.setRootListener(true); // Set up our listeners on the target trigger element\n\n      this.computedTriggers.forEach(function (trigger) {\n        if (trigger === 'click') {\n          eventOn(el, 'click', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'focus') {\n          eventOn(el, 'focusin', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n          eventOn(el, 'focusout', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'blur') {\n          // Used to close $tip when element loses focus\n\n          /* istanbul ignore next */\n          eventOn(el, 'focusout', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'hover') {\n          eventOn(el, 'mouseenter', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n          eventOn(el, 'mouseleave', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        }\n      }, this);\n    },\n\n    /* istanbul ignore next */\n    unListen: function unListen() {\n      var _this7 = this;\n\n      // Remove trigger event handlers\n      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave'];\n      var target = this.getTarget(); // Stop listening for global show/hide/enable/disable events\n\n      this.setRootListener(false); // Clear out any active target listeners\n\n      events.forEach(function (event) {\n        target && eventOff(target, event, _this7.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n      }, this);\n    },\n    setRootListener: function setRootListener(on) {\n      // Listen for global `bv::{hide|show}::{tooltip|popover}` hide request event\n      var method = on ? 'listenOnRoot' : 'listenOffRoot';\n      var type = this.templateType;\n      this[method](getRootActionEventName(type, EVENT_NAME_HIDE), this.doHide);\n      this[method](getRootActionEventName(type, EVENT_NAME_SHOW), this.doShow);\n      this[method](getRootActionEventName(type, EVENT_NAME_DISABLE), this.doDisable);\n      this[method](getRootActionEventName(type, EVENT_NAME_ENABLE), this.doEnable);\n    },\n    setWhileOpenListeners: function setWhileOpenListeners(on) {\n      // Events that are only registered when the template is showing\n      // Modal close events\n      this.setModalListener(on); // Dropdown open events (if we are attached to a dropdown)\n\n      this.setDropdownListener(on); // Periodic $element visibility check\n      // For handling when tip target is in <keepalive>, tabs, carousel, etc\n\n      this.visibleCheck(on); // On-touch start listeners\n\n      this.setOnTouchStartListener(on);\n    },\n    // Handler for periodic visibility check\n    visibleCheck: function visibleCheck(on) {\n      var _this8 = this;\n\n      this.clearVisibilityInterval();\n      var target = this.getTarget();\n\n      if (on) {\n        this.$_visibleInterval = setInterval(function () {\n          var tip = _this8.getTemplateElement();\n\n          if (tip && _this8.localShow && (!target.parentNode || !isVisible(target))) {\n            // Target element is no longer visible or not in DOM, so force-hide the tooltip\n            _this8.forceHide();\n          }\n        }, 100);\n      }\n    },\n    setModalListener: function setModalListener(on) {\n      // Handle case where tooltip/target is in a modal\n      if (this.isInModal()) {\n        // We can listen for modal hidden events on `$root`\n        this[on ? 'listenOnRoot' : 'listenOffRoot'](ROOT_EVENT_NAME_MODAL_HIDDEN, this.forceHide);\n      }\n    },\n\n    /* istanbul ignore next: JSDOM doesn't support `ontouchstart` */\n    setOnTouchStartListener: function setOnTouchStartListener(on) {\n      var _this9 = this;\n\n      // If this is a touch-enabled device we add extra empty\n      // `mouseover` listeners to the body's immediate children\n      // Only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement) {\n        arrayFrom(document.body.children).forEach(function (el) {\n          eventOnOff(on, el, 'mouseover', _this9.$_noop);\n        });\n      }\n    },\n    setDropdownListener: function setDropdownListener(on) {\n      var target = this.getTarget();\n\n      if (!target || !this.bvEventRoot || !this.isDropdown) {\n        return;\n      } // We can listen for dropdown shown events on its instance\n      // TODO:\n      //   We could grab the ID from the dropdown, and listen for\n      //   $root events for that particular dropdown id\n      //   Dropdown shown and hidden events will need to emit\n      //   Note: Dropdown auto-ID happens in a `$nextTick()` after mount\n      //         So the ID lookup would need to be done in a `$nextTick()`\n\n\n      var instance = getInstanceFromElement(target);\n\n      if (instance) {\n        instance[on ? '$on' : '$off'](EVENT_NAME_SHOWN, this.forceHide);\n      }\n    },\n    // --- Event handlers ---\n    handleEvent: function handleEvent(event) {\n      // General trigger event handler\n      // target is the trigger element\n      var target = this.getTarget();\n\n      if (!target || isDisabled(target) || !this.$_enabled || this.dropdownOpen()) {\n        // If disabled or not enabled, or if a dropdown that is open, don't do anything\n        // If tip is shown before element gets disabled, then tip will not\n        // close until no longer disabled or forcefully closed\n        return;\n      }\n\n      var type = event.type;\n      var triggers = this.computedTriggers;\n\n      if (type === 'click' && arrayIncludes(triggers, 'click')) {\n        this.click(event);\n      } else if (type === 'mouseenter' && arrayIncludes(triggers, 'hover')) {\n        // `mouseenter` is a non-bubbling event\n        this.enter(event);\n      } else if (type === 'focusin' && arrayIncludes(triggers, 'focus')) {\n        // `focusin` is a bubbling event\n        // `event` includes `relatedTarget` (element losing focus)\n        this.enter(event);\n      } else if (type === 'focusout' && (arrayIncludes(triggers, 'focus') || arrayIncludes(triggers, 'blur')) || type === 'mouseleave' && arrayIncludes(triggers, 'hover')) {\n        // `focusout` is a bubbling event\n        // `mouseleave` is a non-bubbling event\n        // `tip` is the template (will be null if not open)\n        var tip = this.getTemplateElement(); // `eventTarget` is the element which is losing focus/hover and\n\n        var eventTarget = event.target; // `relatedTarget` is the element gaining focus/hover\n\n        var relatedTarget = event.relatedTarget;\n        /* istanbul ignore next */\n\n        if ( // From tip to target\n        tip && contains(tip, eventTarget) && contains(target, relatedTarget) || // From target to tip\n        tip && contains(target, eventTarget) && contains(tip, relatedTarget) || // Within tip\n        tip && contains(tip, eventTarget) && contains(tip, relatedTarget) || // Within target\n        contains(target, eventTarget) && contains(target, relatedTarget)) {\n          // If focus/hover moves within `tip` and `target`, don't trigger a leave\n          return;\n        } // Otherwise trigger a leave\n\n\n        this.leave(event);\n      }\n    },\n    doHide: function doHide(id) {\n      // Programmatically hide tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Close all tooltips or popovers, or this specific tip (with ID)\n        this.forceHide();\n      }\n    },\n    doShow: function doShow(id) {\n      // Programmatically show tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Open all tooltips or popovers, or this specific tip (with ID)\n        this.show();\n      }\n    },\n\n    /*istanbul ignore next: ignore for now */\n    doDisable: function doDisable(id)\n    /*istanbul ignore next: ignore for now */\n    {\n      // Programmatically disable tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Disable all tooltips or popovers (no ID), or this specific tip (with ID)\n        this.disable();\n      }\n    },\n\n    /*istanbul ignore next: ignore for now */\n    doEnable: function doEnable(id)\n    /*istanbul ignore next: ignore for now */\n    {\n      // Programmatically enable tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Enable all tooltips or popovers (no ID), or this specific tip (with ID)\n        this.enable();\n      }\n    },\n    click: function click(event) {\n      if (!this.$_enabled || this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Get around a WebKit bug where `click` does not trigger focus events\n      // On most browsers, `click` triggers a `focusin`/`focus` event first\n      // Needed so that trigger 'click blur' works on iOS\n      // https://github.com/bootstrap-vue/bootstrap-vue/issues/5099\n      // We use `currentTarget` rather than `target` to trigger on the\n      // element, not the inner content\n\n\n      attemptFocus(event.currentTarget);\n      this.activeTrigger.click = !this.activeTrigger.click;\n\n      if (this.isWithActiveTrigger) {\n        this.enter(null);\n      } else {\n        /* istanbul ignore next */\n        this.leave(null);\n      }\n    },\n\n    /* istanbul ignore next */\n    toggle: function toggle() {\n      // Manual toggle handler\n      if (!this.$_enabled || this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Should we register as an active trigger?\n      // this.activeTrigger.manual = !this.activeTrigger.manual\n\n\n      if (this.localShow) {\n        this.leave(null);\n      } else {\n        this.enter(null);\n      }\n    },\n    enter: function enter() {\n      var _this10 = this;\n\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      // Opening trigger handler\n      // Note: Click events are sent with event === null\n      if (event) {\n        this.activeTrigger[event.type === 'focusin' ? 'focus' : 'hover'] = true;\n      }\n      /* istanbul ignore next */\n\n\n      if (this.localShow || this.$_hoverState === 'in') {\n        this.$_hoverState = 'in';\n        return;\n      }\n\n      this.clearHoverTimeout();\n      this.$_hoverState = 'in';\n\n      if (!this.computedDelay.show) {\n        this.show();\n      } else {\n        // Hide any title attribute while enter delay is active\n        this.fixTitle();\n        this.$_hoverTimeout = setTimeout(function () {\n          /* istanbul ignore else */\n          if (_this10.$_hoverState === 'in') {\n            _this10.show();\n          } else if (!_this10.localShow) {\n            _this10.restoreTitle();\n          }\n        }, this.computedDelay.show);\n      }\n    },\n    leave: function leave() {\n      var _this11 = this;\n\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      // Closing trigger handler\n      // Note: Click events are sent with event === null\n      if (event) {\n        this.activeTrigger[event.type === 'focusout' ? 'focus' : 'hover'] = false;\n        /* istanbul ignore next */\n\n        if (event.type === 'focusout' && arrayIncludes(this.computedTriggers, 'blur')) {\n          // Special case for `blur`: we clear out the other triggers\n          this.activeTrigger.click = false;\n          this.activeTrigger.hover = false;\n        }\n      }\n      /* istanbul ignore next: ignore for now */\n\n\n      if (this.isWithActiveTrigger) {\n        return;\n      }\n\n      this.clearHoverTimeout();\n      this.$_hoverState = 'out';\n\n      if (!this.computedDelay.hide) {\n        this.hide();\n      } else {\n        this.$_hoverTimeout = setTimeout(function () {\n          if (_this11.$_hoverState === 'out') {\n            _this11.hide();\n          }\n        }, this.computedDelay.hide);\n      }\n    }\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}