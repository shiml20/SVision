{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.prefix = $event),\n    placeholder: \"Filter prefix\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.prefix]])]), _withDirectives(_createElementVNode(\"select\", {\n    size: \"5\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selected = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredNames, name => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: name\n    }, _toDisplayString(name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.selected]]), _createElementVNode(\"label\", null, [_createTextVNode(\"Name: \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.first = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.first]])]), _createElementVNode(\"label\", null, [_createTextVNode(\"Surname: \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.last = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.last]])]), _createElementVNode(\"div\", {\n    class: \"buttons\"\n  }, [_createElementVNode(\"button\", {\n    onClick: $setup.create\n  }, \"Create\"), _createElementVNode(\"button\", {\n    onClick: $setup.update\n  }, \"Update\"), _createElementVNode(\"button\", {\n    onClick: $setup.del\n  }, \"Delete\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;6DAuDEA,oBAA+D,8BAA1DA,oBAAoD;+DAApCC,aAAM;IAAEC,WAAW,EAAC;iDAApBD,aAAM,uBAE3BD,oBAES;IAFDG,IAAI,EAAC,GAAG;+DAAUF,eAAQ;yBAChCG,oBAAqEC,6BAA9CJ,oBAAa,EAArBK,IAAI;yBAAnBF,oBAAqE;MAA9BG,GAAG,EAAED;IAAI,oBAAKA,IAAI;2EADjCL,eAAQ,KAIlCD,oBAA4C,iCAArC,QAAM,uCAAuB;+DAAPC,YAAK;iDAALA,YAAK,OAClCD,oBAA8C,iCAAvC,WAAS,uCAAsB;+DAANC,WAAI;iDAAJA,WAAI,OAEpCD,oBAIM;IAJDQ,KAAK,EAAC;EAAS,IAClBR,oBAAuC;IAA9BS,OAAK,EAAER;EAAM,GAAE,QAAM,GAC9BD,oBAAuC;IAA9BS,OAAK,EAAER;EAAM,GAAE,QAAM,GAC9BD,oBAAoC;IAA3BS,OAAK,EAAER;EAAG,GAAE,QAAM","names":["_createElementVNode","$setup","placeholder","size","_createElementBlock","_Fragment","name","key","class","onClick"],"sourceRoot":"","sources":["E:\\flask_learn\\my_project\\src\\components\\AlertInfo.vue"],"sourcesContent":["<!--\r\nhttps://eugenkiss.github.io/7guis/tasks/#crud\r\n-->\r\n/* eslint-disable */\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, watch } from 'vue'\r\n\r\nconst names = reactive(['Emil, Hans', 'Mustermann, Max', 'Tisch, Roman'])\r\nconst selected = ref('')\r\nconst prefix = ref('')\r\nconst first = ref('')\r\nconst last = ref('')\r\n\r\nconst filteredNames = computed(() =>\r\n  names.filter((n) =>\r\n    n.toLowerCase().startsWith(prefix.value.toLowerCase())\r\n  )\r\n)\r\n\r\nwatch(selected, (name) => {\r\n  ;[last.value, first.value] = name.split(', ')\r\n})\r\n\r\nfunction create() {\r\n  if (hasValidInput()) {\r\n    const fullName = `${last.value}, ${first.value}`\r\n    if (!names.includes(fullName)) {\r\n      names.push(fullName)\r\n      first.value = last.value = ''\r\n    }\r\n  }\r\n}\r\n\r\nfunction update() {\r\n  if (hasValidInput() && selected.value) {\r\n    const i = names.indexOf(selected.value)\r\n    names[i] = selected.value = `${last.value}, ${first.value}`\r\n  }\r\n}\r\n\r\nfunction del() {\r\n  if (selected.value) {\r\n    const i = names.indexOf(selected.value)\r\n    names.splice(i, 1)\r\n    selected.value = first.value = last.value = ''\r\n  }\r\n}\r\n\r\nfunction hasValidInput() {\r\n  return first.value.trim() && last.value.trim()\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div><input v-model=\"prefix\" placeholder=\"Filter prefix\"></div>\r\n\r\n  <select size=\"5\" v-model=\"selected\">\r\n    <option v-for=\"name in filteredNames\" :key=\"name\">{{ name }}</option>\r\n  </select>\r\n\r\n  <label>Name: <input v-model=\"first\"></label>\r\n  <label>Surname: <input v-model=\"last\"></label>\r\n\r\n  <div class=\"buttons\">\r\n    <button @click=\"create\">Create</button>\r\n    <button @click=\"update\">Update</button>\r\n    <button @click=\"del\">Delete</button>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n* {\r\n  font-size: inherit;\r\n}\r\n\r\ninput {\r\n  display: block;\r\n  margin-bottom: 10px;\r\n}\r\n\r\nselect {\r\n  float: left;\r\n  margin: 0 1em 1em 0;\r\n  width: 14em;\r\n}\r\n\r\n.buttons {\r\n  clear: both;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 5px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}