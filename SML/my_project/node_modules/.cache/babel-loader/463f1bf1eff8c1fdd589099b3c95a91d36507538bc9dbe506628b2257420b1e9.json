{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\n/*\n * Scrollspy class definition\n */\nimport { EVENT_OPTIONS_NO_CAPTURE } from '../../../constants/events';\nimport { RX_HREF } from '../../../constants/regex';\nimport { addClass, closest, getAttr, getBCR, hasClass, isElement, isVisible, matches, offset, position, removeClass, select, selectAll } from '../../../utils/dom';\nimport { getRootEventName, eventOn, eventOff } from '../../../utils/events';\nimport { identity } from '../../../utils/identity';\nimport { isString, isUndefined } from '../../../utils/inspect';\nimport { mathMax } from '../../../utils/math';\nimport { toInteger } from '../../../utils/number';\nimport { hasOwnProperty, toString as objectToString } from '../../../utils/object';\nimport { observeDom } from '../../../utils/observe-dom';\nimport { warn } from '../../../utils/warn';\n/*\n * Constants / Defaults\n */\n\nvar NAME = 'v-b-scrollspy';\nvar CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';\nvar CLASS_NAME_ACTIVE = 'active';\nvar SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\nvar SELECTOR_NAV_LINKS = '.nav-link';\nvar SELECTOR_NAV_ITEMS = '.nav-item';\nvar SELECTOR_LIST_ITEMS = '.list-group-item';\nvar SELECTOR_DROPDOWN = '.dropdown, .dropup';\nvar SELECTOR_DROPDOWN_ITEMS = '.dropdown-item';\nvar SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\nvar ROOT_EVENT_NAME_ACTIVATE = getRootEventName('BVScrollspy', 'activate');\nvar METHOD_OFFSET = 'offset';\nvar METHOD_POSITION = 'position';\nvar Default = {\n  element: 'body',\n  offset: 10,\n  method: 'auto',\n  throttle: 75\n};\nvar DefaultType = {\n  element: '(string|element|component)',\n  offset: 'number',\n  method: 'string',\n  throttle: 'number'\n}; // Transition Events\n\nvar TransitionEndEvents = ['webkitTransitionEnd', 'transitionend', 'otransitionend', 'oTransitionEnd'];\n/*\n * Utility Methods\n */\n// Better var type detection\n\nvar toType = function toType(obj) /* istanbul ignore next: not easy to test */\n{\n  return objectToString(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}; // Check config properties for expected types\n\n/* istanbul ignore next */\n\nvar typeCheckConfig = function typeCheckConfig(componentName, config, configTypes) /* istanbul ignore next: not easy to test */\n{\n  for (var property in configTypes) {\n    if (hasOwnProperty(configTypes, property)) {\n      var expectedTypes = configTypes[property];\n      var value = config[property];\n      var valueType = value && isElement(value) ? 'element' : toType(value); // handle Vue instances\n\n      valueType = value && value._isVue ? 'component' : valueType;\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        /* istanbul ignore next */\n        warn(\"\".concat(componentName, \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\"\"));\n      }\n    }\n  }\n};\n/*\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n/* istanbul ignore next: not easy to test */\n\nexport var BVScrollspy\n/* istanbul ignore next: not easy to test */ = /*#__PURE__*/function () {\n  function BVScrollspy(element, config, $root) {\n    _classCallCheck(this, BVScrollspy);\n\n    // The element we activate links in\n    this.$el = element;\n    this.$scroller = null;\n    this.$selector = [SELECTOR_NAV_LINKS, SELECTOR_LIST_ITEMS, SELECTOR_DROPDOWN_ITEMS].join(',');\n    this.$offsets = [];\n    this.$targets = [];\n    this.$activeTarget = null;\n    this.$scrollHeight = 0;\n    this.$resizeTimeout = null;\n    this.$scrollerObserver = null;\n    this.$targetsObserver = null;\n    this.$root = $root || null;\n    this.$config = null;\n    this.updateConfig(config);\n  }\n  _createClass(BVScrollspy, [{\n    key: \"updateConfig\",\n    value: function updateConfig(config, $root) {\n      if (this.$scroller) {\n        // Just in case out scroll element has changed\n        this.unlisten();\n        this.$scroller = null;\n      }\n      var cfg = _objectSpread(_objectSpread({}, this.constructor.Default), config);\n      if ($root) {\n        this.$root = $root;\n      }\n      typeCheckConfig(this.constructor.Name, cfg, this.constructor.DefaultType);\n      this.$config = cfg;\n      if (this.$root) {\n        var self = this;\n        this.$root.$nextTick(function () {\n          self.listen();\n        });\n      } else {\n        this.listen();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.unlisten();\n      clearTimeout(this.$resizeTimeout);\n      this.$resizeTimeout = null;\n      this.$el = null;\n      this.$config = null;\n      this.$scroller = null;\n      this.$selector = null;\n      this.$offsets = null;\n      this.$targets = null;\n      this.$activeTarget = null;\n      this.$scrollHeight = null;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this = this;\n      var scroller = this.getScroller();\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOn(scroller, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      }\n      eventOn(window, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOn(window, 'resize', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOn(window, 'orientationchange', this, EVENT_OPTIONS_NO_CAPTURE);\n      TransitionEndEvents.forEach(function (eventName) {\n        eventOn(window, eventName, _this, EVENT_OPTIONS_NO_CAPTURE);\n      });\n      this.setObservers(true); // Schedule a refresh\n\n      this.handleEvent('refresh');\n    }\n  }, {\n    key: \"unlisten\",\n    value: function unlisten() {\n      var _this2 = this;\n      var scroller = this.getScroller();\n      this.setObservers(false);\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOff(scroller, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      }\n      eventOff(window, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOff(window, 'resize', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOff(window, 'orientationchange', this, EVENT_OPTIONS_NO_CAPTURE);\n      TransitionEndEvents.forEach(function (eventName) {\n        eventOff(window, eventName, _this2, EVENT_OPTIONS_NO_CAPTURE);\n      });\n    }\n  }, {\n    key: \"setObservers\",\n    value: function setObservers(on) {\n      var _this3 = this;\n\n      // We observe both the scroller for content changes, and the target links\n      this.$scrollerObserver && this.$scrollerObserver.disconnect();\n      this.$targetsObserver && this.$targetsObserver.disconnect();\n      this.$scrollerObserver = null;\n      this.$targetsObserver = null;\n      if (on) {\n        this.$targetsObserver = observeDom(this.$el, function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          attributes: true,\n          attributeFilter: ['href']\n        });\n        this.$scrollerObserver = observeDom(this.getScroller(), function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n          attributes: true,\n          attributeFilter: ['id', 'style', 'class']\n        });\n      }\n    } // General event handler\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      var type = isString(event) ? event : event.type;\n      var self = this;\n      var resizeThrottle = function resizeThrottle() {\n        if (!self.$resizeTimeout) {\n          self.$resizeTimeout = setTimeout(function () {\n            self.refresh();\n            self.process();\n            self.$resizeTimeout = null;\n          }, self.$config.throttle);\n        }\n      };\n      if (type === 'scroll') {\n        if (!this.$scrollerObserver) {\n          // Just in case we are added to the DOM before the scroll target is\n          // We re-instantiate our listeners, just in case\n          this.listen();\n        }\n        this.process();\n      } else if (/(resize|orientationchange|mutation|refresh)/.test(type)) {\n        // Postpone these events by throttle time\n        resizeThrottle();\n      }\n    } // Refresh the list of target links on the element we are applied to\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this4 = this;\n      var scroller = this.getScroller();\n      if (!scroller) {\n        return;\n      }\n      var autoMethod = scroller !== scroller.window ? METHOD_POSITION : METHOD_OFFSET;\n      var method = this.$config.method === 'auto' ? autoMethod : this.$config.method;\n      var methodFn = method === METHOD_POSITION ? position : offset;\n      var offsetBase = method === METHOD_POSITION ? this.getScrollTop() : 0;\n      this.$offsets = [];\n      this.$targets = [];\n      this.$scrollHeight = this.getScrollHeight(); // Find all the unique link HREFs that we will control\n\n      selectAll(this.$selector, this.$el) // Get HREF value\n      .map(function (link) {\n        return getAttr(link, 'href');\n      }) // Filter out HREFs that do not match our RegExp\n      .filter(function (href) {\n        return href && RX_HREF.test(href || '');\n      }) // Find all elements with ID that match HREF hash\n      .map(function (href) {\n        // Convert HREF into an ID (including # at beginning)\n        var id = href.replace(RX_HREF, '$1').trim();\n        if (!id) {\n          return null;\n        } // Find the element with the ID specified by id\n\n        var el = select(id, scroller);\n        if (el && isVisible(el)) {\n          return {\n            offset: toInteger(methodFn(el).top, 0) + offsetBase,\n            target: id\n          };\n        }\n        return null;\n      }).filter(identity) // Sort them by their offsets (smallest first)\n      .sort(function (a, b) {\n        return a.offset - b.offset;\n      }) // record only unique targets/offsets\n      .reduce(function (memo, item) {\n        if (!memo[item.target]) {\n          _this4.$offsets.push(item.offset);\n          _this4.$targets.push(item.target);\n          memo[item.target] = true;\n        }\n        return memo;\n      }, {}); // Return this for easy chaining\n\n      return this;\n    } // Handle activating/clearing\n  }, {\n    key: \"process\",\n    value: function process() {\n      var scrollTop = this.getScrollTop() + this.$config.offset;\n      var scrollHeight = this.getScrollHeight();\n      var maxScroll = this.$config.offset + scrollHeight - this.getOffsetHeight();\n      if (this.$scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n      if (scrollTop >= maxScroll) {\n        var target = this.$targets[this.$targets.length - 1];\n        if (this.$activeTarget !== target) {\n          this.activate(target);\n        }\n        return;\n      }\n      if (this.$activeTarget && scrollTop < this.$offsets[0] && this.$offsets[0] > 0) {\n        this.$activeTarget = null;\n        this.clear();\n        return;\n      }\n      for (var i = this.$offsets.length; i--;) {\n        var isActiveTarget = this.$activeTarget !== this.$targets[i] && scrollTop >= this.$offsets[i] && (isUndefined(this.$offsets[i + 1]) || scrollTop < this.$offsets[i + 1]);\n        if (isActiveTarget) {\n          this.activate(this.$targets[i]);\n        }\n      }\n    }\n  }, {\n    key: \"getScroller\",\n    value: function getScroller() {\n      if (this.$scroller) {\n        return this.$scroller;\n      }\n      var scroller = this.$config.element;\n      if (!scroller) {\n        return null;\n      } else if (isElement(scroller.$el)) {\n        scroller = scroller.$el;\n      } else if (isString(scroller)) {\n        scroller = select(scroller);\n      }\n      if (!scroller) {\n        return null;\n      }\n      this.$scroller = scroller.tagName === 'BODY' ? window : scroller;\n      return this.$scroller;\n    }\n  }, {\n    key: \"getScrollTop\",\n    value: function getScrollTop() {\n      var scroller = this.getScroller();\n      return scroller === window ? scroller.pageYOffset : scroller.scrollTop;\n    }\n  }, {\n    key: \"getScrollHeight\",\n    value: function getScrollHeight() {\n      return this.getScroller().scrollHeight || mathMax(document.body.scrollHeight, document.documentElement.scrollHeight);\n    }\n  }, {\n    key: \"getOffsetHeight\",\n    value: function getOffsetHeight() {\n      var scroller = this.getScroller();\n      return scroller === window ? window.innerHeight : getBCR(scroller).height;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(target) {\n      var _this5 = this;\n      this.$activeTarget = target;\n      this.clear(); // Grab the list of target links (<a href=\"{$target}\">)\n\n      var links = selectAll(this.$selector // Split out the base selectors\n      .split(',') // Map to a selector that matches links with HREF ending in the ID (including '#')\n      .map(function (selector) {\n        return \"\".concat(selector, \"[href$=\\\"\").concat(target, \"\\\"]\");\n      }) // Join back into a single selector string\n      .join(','), this.$el);\n      links.forEach(function (link) {\n        if (hasClass(link, CLASS_NAME_DROPDOWN_ITEM)) {\n          // This is a dropdown item, so find the .dropdown-toggle and set its state\n          var dropdown = closest(SELECTOR_DROPDOWN, link);\n          if (dropdown) {\n            _this5.setActiveState(select(SELECTOR_DROPDOWN_TOGGLE, dropdown), true);\n          } // Also set this link's state\n\n          _this5.setActiveState(link, true);\n        } else {\n          // Set triggered link as active\n          _this5.setActiveState(link, true);\n          if (matches(link.parentElement, SELECTOR_NAV_ITEMS)) {\n            // Handle nav-link inside nav-item, and set nav-item active\n            _this5.setActiveState(link.parentElement, true);\n          } // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n          var el = link;\n          while (el) {\n            el = closest(SELECTOR_NAV_LIST_GROUP, el);\n            var sibling = el ? el.previousElementSibling : null;\n            if (sibling && matches(sibling, \"\".concat(SELECTOR_NAV_LINKS, \", \").concat(SELECTOR_LIST_ITEMS))) {\n              _this5.setActiveState(sibling, true);\n            } // Handle special case where nav-link is inside a nav-item\n\n            if (sibling && matches(sibling, SELECTOR_NAV_ITEMS)) {\n              _this5.setActiveState(select(SELECTOR_NAV_LINKS, sibling), true); // Add active state to nav-item as well\n\n              _this5.setActiveState(sibling, true);\n            }\n          }\n        }\n      }); // Signal event to via $root, passing ID of activated target and reference to array of links\n\n      if (links && links.length > 0 && this.$root) {\n        this.$root.$emit(ROOT_EVENT_NAME_ACTIVATE, target, links);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this6 = this;\n      selectAll(\"\".concat(this.$selector, \", \").concat(SELECTOR_NAV_ITEMS), this.$el).filter(function (el) {\n        return hasClass(el, CLASS_NAME_ACTIVE);\n      }).forEach(function (el) {\n        return _this6.setActiveState(el, false);\n      });\n    }\n  }, {\n    key: \"setActiveState\",\n    value: function setActiveState(el, active) {\n      if (!el) {\n        return;\n      }\n      if (active) {\n        addClass(el, CLASS_NAME_ACTIVE);\n      } else {\n        removeClass(el, CLASS_NAME_ACTIVE);\n      }\n    }\n  }], [{\n    key: \"Name\",\n    get: function get() {\n      return NAME;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Default;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return DefaultType;\n    }\n  }]);\n  return BVScrollspy;\n}();","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","EVENT_OPTIONS_NO_CAPTURE","RX_HREF","addClass","closest","getAttr","getBCR","hasClass","isElement","isVisible","matches","offset","position","removeClass","select","selectAll","getRootEventName","eventOn","eventOff","identity","isString","isUndefined","mathMax","toInteger","hasOwnProperty","toString","objectToString","observeDom","warn","NAME","CLASS_NAME_DROPDOWN_ITEM","CLASS_NAME_ACTIVE","SELECTOR_NAV_LIST_GROUP","SELECTOR_NAV_LINKS","SELECTOR_NAV_ITEMS","SELECTOR_LIST_ITEMS","SELECTOR_DROPDOWN","SELECTOR_DROPDOWN_ITEMS","SELECTOR_DROPDOWN_TOGGLE","ROOT_EVENT_NAME_ACTIVATE","METHOD_OFFSET","METHOD_POSITION","Default","element","method","throttle","DefaultType","TransitionEndEvents","toType","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","expectedTypes","valueType","_isVue","RegExp","test","concat","BVScrollspy","$root","$el","$scroller","$selector","join","$offsets","$targets","$activeTarget","$scrollHeight","$resizeTimeout","$scrollerObserver","$targetsObserver","$config","updateConfig","unlisten","cfg","constructor","Name","self","$nextTick","listen","dispose","clearTimeout","_this","scroller","getScroller","tagName","window","eventName","setObservers","handleEvent","_this2","on","_this3","disconnect","subtree","childList","attributes","attributeFilter","characterData","event","type","resizeThrottle","setTimeout","refresh","process","_this4","autoMethod","methodFn","offsetBase","getScrollTop","getScrollHeight","map","link","href","id","replace","trim","el","top","sort","a","b","reduce","memo","item","scrollTop","scrollHeight","maxScroll","getOffsetHeight","activate","clear","isActiveTarget","pageYOffset","document","body","documentElement","innerHeight","height","_this5","links","split","selector","dropdown","setActiveState","parentElement","sibling","previousElementSibling","$emit","_this6","active","get"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/directives/scrollspy/helpers/bv-scrollspy.class.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/*\n * Scrollspy class definition\n */\nimport { EVENT_OPTIONS_NO_CAPTURE } from '../../../constants/events';\nimport { RX_HREF } from '../../../constants/regex';\nimport { addClass, closest, getAttr, getBCR, hasClass, isElement, isVisible, matches, offset, position, removeClass, select, selectAll } from '../../../utils/dom';\nimport { getRootEventName, eventOn, eventOff } from '../../../utils/events';\nimport { identity } from '../../../utils/identity';\nimport { isString, isUndefined } from '../../../utils/inspect';\nimport { mathMax } from '../../../utils/math';\nimport { toInteger } from '../../../utils/number';\nimport { hasOwnProperty, toString as objectToString } from '../../../utils/object';\nimport { observeDom } from '../../../utils/observe-dom';\nimport { warn } from '../../../utils/warn';\n/*\n * Constants / Defaults\n */\n\nvar NAME = 'v-b-scrollspy';\nvar CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';\nvar CLASS_NAME_ACTIVE = 'active';\nvar SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\nvar SELECTOR_NAV_LINKS = '.nav-link';\nvar SELECTOR_NAV_ITEMS = '.nav-item';\nvar SELECTOR_LIST_ITEMS = '.list-group-item';\nvar SELECTOR_DROPDOWN = '.dropdown, .dropup';\nvar SELECTOR_DROPDOWN_ITEMS = '.dropdown-item';\nvar SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\nvar ROOT_EVENT_NAME_ACTIVATE = getRootEventName('BVScrollspy', 'activate');\nvar METHOD_OFFSET = 'offset';\nvar METHOD_POSITION = 'position';\nvar Default = {\n  element: 'body',\n  offset: 10,\n  method: 'auto',\n  throttle: 75\n};\nvar DefaultType = {\n  element: '(string|element|component)',\n  offset: 'number',\n  method: 'string',\n  throttle: 'number'\n}; // Transition Events\n\nvar TransitionEndEvents = ['webkitTransitionEnd', 'transitionend', 'otransitionend', 'oTransitionEnd'];\n/*\n * Utility Methods\n */\n// Better var type detection\n\nvar toType = function toType(obj)\n/* istanbul ignore next: not easy to test */\n{\n  return objectToString(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}; // Check config properties for expected types\n\n/* istanbul ignore next */\n\n\nvar typeCheckConfig = function typeCheckConfig(componentName, config, configTypes)\n/* istanbul ignore next: not easy to test */\n{\n  for (var property in configTypes) {\n    if (hasOwnProperty(configTypes, property)) {\n      var expectedTypes = configTypes[property];\n      var value = config[property];\n      var valueType = value && isElement(value) ? 'element' : toType(value); // handle Vue instances\n\n      valueType = value && value._isVue ? 'component' : valueType;\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        /* istanbul ignore next */\n        warn(\"\".concat(componentName, \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\"\"));\n      }\n    }\n  }\n};\n/*\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n/* istanbul ignore next: not easy to test */\n\n\nexport var BVScrollspy\n/* istanbul ignore next: not easy to test */\n= /*#__PURE__*/function () {\n  function BVScrollspy(element, config, $root) {\n    _classCallCheck(this, BVScrollspy);\n\n    // The element we activate links in\n    this.$el = element;\n    this.$scroller = null;\n    this.$selector = [SELECTOR_NAV_LINKS, SELECTOR_LIST_ITEMS, SELECTOR_DROPDOWN_ITEMS].join(',');\n    this.$offsets = [];\n    this.$targets = [];\n    this.$activeTarget = null;\n    this.$scrollHeight = 0;\n    this.$resizeTimeout = null;\n    this.$scrollerObserver = null;\n    this.$targetsObserver = null;\n    this.$root = $root || null;\n    this.$config = null;\n    this.updateConfig(config);\n  }\n\n  _createClass(BVScrollspy, [{\n    key: \"updateConfig\",\n    value: function updateConfig(config, $root) {\n      if (this.$scroller) {\n        // Just in case out scroll element has changed\n        this.unlisten();\n        this.$scroller = null;\n      }\n\n      var cfg = _objectSpread(_objectSpread({}, this.constructor.Default), config);\n\n      if ($root) {\n        this.$root = $root;\n      }\n\n      typeCheckConfig(this.constructor.Name, cfg, this.constructor.DefaultType);\n      this.$config = cfg;\n\n      if (this.$root) {\n        var self = this;\n        this.$root.$nextTick(function () {\n          self.listen();\n        });\n      } else {\n        this.listen();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.unlisten();\n      clearTimeout(this.$resizeTimeout);\n      this.$resizeTimeout = null;\n      this.$el = null;\n      this.$config = null;\n      this.$scroller = null;\n      this.$selector = null;\n      this.$offsets = null;\n      this.$targets = null;\n      this.$activeTarget = null;\n      this.$scrollHeight = null;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this = this;\n\n      var scroller = this.getScroller();\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOn(scroller, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      }\n\n      eventOn(window, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOn(window, 'resize', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOn(window, 'orientationchange', this, EVENT_OPTIONS_NO_CAPTURE);\n      TransitionEndEvents.forEach(function (eventName) {\n        eventOn(window, eventName, _this, EVENT_OPTIONS_NO_CAPTURE);\n      });\n      this.setObservers(true); // Schedule a refresh\n\n      this.handleEvent('refresh');\n    }\n  }, {\n    key: \"unlisten\",\n    value: function unlisten() {\n      var _this2 = this;\n\n      var scroller = this.getScroller();\n      this.setObservers(false);\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOff(scroller, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      }\n\n      eventOff(window, 'scroll', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOff(window, 'resize', this, EVENT_OPTIONS_NO_CAPTURE);\n      eventOff(window, 'orientationchange', this, EVENT_OPTIONS_NO_CAPTURE);\n      TransitionEndEvents.forEach(function (eventName) {\n        eventOff(window, eventName, _this2, EVENT_OPTIONS_NO_CAPTURE);\n      });\n    }\n  }, {\n    key: \"setObservers\",\n    value: function setObservers(on) {\n      var _this3 = this;\n\n      // We observe both the scroller for content changes, and the target links\n      this.$scrollerObserver && this.$scrollerObserver.disconnect();\n      this.$targetsObserver && this.$targetsObserver.disconnect();\n      this.$scrollerObserver = null;\n      this.$targetsObserver = null;\n\n      if (on) {\n        this.$targetsObserver = observeDom(this.$el, function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          attributes: true,\n          attributeFilter: ['href']\n        });\n        this.$scrollerObserver = observeDom(this.getScroller(), function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n          attributes: true,\n          attributeFilter: ['id', 'style', 'class']\n        });\n      }\n    } // General event handler\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      var type = isString(event) ? event : event.type;\n      var self = this;\n\n      var resizeThrottle = function resizeThrottle() {\n        if (!self.$resizeTimeout) {\n          self.$resizeTimeout = setTimeout(function () {\n            self.refresh();\n            self.process();\n            self.$resizeTimeout = null;\n          }, self.$config.throttle);\n        }\n      };\n\n      if (type === 'scroll') {\n        if (!this.$scrollerObserver) {\n          // Just in case we are added to the DOM before the scroll target is\n          // We re-instantiate our listeners, just in case\n          this.listen();\n        }\n\n        this.process();\n      } else if (/(resize|orientationchange|mutation|refresh)/.test(type)) {\n        // Postpone these events by throttle time\n        resizeThrottle();\n      }\n    } // Refresh the list of target links on the element we are applied to\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this4 = this;\n\n      var scroller = this.getScroller();\n\n      if (!scroller) {\n        return;\n      }\n\n      var autoMethod = scroller !== scroller.window ? METHOD_POSITION : METHOD_OFFSET;\n      var method = this.$config.method === 'auto' ? autoMethod : this.$config.method;\n      var methodFn = method === METHOD_POSITION ? position : offset;\n      var offsetBase = method === METHOD_POSITION ? this.getScrollTop() : 0;\n      this.$offsets = [];\n      this.$targets = [];\n      this.$scrollHeight = this.getScrollHeight(); // Find all the unique link HREFs that we will control\n\n      selectAll(this.$selector, this.$el) // Get HREF value\n      .map(function (link) {\n        return getAttr(link, 'href');\n      }) // Filter out HREFs that do not match our RegExp\n      .filter(function (href) {\n        return href && RX_HREF.test(href || '');\n      }) // Find all elements with ID that match HREF hash\n      .map(function (href) {\n        // Convert HREF into an ID (including # at beginning)\n        var id = href.replace(RX_HREF, '$1').trim();\n\n        if (!id) {\n          return null;\n        } // Find the element with the ID specified by id\n\n\n        var el = select(id, scroller);\n\n        if (el && isVisible(el)) {\n          return {\n            offset: toInteger(methodFn(el).top, 0) + offsetBase,\n            target: id\n          };\n        }\n\n        return null;\n      }).filter(identity) // Sort them by their offsets (smallest first)\n      .sort(function (a, b) {\n        return a.offset - b.offset;\n      }) // record only unique targets/offsets\n      .reduce(function (memo, item) {\n        if (!memo[item.target]) {\n          _this4.$offsets.push(item.offset);\n\n          _this4.$targets.push(item.target);\n\n          memo[item.target] = true;\n        }\n\n        return memo;\n      }, {}); // Return this for easy chaining\n\n      return this;\n    } // Handle activating/clearing\n\n  }, {\n    key: \"process\",\n    value: function process() {\n      var scrollTop = this.getScrollTop() + this.$config.offset;\n      var scrollHeight = this.getScrollHeight();\n      var maxScroll = this.$config.offset + scrollHeight - this.getOffsetHeight();\n\n      if (this.$scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n\n      if (scrollTop >= maxScroll) {\n        var target = this.$targets[this.$targets.length - 1];\n\n        if (this.$activeTarget !== target) {\n          this.activate(target);\n        }\n\n        return;\n      }\n\n      if (this.$activeTarget && scrollTop < this.$offsets[0] && this.$offsets[0] > 0) {\n        this.$activeTarget = null;\n        this.clear();\n        return;\n      }\n\n      for (var i = this.$offsets.length; i--;) {\n        var isActiveTarget = this.$activeTarget !== this.$targets[i] && scrollTop >= this.$offsets[i] && (isUndefined(this.$offsets[i + 1]) || scrollTop < this.$offsets[i + 1]);\n\n        if (isActiveTarget) {\n          this.activate(this.$targets[i]);\n        }\n      }\n    }\n  }, {\n    key: \"getScroller\",\n    value: function getScroller() {\n      if (this.$scroller) {\n        return this.$scroller;\n      }\n\n      var scroller = this.$config.element;\n\n      if (!scroller) {\n        return null;\n      } else if (isElement(scroller.$el)) {\n        scroller = scroller.$el;\n      } else if (isString(scroller)) {\n        scroller = select(scroller);\n      }\n\n      if (!scroller) {\n        return null;\n      }\n\n      this.$scroller = scroller.tagName === 'BODY' ? window : scroller;\n      return this.$scroller;\n    }\n  }, {\n    key: \"getScrollTop\",\n    value: function getScrollTop() {\n      var scroller = this.getScroller();\n      return scroller === window ? scroller.pageYOffset : scroller.scrollTop;\n    }\n  }, {\n    key: \"getScrollHeight\",\n    value: function getScrollHeight() {\n      return this.getScroller().scrollHeight || mathMax(document.body.scrollHeight, document.documentElement.scrollHeight);\n    }\n  }, {\n    key: \"getOffsetHeight\",\n    value: function getOffsetHeight() {\n      var scroller = this.getScroller();\n      return scroller === window ? window.innerHeight : getBCR(scroller).height;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(target) {\n      var _this5 = this;\n\n      this.$activeTarget = target;\n      this.clear(); // Grab the list of target links (<a href=\"{$target}\">)\n\n      var links = selectAll(this.$selector // Split out the base selectors\n      .split(',') // Map to a selector that matches links with HREF ending in the ID (including '#')\n      .map(function (selector) {\n        return \"\".concat(selector, \"[href$=\\\"\").concat(target, \"\\\"]\");\n      }) // Join back into a single selector string\n      .join(','), this.$el);\n      links.forEach(function (link) {\n        if (hasClass(link, CLASS_NAME_DROPDOWN_ITEM)) {\n          // This is a dropdown item, so find the .dropdown-toggle and set its state\n          var dropdown = closest(SELECTOR_DROPDOWN, link);\n\n          if (dropdown) {\n            _this5.setActiveState(select(SELECTOR_DROPDOWN_TOGGLE, dropdown), true);\n          } // Also set this link's state\n\n\n          _this5.setActiveState(link, true);\n        } else {\n          // Set triggered link as active\n          _this5.setActiveState(link, true);\n\n          if (matches(link.parentElement, SELECTOR_NAV_ITEMS)) {\n            // Handle nav-link inside nav-item, and set nav-item active\n            _this5.setActiveState(link.parentElement, true);\n          } // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n\n          var el = link;\n\n          while (el) {\n            el = closest(SELECTOR_NAV_LIST_GROUP, el);\n            var sibling = el ? el.previousElementSibling : null;\n\n            if (sibling && matches(sibling, \"\".concat(SELECTOR_NAV_LINKS, \", \").concat(SELECTOR_LIST_ITEMS))) {\n              _this5.setActiveState(sibling, true);\n            } // Handle special case where nav-link is inside a nav-item\n\n\n            if (sibling && matches(sibling, SELECTOR_NAV_ITEMS)) {\n              _this5.setActiveState(select(SELECTOR_NAV_LINKS, sibling), true); // Add active state to nav-item as well\n\n\n              _this5.setActiveState(sibling, true);\n            }\n          }\n        }\n      }); // Signal event to via $root, passing ID of activated target and reference to array of links\n\n      if (links && links.length > 0 && this.$root) {\n        this.$root.$emit(ROOT_EVENT_NAME_ACTIVATE, target, links);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this6 = this;\n\n      selectAll(\"\".concat(this.$selector, \", \").concat(SELECTOR_NAV_ITEMS), this.$el).filter(function (el) {\n        return hasClass(el, CLASS_NAME_ACTIVE);\n      }).forEach(function (el) {\n        return _this6.setActiveState(el, false);\n      });\n    }\n  }, {\n    key: \"setActiveState\",\n    value: function setActiveState(el, active) {\n      if (!el) {\n        return;\n      }\n\n      if (active) {\n        addClass(el, CLASS_NAME_ACTIVE);\n      } else {\n        removeClass(el, CLASS_NAME_ACTIVE);\n      }\n    }\n  }], [{\n    key: \"Name\",\n    get: function get() {\n      return NAME;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Default;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return DefaultType;\n    }\n  }]);\n\n  return BVScrollspy;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}