{"ast":null,"code":"import { get } from '../../../utils/get';\nimport { isDate, isFunction, isNumber, isNumeric, isUndefinedOrNull } from '../../../utils/inspect';\nimport { toFloat } from '../../../utils/number';\nimport { stringifyObjectValues } from '../../../utils/stringify-object-values';\nvar normalizeValue = function normalizeValue(value) {\n  if (isUndefinedOrNull(value)) {\n    return '';\n  }\n  if (isNumeric(value)) {\n    return toFloat(value, value);\n  }\n  return value;\n}; // Default sort compare routine\n//\n// TODO:\n//   Add option to sort by multiple columns (tri-state per column,\n//   plus order of columns in sort) where `sortBy` could be an array\n//   of objects `[ {key: 'foo', sortDir: 'asc'}, {key:'bar', sortDir: 'desc'} ...]`\n//   or an array of arrays `[ ['foo','asc'], ['bar','desc'] ]`\n//   Multisort will most likely be handled in `mixin-sort.js` by\n//   calling this method for each sortBy\n\nexport var defaultSortCompare = function defaultSortCompare(a, b) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    _ref$sortBy = _ref.sortBy,\n    sortBy = _ref$sortBy === void 0 ? null : _ref$sortBy,\n    _ref$formatter = _ref.formatter,\n    formatter = _ref$formatter === void 0 ? null : _ref$formatter,\n    _ref$locale = _ref.locale,\n    locale = _ref$locale === void 0 ? undefined : _ref$locale,\n    _ref$localeOptions = _ref.localeOptions,\n    localeOptions = _ref$localeOptions === void 0 ? {} : _ref$localeOptions,\n    _ref$nullLast = _ref.nullLast,\n    nullLast = _ref$nullLast === void 0 ? false : _ref$nullLast;\n\n  // Get the value by `sortBy`\n  var aa = get(a, sortBy, null);\n  var bb = get(b, sortBy, null); // Apply user-provided formatter\n\n  if (isFunction(formatter)) {\n    aa = formatter(aa, sortBy, a);\n    bb = formatter(bb, sortBy, b);\n  } // Internally normalize value\n  // `null` / `undefined` => ''\n  // `'0'` => `0`\n\n  aa = normalizeValue(aa);\n  bb = normalizeValue(bb);\n  if (isDate(aa) && isDate(bb) || isNumber(aa) && isNumber(bb)) {\n    // Special case for comparing dates and numbers\n    // Internally dates are compared via their epoch number values\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  } else if (nullLast && aa === '' && bb !== '') {\n    // Special case when sorting `null` / `undefined` / '' last\n    return 1;\n  } else if (nullLast && aa !== '' && bb === '') {\n    // Special case when sorting `null` / `undefined` / '' last\n    return -1;\n  } // Do localized string comparison\n\n  return stringifyObjectValues(aa).localeCompare(stringifyObjectValues(bb), locale, localeOptions);\n};","map":{"version":3,"names":["get","isDate","isFunction","isNumber","isNumeric","isUndefinedOrNull","toFloat","stringifyObjectValues","normalizeValue","value","defaultSortCompare","a","b","_ref","arguments","length","undefined","_ref$sortBy","sortBy","_ref$formatter","formatter","_ref$locale","locale","_ref$localeOptions","localeOptions","_ref$nullLast","nullLast","aa","bb","localeCompare"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/table/helpers/default-sort-compare.js"],"sourcesContent":["import { get } from '../../../utils/get';\nimport { isDate, isFunction, isNumber, isNumeric, isUndefinedOrNull } from '../../../utils/inspect';\nimport { toFloat } from '../../../utils/number';\nimport { stringifyObjectValues } from '../../../utils/stringify-object-values';\n\nvar normalizeValue = function normalizeValue(value) {\n  if (isUndefinedOrNull(value)) {\n    return '';\n  }\n\n  if (isNumeric(value)) {\n    return toFloat(value, value);\n  }\n\n  return value;\n}; // Default sort compare routine\n//\n// TODO:\n//   Add option to sort by multiple columns (tri-state per column,\n//   plus order of columns in sort) where `sortBy` could be an array\n//   of objects `[ {key: 'foo', sortDir: 'asc'}, {key:'bar', sortDir: 'desc'} ...]`\n//   or an array of arrays `[ ['foo','asc'], ['bar','desc'] ]`\n//   Multisort will most likely be handled in `mixin-sort.js` by\n//   calling this method for each sortBy\n\n\nexport var defaultSortCompare = function defaultSortCompare(a, b) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$sortBy = _ref.sortBy,\n      sortBy = _ref$sortBy === void 0 ? null : _ref$sortBy,\n      _ref$formatter = _ref.formatter,\n      formatter = _ref$formatter === void 0 ? null : _ref$formatter,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? undefined : _ref$locale,\n      _ref$localeOptions = _ref.localeOptions,\n      localeOptions = _ref$localeOptions === void 0 ? {} : _ref$localeOptions,\n      _ref$nullLast = _ref.nullLast,\n      nullLast = _ref$nullLast === void 0 ? false : _ref$nullLast;\n\n  // Get the value by `sortBy`\n  var aa = get(a, sortBy, null);\n  var bb = get(b, sortBy, null); // Apply user-provided formatter\n\n  if (isFunction(formatter)) {\n    aa = formatter(aa, sortBy, a);\n    bb = formatter(bb, sortBy, b);\n  } // Internally normalize value\n  // `null` / `undefined` => ''\n  // `'0'` => `0`\n\n\n  aa = normalizeValue(aa);\n  bb = normalizeValue(bb);\n\n  if (isDate(aa) && isDate(bb) || isNumber(aa) && isNumber(bb)) {\n    // Special case for comparing dates and numbers\n    // Internally dates are compared via their epoch number values\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  } else if (nullLast && aa === '' && bb !== '') {\n    // Special case when sorting `null` / `undefined` / '' last\n    return 1;\n  } else if (nullLast && aa !== '' && bb === '') {\n    // Special case when sorting `null` / `undefined` / '' last\n    return -1;\n  } // Do localized string comparison\n\n\n  return stringifyObjectValues(aa).localeCompare(stringifyObjectValues(bb), locale, localeOptions);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}