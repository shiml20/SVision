{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { NAME_FORM_GROUP } from '../../constants/components';\nimport { IS_BROWSER } from '../../constants/env';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { RX_SPACE_SPLIT } from '../../constants/regex';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_DESCRIPTION, SLOT_NAME_INVALID_FEEDBACK, SLOT_NAME_LABEL, SLOT_NAME_VALID_FEEDBACK } from '../../constants/slots';\nimport { arrayIncludes } from '../../utils/array';\nimport { getBreakpointsUpCached } from '../../utils/config';\nimport { cssEscape } from '../../utils/css-escape';\nimport { select, selectAll, isVisible, setAttr, removeAttr, getAttr, attemptFocus } from '../../utils/dom';\nimport { identity } from '../../utils/identity';\nimport { isBoolean } from '../../utils/inspect';\nimport { toInteger } from '../../utils/number';\nimport { create, keys, sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable, suffixPropName } from '../../utils/props';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BCol } from '../layout/col';\nimport { BFormRow } from '../layout/form-row';\nimport { BFormText } from '../form/form-text';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormValidFeedback } from '../form/form-valid-feedback'; // --- Constants ---\n\nvar INPUTS = ['input', 'select', 'textarea']; // Selector for finding first input in the form group\n\nvar INPUT_SELECTOR = INPUTS.map(function (v) {\n  return \"\".concat(v, \":not([disabled])\");\n}).join(); // A list of interactive elements (tag names) inside `<b-form-group>`'s legend\n\nvar LEGEND_INTERACTIVE_ELEMENTS = [].concat(INPUTS, ['a', 'button', 'label']); // --- Props ---\n// Prop generator for lazy generation of props\n\nexport var generateProps = function generateProps() {\n  return makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), formStateProps), getBreakpointsUpCached().reduce(function (props, breakpoint) {\n    // i.e. 'content-cols', 'content-cols-sm', 'content-cols-md', ...\n    props[suffixPropName(breakpoint, 'contentCols')] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING); // i.e. 'label-align', 'label-align-sm', 'label-align-md', ...\n\n    props[suffixPropName(breakpoint, 'labelAlign')] = makeProp(PROP_TYPE_STRING); // i.e. 'label-cols', 'label-cols-sm', 'label-cols-md', ...\n\n    props[suffixPropName(breakpoint, 'labelCols')] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING);\n    return props;\n  }, create(null))), {}, {\n    description: makeProp(PROP_TYPE_STRING),\n    disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n    feedbackAriaLive: makeProp(PROP_TYPE_STRING, 'assertive'),\n    invalidFeedback: makeProp(PROP_TYPE_STRING),\n    label: makeProp(PROP_TYPE_STRING),\n    labelClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n    labelFor: makeProp(PROP_TYPE_STRING),\n    labelSize: makeProp(PROP_TYPE_STRING),\n    labelSrOnly: makeProp(PROP_TYPE_BOOLEAN, false),\n    tooltip: makeProp(PROP_TYPE_BOOLEAN, false),\n    validFeedback: makeProp(PROP_TYPE_STRING),\n    validated: makeProp(PROP_TYPE_BOOLEAN, false)\n  })), NAME_FORM_GROUP);\n}; // --- Main component ---\n// We do not use `extend()` here as that would evaluate the props\n// immediately, which we do not want to happen\n// @vue/component\n\nexport var BFormGroup = {\n  name: NAME_FORM_GROUP,\n  mixins: [idMixin, formStateMixin, normalizeSlotMixin],\n  get props() {\n    // Allow props to be lazy evaled on first access and\n    // then they become a non-getter afterwards\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters\n    delete this.props; // eslint-disable-next-line no-return-assign\n\n    return this.props = generateProps();\n  },\n  data: function data() {\n    return {\n      ariaDescribedby: null\n    };\n  },\n  computed: {\n    contentColProps: function contentColProps() {\n      return this.getColProps(this.$props, 'content');\n    },\n    labelAlignClasses: function labelAlignClasses() {\n      return this.getAlignClasses(this.$props, 'label');\n    },\n    labelColProps: function labelColProps() {\n      return this.getColProps(this.$props, 'label');\n    },\n    isHorizontal: function isHorizontal() {\n      // Determine if the form group will be rendered horizontal\n      // based on the existence of 'content-col' or 'label-col' props\n      return keys(this.contentColProps).length > 0 || keys(this.labelColProps).length > 0;\n    }\n  },\n  watch: {\n    ariaDescribedby: function ariaDescribedby(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.updateAriaDescribedby(newValue, oldValue);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.$nextTick(function () {\n      // Set `aria-describedby` on the input specified by `labelFor`\n      // We do this in a `$nextTick()` to ensure the children have finished rendering\n      _this.updateAriaDescribedby(_this.ariaDescribedby);\n    });\n  },\n  methods: {\n    getAlignClasses: function getAlignClasses(props, prefix) {\n      return getBreakpointsUpCached().reduce(function (result, breakpoint) {\n        var propValue = props[suffixPropName(breakpoint, \"\".concat(prefix, \"Align\"))] || null;\n        if (propValue) {\n          result.push(['text', breakpoint, propValue].filter(identity).join('-'));\n        }\n        return result;\n      }, []);\n    },\n    getColProps: function getColProps(props, prefix) {\n      return getBreakpointsUpCached().reduce(function (result, breakpoint) {\n        var propValue = props[suffixPropName(breakpoint, \"\".concat(prefix, \"Cols\"))]; // Handle case where the prop's value is an empty string,\n        // which represents `true`\n\n        propValue = propValue === '' ? true : propValue || false;\n        if (!isBoolean(propValue) && propValue !== 'auto') {\n          // Convert to column size to number\n          propValue = toInteger(propValue, 0); // Ensure column size is greater than `0`\n\n          propValue = propValue > 0 ? propValue : false;\n        } // Add the prop to the list of props to give to `<b-col>`\n        // If breakpoint is '' (`${prefix}Cols` is `true`), then we use\n        // the 'col' prop to make equal width at 'xs'\n\n        if (propValue) {\n          result[breakpoint || (isBoolean(propValue) ? 'col' : 'cols')] = propValue;\n        }\n        return result;\n      }, {});\n    },\n    // Sets the `aria-describedby` attribute on the input if `labelFor` is set\n    // Optionally accepts a string of IDs to remove as the second parameter\n    // Preserves any `aria-describedby` value(s) user may have on input\n    updateAriaDescribedby: function updateAriaDescribedby(newValue, oldValue) {\n      var labelFor = this.labelFor;\n      if (IS_BROWSER && labelFor) {\n        // We need to escape `labelFor` since it can be user-provided\n        var $input = select(\"#\".concat(cssEscape(labelFor)), this.$refs.content);\n        if ($input) {\n          var attr = 'aria-describedby';\n          var newIds = (newValue || '').split(RX_SPACE_SPLIT);\n          var oldIds = (oldValue || '').split(RX_SPACE_SPLIT); // Update ID list, preserving any original IDs\n          // and ensuring the ID's are unique\n\n          var ids = (getAttr($input, attr) || '').split(RX_SPACE_SPLIT).filter(function (id) {\n            return !arrayIncludes(oldIds, id);\n          }).concat(newIds).filter(function (id, index, ids) {\n            return ids.indexOf(id) === index;\n          }).filter(identity).join(' ').trim();\n          if (ids) {\n            setAttr($input, attr, ids);\n          } else {\n            removeAttr($input, attr);\n          }\n        }\n      }\n    },\n    onLegendClick: function onLegendClick(event) {\n      // Don't do anything if `labelFor` is set\n\n      /* istanbul ignore next: clicking a label will focus the input, so no need to test */\n      if (this.labelFor) {\n        return;\n      }\n      var target = event.target;\n      var tagName = target ? target.tagName : ''; // If clicked an interactive element inside legend,\n      // we just let the default happen\n\n      /* istanbul ignore next */\n\n      if (LEGEND_INTERACTIVE_ELEMENTS.indexOf(tagName) !== -1) {\n        return;\n      } // If only a single input, focus it, emulating label behaviour\n\n      var inputs = selectAll(INPUT_SELECTOR, this.$refs.content).filter(isVisible);\n      if (inputs.length === 1) {\n        attemptFocus(inputs[0]);\n      }\n    }\n  },\n  render: function render(h) {\n    var state = this.computedState,\n      feedbackAriaLive = this.feedbackAriaLive,\n      isHorizontal = this.isHorizontal,\n      labelFor = this.labelFor,\n      normalizeSlot = this.normalizeSlot,\n      safeId = this.safeId,\n      tooltip = this.tooltip;\n    var id = safeId();\n    var isFieldset = !labelFor;\n    var $label = h();\n    var labelContent = normalizeSlot(SLOT_NAME_LABEL) || this.label;\n    var labelId = labelContent ? safeId('_BV_label_') : null;\n    if (labelContent || isHorizontal) {\n      var labelSize = this.labelSize,\n        labelColProps = this.labelColProps;\n      var labelTag = isFieldset ? 'legend' : 'label';\n      if (this.labelSrOnly) {\n        if (labelContent) {\n          $label = h(labelTag, {\n            class: 'sr-only',\n            attrs: {\n              id: labelId,\n              for: labelFor || null\n            }\n          }, [labelContent]);\n        }\n        $label = h(isHorizontal ? BCol : 'div', {\n          props: isHorizontal ? labelColProps : {}\n        }, [$label]);\n      } else {\n        $label = h(isHorizontal ? BCol : labelTag, {\n          on: isFieldset ? {\n            click: this.onLegendClick\n          } : {},\n          props: isHorizontal ? _objectSpread(_objectSpread({}, labelColProps), {}, {\n            tag: labelTag\n          }) : {},\n          attrs: {\n            id: labelId,\n            for: labelFor || null,\n            // We add a `tabindex` to legend so that screen readers\n            // will properly read the `aria-labelledby` in IE\n            tabindex: isFieldset ? '-1' : null\n          },\n          class: [\n          // Hide the focus ring on the legend\n          isFieldset ? 'bv-no-focus-ring' : '',\n          // When horizontal or if a legend is rendered, add 'col-form-label' class\n          // for correct sizing as Bootstrap has inconsistent font styling for\n          // legend in non-horizontal form groups\n          // See: https://github.com/twbs/bootstrap/issues/27805\n          isHorizontal || isFieldset ? 'col-form-label' : '',\n          // Emulate label padding top of `0` on legend when not horizontal\n          !isHorizontal && isFieldset ? 'pt-0' : '',\n          // If not horizontal and not a legend, we add 'd-block' class to label\n          // so that label-align works\n          !isHorizontal && !isFieldset ? 'd-block' : '', labelSize ? \"col-form-label-\".concat(labelSize) : '', this.labelAlignClasses, this.labelClass]\n        }, [labelContent]);\n      }\n    }\n    var $invalidFeedback = h();\n    var invalidFeedbackContent = normalizeSlot(SLOT_NAME_INVALID_FEEDBACK) || this.invalidFeedback;\n    var invalidFeedbackId = invalidFeedbackContent ? safeId('_BV_feedback_invalid_') : null;\n    if (invalidFeedbackContent) {\n      $invalidFeedback = h(BFormInvalidFeedback, {\n        props: {\n          ariaLive: feedbackAriaLive,\n          id: invalidFeedbackId,\n          // If state is explicitly `false`, always show the feedback\n          state: state,\n          tooltip: tooltip\n        },\n        attrs: {\n          tabindex: invalidFeedbackContent ? '-1' : null\n        }\n      }, [invalidFeedbackContent]);\n    }\n    var $validFeedback = h();\n    var validFeedbackContent = normalizeSlot(SLOT_NAME_VALID_FEEDBACK) || this.validFeedback;\n    var validFeedbackId = validFeedbackContent ? safeId('_BV_feedback_valid_') : null;\n    if (validFeedbackContent) {\n      $validFeedback = h(BFormValidFeedback, {\n        props: {\n          ariaLive: feedbackAriaLive,\n          id: validFeedbackId,\n          // If state is explicitly `true`, always show the feedback\n          state: state,\n          tooltip: tooltip\n        },\n        attrs: {\n          tabindex: validFeedbackContent ? '-1' : null\n        }\n      }, [validFeedbackContent]);\n    }\n    var $description = h();\n    var descriptionContent = normalizeSlot(SLOT_NAME_DESCRIPTION) || this.description;\n    var descriptionId = descriptionContent ? safeId('_BV_description_') : null;\n    if (descriptionContent) {\n      $description = h(BFormText, {\n        attrs: {\n          id: descriptionId,\n          tabindex: '-1'\n        }\n      }, [descriptionContent]);\n    } // Update `ariaDescribedby`\n    // Screen readers will read out any content linked to by `aria-describedby`\n    // even if the content is hidden with `display: none;`, hence we only include\n    // feedback IDs if the form group's state is explicitly valid or invalid\n\n    var ariaDescribedby = this.ariaDescribedby = [descriptionId, state === false ? invalidFeedbackId : null, state === true ? validFeedbackId : null].filter(identity).join(' ') || null;\n    var $content = h(isHorizontal ? BCol : 'div', {\n      props: isHorizontal ? this.contentColProps : {},\n      ref: 'content'\n    }, [normalizeSlot(SLOT_NAME_DEFAULT, {\n      ariaDescribedby: ariaDescribedby,\n      descriptionId: descriptionId,\n      id: id,\n      labelId: labelId\n    }) || h(), $invalidFeedback, $validFeedback, $description]); // Return it wrapped in a form group\n    // Note: Fieldsets do not support adding `row` or `form-row` directly\n    // to them due to browser specific render issues, so we move the `form-row`\n    // to an inner wrapper div when horizontal and using a fieldset\n\n    return h(isFieldset ? 'fieldset' : isHorizontal ? BFormRow : 'div', {\n      staticClass: 'form-group',\n      class: [{\n        'was-validated': this.validated\n      }, this.stateClass],\n      attrs: {\n        id: id,\n        disabled: isFieldset ? this.disabled : null,\n        role: isFieldset ? null : 'group',\n        'aria-invalid': this.computedAriaInvalid,\n        // Only apply `aria-labelledby` if we are a horizontal fieldset\n        // as the legend is no longer a direct child of fieldset\n        'aria-labelledby': isFieldset && isHorizontal ? labelId : null\n      }\n    }, isHorizontal && isFieldset ? [h(BFormRow, [$label, $content])] : [$label, $content]);\n  }\n};","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","NAME_FORM_GROUP","IS_BROWSER","PROP_TYPE_ARRAY_OBJECT_STRING","PROP_TYPE_BOOLEAN","PROP_TYPE_BOOLEAN_NUMBER_STRING","PROP_TYPE_STRING","RX_SPACE_SPLIT","SLOT_NAME_DEFAULT","SLOT_NAME_DESCRIPTION","SLOT_NAME_INVALID_FEEDBACK","SLOT_NAME_LABEL","SLOT_NAME_VALID_FEEDBACK","arrayIncludes","getBreakpointsUpCached","cssEscape","select","selectAll","isVisible","setAttr","removeAttr","getAttr","attemptFocus","identity","isBoolean","toInteger","create","sortKeys","makeProp","makePropsConfigurable","suffixPropName","formStateMixin","props","formStateProps","idMixin","idProps","normalizeSlotMixin","BCol","BFormRow","BFormText","BFormInvalidFeedback","BFormValidFeedback","INPUTS","INPUT_SELECTOR","map","v","concat","join","LEGEND_INTERACTIVE_ELEMENTS","generateProps","reduce","breakpoint","description","disabled","feedbackAriaLive","invalidFeedback","label","labelClass","labelFor","labelSize","labelSrOnly","tooltip","validFeedback","validated","BFormGroup","name","mixins","data","ariaDescribedby","computed","contentColProps","getColProps","$props","labelAlignClasses","getAlignClasses","labelColProps","isHorizontal","watch","newValue","oldValue","updateAriaDescribedby","mounted","_this","$nextTick","methods","prefix","result","propValue","$input","$refs","content","attr","newIds","split","oldIds","ids","id","index","indexOf","trim","onLegendClick","event","tagName","inputs","render","h","state","computedState","normalizeSlot","safeId","isFieldset","$label","labelContent","labelId","labelTag","class","attrs","for","on","click","tag","tabindex","$invalidFeedback","invalidFeedbackContent","invalidFeedbackId","ariaLive","$validFeedback","validFeedbackContent","validFeedbackId","$description","descriptionContent","descriptionId","$content","ref","staticClass","stateClass","role","computedAriaInvalid"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/form-group/form-group.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { NAME_FORM_GROUP } from '../../constants/components';\nimport { IS_BROWSER } from '../../constants/env';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { RX_SPACE_SPLIT } from '../../constants/regex';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_DESCRIPTION, SLOT_NAME_INVALID_FEEDBACK, SLOT_NAME_LABEL, SLOT_NAME_VALID_FEEDBACK } from '../../constants/slots';\nimport { arrayIncludes } from '../../utils/array';\nimport { getBreakpointsUpCached } from '../../utils/config';\nimport { cssEscape } from '../../utils/css-escape';\nimport { select, selectAll, isVisible, setAttr, removeAttr, getAttr, attemptFocus } from '../../utils/dom';\nimport { identity } from '../../utils/identity';\nimport { isBoolean } from '../../utils/inspect';\nimport { toInteger } from '../../utils/number';\nimport { create, keys, sortKeys } from '../../utils/object';\nimport { makeProp, makePropsConfigurable, suffixPropName } from '../../utils/props';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BCol } from '../layout/col';\nimport { BFormRow } from '../layout/form-row';\nimport { BFormText } from '../form/form-text';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormValidFeedback } from '../form/form-valid-feedback'; // --- Constants ---\n\nvar INPUTS = ['input', 'select', 'textarea']; // Selector for finding first input in the form group\n\nvar INPUT_SELECTOR = INPUTS.map(function (v) {\n  return \"\".concat(v, \":not([disabled])\");\n}).join(); // A list of interactive elements (tag names) inside `<b-form-group>`'s legend\n\nvar LEGEND_INTERACTIVE_ELEMENTS = [].concat(INPUTS, ['a', 'button', 'label']); // --- Props ---\n// Prop generator for lazy generation of props\n\nexport var generateProps = function generateProps() {\n  return makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), formStateProps), getBreakpointsUpCached().reduce(function (props, breakpoint) {\n    // i.e. 'content-cols', 'content-cols-sm', 'content-cols-md', ...\n    props[suffixPropName(breakpoint, 'contentCols')] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING); // i.e. 'label-align', 'label-align-sm', 'label-align-md', ...\n\n    props[suffixPropName(breakpoint, 'labelAlign')] = makeProp(PROP_TYPE_STRING); // i.e. 'label-cols', 'label-cols-sm', 'label-cols-md', ...\n\n    props[suffixPropName(breakpoint, 'labelCols')] = makeProp(PROP_TYPE_BOOLEAN_NUMBER_STRING);\n    return props;\n  }, create(null))), {}, {\n    description: makeProp(PROP_TYPE_STRING),\n    disabled: makeProp(PROP_TYPE_BOOLEAN, false),\n    feedbackAriaLive: makeProp(PROP_TYPE_STRING, 'assertive'),\n    invalidFeedback: makeProp(PROP_TYPE_STRING),\n    label: makeProp(PROP_TYPE_STRING),\n    labelClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n    labelFor: makeProp(PROP_TYPE_STRING),\n    labelSize: makeProp(PROP_TYPE_STRING),\n    labelSrOnly: makeProp(PROP_TYPE_BOOLEAN, false),\n    tooltip: makeProp(PROP_TYPE_BOOLEAN, false),\n    validFeedback: makeProp(PROP_TYPE_STRING),\n    validated: makeProp(PROP_TYPE_BOOLEAN, false)\n  })), NAME_FORM_GROUP);\n}; // --- Main component ---\n// We do not use `extend()` here as that would evaluate the props\n// immediately, which we do not want to happen\n// @vue/component\n\nexport var BFormGroup = {\n  name: NAME_FORM_GROUP,\n  mixins: [idMixin, formStateMixin, normalizeSlotMixin],\n\n  get props() {\n    // Allow props to be lazy evaled on first access and\n    // then they become a non-getter afterwards\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters\n    delete this.props; // eslint-disable-next-line no-return-assign\n\n    return this.props = generateProps();\n  },\n\n  data: function data() {\n    return {\n      ariaDescribedby: null\n    };\n  },\n  computed: {\n    contentColProps: function contentColProps() {\n      return this.getColProps(this.$props, 'content');\n    },\n    labelAlignClasses: function labelAlignClasses() {\n      return this.getAlignClasses(this.$props, 'label');\n    },\n    labelColProps: function labelColProps() {\n      return this.getColProps(this.$props, 'label');\n    },\n    isHorizontal: function isHorizontal() {\n      // Determine if the form group will be rendered horizontal\n      // based on the existence of 'content-col' or 'label-col' props\n      return keys(this.contentColProps).length > 0 || keys(this.labelColProps).length > 0;\n    }\n  },\n  watch: {\n    ariaDescribedby: function ariaDescribedby(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.updateAriaDescribedby(newValue, oldValue);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      // Set `aria-describedby` on the input specified by `labelFor`\n      // We do this in a `$nextTick()` to ensure the children have finished rendering\n      _this.updateAriaDescribedby(_this.ariaDescribedby);\n    });\n  },\n  methods: {\n    getAlignClasses: function getAlignClasses(props, prefix) {\n      return getBreakpointsUpCached().reduce(function (result, breakpoint) {\n        var propValue = props[suffixPropName(breakpoint, \"\".concat(prefix, \"Align\"))] || null;\n\n        if (propValue) {\n          result.push(['text', breakpoint, propValue].filter(identity).join('-'));\n        }\n\n        return result;\n      }, []);\n    },\n    getColProps: function getColProps(props, prefix) {\n      return getBreakpointsUpCached().reduce(function (result, breakpoint) {\n        var propValue = props[suffixPropName(breakpoint, \"\".concat(prefix, \"Cols\"))]; // Handle case where the prop's value is an empty string,\n        // which represents `true`\n\n        propValue = propValue === '' ? true : propValue || false;\n\n        if (!isBoolean(propValue) && propValue !== 'auto') {\n          // Convert to column size to number\n          propValue = toInteger(propValue, 0); // Ensure column size is greater than `0`\n\n          propValue = propValue > 0 ? propValue : false;\n        } // Add the prop to the list of props to give to `<b-col>`\n        // If breakpoint is '' (`${prefix}Cols` is `true`), then we use\n        // the 'col' prop to make equal width at 'xs'\n\n\n        if (propValue) {\n          result[breakpoint || (isBoolean(propValue) ? 'col' : 'cols')] = propValue;\n        }\n\n        return result;\n      }, {});\n    },\n    // Sets the `aria-describedby` attribute on the input if `labelFor` is set\n    // Optionally accepts a string of IDs to remove as the second parameter\n    // Preserves any `aria-describedby` value(s) user may have on input\n    updateAriaDescribedby: function updateAriaDescribedby(newValue, oldValue) {\n      var labelFor = this.labelFor;\n\n      if (IS_BROWSER && labelFor) {\n        // We need to escape `labelFor` since it can be user-provided\n        var $input = select(\"#\".concat(cssEscape(labelFor)), this.$refs.content);\n\n        if ($input) {\n          var attr = 'aria-describedby';\n          var newIds = (newValue || '').split(RX_SPACE_SPLIT);\n          var oldIds = (oldValue || '').split(RX_SPACE_SPLIT); // Update ID list, preserving any original IDs\n          // and ensuring the ID's are unique\n\n          var ids = (getAttr($input, attr) || '').split(RX_SPACE_SPLIT).filter(function (id) {\n            return !arrayIncludes(oldIds, id);\n          }).concat(newIds).filter(function (id, index, ids) {\n            return ids.indexOf(id) === index;\n          }).filter(identity).join(' ').trim();\n\n          if (ids) {\n            setAttr($input, attr, ids);\n          } else {\n            removeAttr($input, attr);\n          }\n        }\n      }\n    },\n    onLegendClick: function onLegendClick(event) {\n      // Don't do anything if `labelFor` is set\n\n      /* istanbul ignore next: clicking a label will focus the input, so no need to test */\n      if (this.labelFor) {\n        return;\n      }\n\n      var target = event.target;\n      var tagName = target ? target.tagName : ''; // If clicked an interactive element inside legend,\n      // we just let the default happen\n\n      /* istanbul ignore next */\n\n      if (LEGEND_INTERACTIVE_ELEMENTS.indexOf(tagName) !== -1) {\n        return;\n      } // If only a single input, focus it, emulating label behaviour\n\n\n      var inputs = selectAll(INPUT_SELECTOR, this.$refs.content).filter(isVisible);\n\n      if (inputs.length === 1) {\n        attemptFocus(inputs[0]);\n      }\n    }\n  },\n  render: function render(h) {\n    var state = this.computedState,\n        feedbackAriaLive = this.feedbackAriaLive,\n        isHorizontal = this.isHorizontal,\n        labelFor = this.labelFor,\n        normalizeSlot = this.normalizeSlot,\n        safeId = this.safeId,\n        tooltip = this.tooltip;\n    var id = safeId();\n    var isFieldset = !labelFor;\n    var $label = h();\n    var labelContent = normalizeSlot(SLOT_NAME_LABEL) || this.label;\n    var labelId = labelContent ? safeId('_BV_label_') : null;\n\n    if (labelContent || isHorizontal) {\n      var labelSize = this.labelSize,\n          labelColProps = this.labelColProps;\n      var labelTag = isFieldset ? 'legend' : 'label';\n\n      if (this.labelSrOnly) {\n        if (labelContent) {\n          $label = h(labelTag, {\n            class: 'sr-only',\n            attrs: {\n              id: labelId,\n              for: labelFor || null\n            }\n          }, [labelContent]);\n        }\n\n        $label = h(isHorizontal ? BCol : 'div', {\n          props: isHorizontal ? labelColProps : {}\n        }, [$label]);\n      } else {\n        $label = h(isHorizontal ? BCol : labelTag, {\n          on: isFieldset ? {\n            click: this.onLegendClick\n          } : {},\n          props: isHorizontal ? _objectSpread(_objectSpread({}, labelColProps), {}, {\n            tag: labelTag\n          }) : {},\n          attrs: {\n            id: labelId,\n            for: labelFor || null,\n            // We add a `tabindex` to legend so that screen readers\n            // will properly read the `aria-labelledby` in IE\n            tabindex: isFieldset ? '-1' : null\n          },\n          class: [// Hide the focus ring on the legend\n          isFieldset ? 'bv-no-focus-ring' : '', // When horizontal or if a legend is rendered, add 'col-form-label' class\n          // for correct sizing as Bootstrap has inconsistent font styling for\n          // legend in non-horizontal form groups\n          // See: https://github.com/twbs/bootstrap/issues/27805\n          isHorizontal || isFieldset ? 'col-form-label' : '', // Emulate label padding top of `0` on legend when not horizontal\n          !isHorizontal && isFieldset ? 'pt-0' : '', // If not horizontal and not a legend, we add 'd-block' class to label\n          // so that label-align works\n          !isHorizontal && !isFieldset ? 'd-block' : '', labelSize ? \"col-form-label-\".concat(labelSize) : '', this.labelAlignClasses, this.labelClass]\n        }, [labelContent]);\n      }\n    }\n\n    var $invalidFeedback = h();\n    var invalidFeedbackContent = normalizeSlot(SLOT_NAME_INVALID_FEEDBACK) || this.invalidFeedback;\n    var invalidFeedbackId = invalidFeedbackContent ? safeId('_BV_feedback_invalid_') : null;\n\n    if (invalidFeedbackContent) {\n      $invalidFeedback = h(BFormInvalidFeedback, {\n        props: {\n          ariaLive: feedbackAriaLive,\n          id: invalidFeedbackId,\n          // If state is explicitly `false`, always show the feedback\n          state: state,\n          tooltip: tooltip\n        },\n        attrs: {\n          tabindex: invalidFeedbackContent ? '-1' : null\n        }\n      }, [invalidFeedbackContent]);\n    }\n\n    var $validFeedback = h();\n    var validFeedbackContent = normalizeSlot(SLOT_NAME_VALID_FEEDBACK) || this.validFeedback;\n    var validFeedbackId = validFeedbackContent ? safeId('_BV_feedback_valid_') : null;\n\n    if (validFeedbackContent) {\n      $validFeedback = h(BFormValidFeedback, {\n        props: {\n          ariaLive: feedbackAriaLive,\n          id: validFeedbackId,\n          // If state is explicitly `true`, always show the feedback\n          state: state,\n          tooltip: tooltip\n        },\n        attrs: {\n          tabindex: validFeedbackContent ? '-1' : null\n        }\n      }, [validFeedbackContent]);\n    }\n\n    var $description = h();\n    var descriptionContent = normalizeSlot(SLOT_NAME_DESCRIPTION) || this.description;\n    var descriptionId = descriptionContent ? safeId('_BV_description_') : null;\n\n    if (descriptionContent) {\n      $description = h(BFormText, {\n        attrs: {\n          id: descriptionId,\n          tabindex: '-1'\n        }\n      }, [descriptionContent]);\n    } // Update `ariaDescribedby`\n    // Screen readers will read out any content linked to by `aria-describedby`\n    // even if the content is hidden with `display: none;`, hence we only include\n    // feedback IDs if the form group's state is explicitly valid or invalid\n\n\n    var ariaDescribedby = this.ariaDescribedby = [descriptionId, state === false ? invalidFeedbackId : null, state === true ? validFeedbackId : null].filter(identity).join(' ') || null;\n    var $content = h(isHorizontal ? BCol : 'div', {\n      props: isHorizontal ? this.contentColProps : {},\n      ref: 'content'\n    }, [normalizeSlot(SLOT_NAME_DEFAULT, {\n      ariaDescribedby: ariaDescribedby,\n      descriptionId: descriptionId,\n      id: id,\n      labelId: labelId\n    }) || h(), $invalidFeedback, $validFeedback, $description]); // Return it wrapped in a form group\n    // Note: Fieldsets do not support adding `row` or `form-row` directly\n    // to them due to browser specific render issues, so we move the `form-row`\n    // to an inner wrapper div when horizontal and using a fieldset\n\n    return h(isFieldset ? 'fieldset' : isHorizontal ? BFormRow : 'div', {\n      staticClass: 'form-group',\n      class: [{\n        'was-validated': this.validated\n      }, this.stateClass],\n      attrs: {\n        id: id,\n        disabled: isFieldset ? this.disabled : null,\n        role: isFieldset ? null : 'group',\n        'aria-invalid': this.computedAriaInvalid,\n        // Only apply `aria-labelledby` if we are a horizontal fieldset\n        // as the legend is no longer a direct child of fieldset\n        'aria-labelledby': isFieldset && isHorizontal ? labelId : null\n      }\n    }, isHorizontal && isFieldset ? [h(BFormRow, [$label, $content])] : [$label, $content]);\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}