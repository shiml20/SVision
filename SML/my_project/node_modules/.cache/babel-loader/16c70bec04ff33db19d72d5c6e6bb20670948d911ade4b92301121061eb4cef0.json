{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport { extend, REF_FOR_KEY } from '../../../vue';\nimport { EVENT_NAME_ROW_CLICKED, EVENT_NAME_ROW_HOVERED, EVENT_NAME_ROW_UNHOVERED } from '../../../constants/events';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_FUNCTION, PROP_TYPE_OBJECT_FUNCTION } from '../../../constants/props';\nimport { SLOT_NAME_ROW_DETAILS } from '../../../constants/slots';\nimport { useParentMixin } from '../../../mixins/use-parent';\nimport { get } from '../../../utils/get';\nimport { isFunction, isString, isUndefinedOrNull } from '../../../utils/inspect';\nimport { makeProp } from '../../../utils/props';\nimport { safeVueInstance } from '../../../utils/safe-vue-instance';\nimport { toString } from '../../../utils/string';\nimport { BTr } from '../tr';\nimport { BTd } from '../td';\nimport { BTh } from '../th';\nimport { FIELD_KEY_CELL_VARIANT, FIELD_KEY_ROW_VARIANT, FIELD_KEY_SHOW_DETAILS } from './constants'; // --- Props ---\n\nexport var props = {\n  detailsTdClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  tbodyTrAttr: makeProp(PROP_TYPE_OBJECT_FUNCTION),\n  tbodyTrClass: makeProp([].concat(_toConsumableArray(PROP_TYPE_ARRAY_OBJECT_STRING), [PROP_TYPE_FUNCTION]))\n}; // --- Mixin ---\n// @vue/component\n\nexport var tbodyRowMixin = extend({\n  mixins: [useParentMixin],\n  props: props,\n  methods: {\n    // Methods for computing classes, attributes and styles for table cells\n    getTdValues: function getTdValues(item, key, tdValue, defaultValue) {\n      var bvParent = this.bvParent;\n      if (tdValue) {\n        var value = get(item, key, '');\n        if (isFunction(tdValue)) {\n          return tdValue(value, key, item);\n        } else if (isString(tdValue) && isFunction(bvParent[tdValue])) {\n          return bvParent[tdValue](value, key, item);\n        }\n        return tdValue;\n      }\n      return defaultValue;\n    },\n    getThValues: function getThValues(item, key, thValue, type, defaultValue) {\n      var bvParent = this.bvParent;\n      if (thValue) {\n        var value = get(item, key, '');\n        if (isFunction(thValue)) {\n          return thValue(value, key, item, type);\n        } else if (isString(thValue) && isFunction(bvParent[thValue])) {\n          return bvParent[thValue](value, key, item, type);\n        }\n        return thValue;\n      }\n      return defaultValue;\n    },\n    // Method to get the value for a field\n    getFormattedValue: function getFormattedValue(item, field) {\n      var key = field.key;\n      var formatter = this.getFieldFormatter(key);\n      var value = get(item, key, null);\n      if (isFunction(formatter)) {\n        value = formatter(value, key, item);\n      }\n      return isUndefinedOrNull(value) ? '' : value;\n    },\n    // Factory function methods\n    toggleDetailsFactory: function toggleDetailsFactory(hasDetailsSlot, item) {\n      var _this = this;\n\n      // Returns a function to toggle a row's details slot\n      return function () {\n        if (hasDetailsSlot) {\n          _this.$set(item, FIELD_KEY_SHOW_DETAILS, !item[FIELD_KEY_SHOW_DETAILS]);\n        }\n      };\n    },\n    // Row event handlers\n    rowHovered: function rowHovered(event) {\n      // `mouseenter` handler (non-bubbling)\n      // `this.tbodyRowEventStopped` from tbody mixin\n      if (!this.tbodyRowEventStopped(event)) {\n        // `this.emitTbodyRowEvent` from tbody mixin\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_HOVERED, event);\n      }\n    },\n    rowUnhovered: function rowUnhovered(event) {\n      // `mouseleave` handler (non-bubbling)\n      // `this.tbodyRowEventStopped` from tbody mixin\n      if (!this.tbodyRowEventStopped(event)) {\n        // `this.emitTbodyRowEvent` from tbody mixin\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_UNHOVERED, event);\n      }\n    },\n    // Renders a TD or TH for a row's field\n    renderTbodyRowCell: function renderTbodyRowCell(field, colIndex, item, rowIndex) {\n      var _this2 = this;\n      var isStacked = this.isStacked;\n      var key = field.key,\n        label = field.label,\n        isRowHeader = field.isRowHeader;\n      var h = this.$createElement;\n      var hasDetailsSlot = this.hasNormalizedSlot(SLOT_NAME_ROW_DETAILS);\n      var formatted = this.getFormattedValue(item, field);\n      var stickyColumn = !isStacked && (this.isResponsive || this.stickyHeader) && field.stickyColumn; // We only uses the helper components for sticky columns to\n      // improve performance of BTable/BTableLite by reducing the\n      // total number of vue instances created during render\n\n      var cellTag = stickyColumn ? isRowHeader ? BTh : BTd : isRowHeader ? 'th' : 'td';\n      var cellVariant = item[FIELD_KEY_CELL_VARIANT] && item[FIELD_KEY_CELL_VARIANT][key] ? item[FIELD_KEY_CELL_VARIANT][key] : field.variant || null;\n      var data = {\n        // For the Vue key, we concatenate the column index and\n        // field key (as field keys could be duplicated)\n        // TODO: Although we do prevent duplicate field keys...\n        //   So we could change this to: `row-${rowIndex}-cell-${key}`\n        class: [field.class ? field.class : '', this.getTdValues(item, key, field.tdClass, '')],\n        props: {},\n        attrs: _objectSpread({\n          'aria-colindex': String(colIndex + 1)\n        }, isRowHeader ? this.getThValues(item, key, field.thAttr, 'row', {}) : this.getTdValues(item, key, field.tdAttr, {})),\n        key: \"row-\".concat(rowIndex, \"-cell-\").concat(colIndex, \"-\").concat(key)\n      };\n      if (stickyColumn) {\n        // We are using the helper BTd or BTh\n        data.props = {\n          stackedHeading: isStacked ? label : null,\n          stickyColumn: true,\n          variant: cellVariant\n        };\n      } else {\n        // Using native TD or TH element, so we need to\n        // add in the attributes and variant class\n        data.attrs['data-label'] = isStacked && !isUndefinedOrNull(label) ? toString(label) : null;\n        data.attrs.role = isRowHeader ? 'rowheader' : 'cell';\n        data.attrs.scope = isRowHeader ? 'row' : null; // Add in the variant class\n\n        if (cellVariant) {\n          data.class.push(\"\".concat(this.dark ? 'bg' : 'table', \"-\").concat(cellVariant));\n        }\n      }\n      var slotScope = {\n        item: item,\n        index: rowIndex,\n        field: field,\n        unformatted: get(item, key, ''),\n        value: formatted,\n        toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item),\n        detailsShowing: Boolean(item[FIELD_KEY_SHOW_DETAILS])\n      }; // If table supports selectable mode, then add in the following scope\n      // this.supportsSelectableRows will be undefined if mixin isn't loaded\n\n      if (safeVueInstance(this).supportsSelectableRows) {\n        slotScope.rowSelected = this.isRowSelected(rowIndex);\n        slotScope.selectRow = function () {\n          return _this2.selectRow(rowIndex);\n        };\n        slotScope.unselectRow = function () {\n          return _this2.unselectRow(rowIndex);\n        };\n      } // The new `v-slot` syntax doesn't like a slot name starting with\n      // a square bracket and if using in-document HTML templates, the\n      // v-slot attributes are lower-cased by the browser.\n      // Switched to round bracket syntax to prevent confusion with\n      // dynamic slot name syntax.\n      // We look for slots in this order: `cell(${key})`, `cell(${key.toLowerCase()})`, 'cell()'\n      // Slot names are now cached by mixin tbody in `this.$_bodyFieldSlotNameCache`\n      // Will be `null` if no slot (or fallback slot) exists\n\n      var slotName = this.$_bodyFieldSlotNameCache[key];\n      var $childNodes = slotName ? this.normalizeSlot(slotName, slotScope) : toString(formatted);\n      if (this.isStacked) {\n        // We wrap in a DIV to ensure rendered as a single cell when visually stacked!\n        $childNodes = [h('div', [$childNodes])];\n      } // Render either a td or th cell\n\n      return h(cellTag, data, [$childNodes]);\n    },\n    // Renders an item's row (or rows if details supported)\n    renderTbodyRow: function renderTbodyRow(item, rowIndex) {\n      var _this3 = this;\n      var _safeVueInstance = safeVueInstance(this),\n        fields = _safeVueInstance.computedFields,\n        striped = _safeVueInstance.striped,\n        primaryKey = _safeVueInstance.primaryKey,\n        currentPage = _safeVueInstance.currentPage,\n        perPage = _safeVueInstance.perPage,\n        tbodyTrClass = _safeVueInstance.tbodyTrClass,\n        tbodyTrAttr = _safeVueInstance.tbodyTrAttr,\n        hasSelectableRowClick = _safeVueInstance.hasSelectableRowClick;\n      var h = this.$createElement;\n      var hasDetailsSlot = this.hasNormalizedSlot(SLOT_NAME_ROW_DETAILS);\n      var rowShowDetails = item[FIELD_KEY_SHOW_DETAILS] && hasDetailsSlot;\n      var hasRowClickHandler = this.$listeners[EVENT_NAME_ROW_CLICKED] || hasSelectableRowClick; // We can return more than one TR if rowDetails enabled\n\n      var $rows = []; // Details ID needed for `aria-details` when details showing\n      // We set it to `null` when not showing so that attribute\n      // does not appear on the element\n\n      var detailsId = rowShowDetails ? this.safeId(\"_details_\".concat(rowIndex, \"_\")) : null; // For each item data field in row\n\n      var $tds = fields.map(function (field, colIndex) {\n        return _this3.renderTbodyRowCell(field, colIndex, item, rowIndex);\n      }); // Calculate the row number in the dataset (indexed from 1)\n\n      var ariaRowIndex = null;\n      if (currentPage && perPage && perPage > 0) {\n        ariaRowIndex = String((currentPage - 1) * perPage + rowIndex + 1);\n      } // Create a unique :key to help ensure that sub components are re-rendered rather than\n      // re-used, which can cause issues. If a primary key is not provided we use the rendered\n      // rows index within the tbody.\n      // See: https://github.com/bootstrap-vue/bootstrap-vue/issues/2410\n\n      var primaryKeyValue = toString(get(item, primaryKey)) || null;\n      var rowKey = primaryKeyValue || toString(rowIndex); // If primary key is provided, use it to generate a unique ID on each tbody > tr\n      // In the format of '{tableId}__row_{primaryKeyValue}'\n\n      var rowId = primaryKeyValue ? this.safeId(\"_row_\".concat(primaryKeyValue)) : null; // Selectable classes and attributes\n\n      var selectableClasses = safeVueInstance(this).selectableRowClasses ? this.selectableRowClasses(rowIndex) : {};\n      var selectableAttrs = safeVueInstance(this).selectableRowAttrs ? this.selectableRowAttrs(rowIndex) : {}; // Additional classes and attributes\n\n      var userTrClasses = isFunction(tbodyTrClass) ? tbodyTrClass(item, 'row') : tbodyTrClass;\n      var userTrAttrs = isFunction(tbodyTrAttr) ? /* istanbul ignore next */\n      tbodyTrAttr(item, 'row') : tbodyTrAttr; // Add the item row\n\n      $rows.push(h(BTr, _defineProperty({\n        class: [userTrClasses, selectableClasses, rowShowDetails ? 'b-table-has-details' : ''],\n        props: {\n          variant: item[FIELD_KEY_ROW_VARIANT] || null\n        },\n        attrs: _objectSpread(_objectSpread({\n          id: rowId\n        }, userTrAttrs), {}, {\n          // Users cannot override the following attributes\n          tabindex: hasRowClickHandler ? '0' : null,\n          'data-pk': primaryKeyValue || null,\n          'aria-details': detailsId,\n          'aria-owns': detailsId,\n          'aria-rowindex': ariaRowIndex\n        }, selectableAttrs),\n        on: {\n          // Note: These events are not A11Y friendly!\n          mouseenter: this.rowHovered,\n          mouseleave: this.rowUnhovered\n        },\n        key: \"__b-table-row-\".concat(rowKey, \"__\"),\n        ref: 'item-rows'\n      }, REF_FOR_KEY, true), $tds)); // Row Details slot\n\n      if (rowShowDetails) {\n        var detailsScope = {\n          item: item,\n          index: rowIndex,\n          fields: fields,\n          toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item)\n        }; // If table supports selectable mode, then add in the following scope\n        // this.supportsSelectableRows will be undefined if mixin isn't loaded\n\n        if (safeVueInstance(this).supportsSelectableRows) {\n          detailsScope.rowSelected = this.isRowSelected(rowIndex);\n          detailsScope.selectRow = function () {\n            return _this3.selectRow(rowIndex);\n          };\n          detailsScope.unselectRow = function () {\n            return _this3.unselectRow(rowIndex);\n          };\n        } // Render the details slot in a TD\n\n        var $details = h(BTd, {\n          props: {\n            colspan: fields.length\n          },\n          class: this.detailsTdClass\n        }, [this.normalizeSlot(SLOT_NAME_ROW_DETAILS, detailsScope)]); // Add a hidden row to keep table row striping consistent when details showing\n        // Only added if the table is striped\n\n        if (striped) {\n          $rows.push(\n          // We don't use `BTr` here as we don't need the extra functionality\n          h('tr', {\n            staticClass: 'd-none',\n            attrs: {\n              'aria-hidden': 'true',\n              role: 'presentation'\n            },\n            key: \"__b-table-details-stripe__\".concat(rowKey)\n          }));\n        } // Add the actual details row\n\n        var userDetailsTrClasses = isFunction(this.tbodyTrClass) ? /* istanbul ignore next */\n        this.tbodyTrClass(item, SLOT_NAME_ROW_DETAILS) : this.tbodyTrClass;\n        var userDetailsTrAttrs = isFunction(this.tbodyTrAttr) ? /* istanbul ignore next */\n        this.tbodyTrAttr(item, SLOT_NAME_ROW_DETAILS) : this.tbodyTrAttr;\n        $rows.push(h(BTr, {\n          staticClass: 'b-table-details',\n          class: [userDetailsTrClasses],\n          props: {\n            variant: item[FIELD_KEY_ROW_VARIANT] || null\n          },\n          attrs: _objectSpread(_objectSpread({}, userDetailsTrAttrs), {}, {\n            // Users cannot override the following attributes\n            id: detailsId,\n            tabindex: '-1'\n          }),\n          key: \"__b-table-details__\".concat(rowKey)\n        }, [$details]));\n      } else if (hasDetailsSlot) {\n        // Only add the placeholder if a the table has a row-details slot defined (but not shown)\n        $rows.push(h());\n        if (striped) {\n          // Add extra placeholder if table is striped\n          $rows.push(h());\n        }\n      } // Return the row(s)\n\n      return $rows;\n    }\n  }\n});","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","arr2","extend","REF_FOR_KEY","EVENT_NAME_ROW_CLICKED","EVENT_NAME_ROW_HOVERED","EVENT_NAME_ROW_UNHOVERED","PROP_TYPE_ARRAY_OBJECT_STRING","PROP_TYPE_FUNCTION","PROP_TYPE_OBJECT_FUNCTION","SLOT_NAME_ROW_DETAILS","useParentMixin","get","isFunction","isString","isUndefinedOrNull","makeProp","safeVueInstance","BTr","BTd","BTh","FIELD_KEY_CELL_VARIANT","FIELD_KEY_ROW_VARIANT","FIELD_KEY_SHOW_DETAILS","props","detailsTdClass","tbodyTrAttr","tbodyTrClass","concat","tbodyRowMixin","mixins","methods","getTdValues","item","tdValue","defaultValue","bvParent","getThValues","thValue","type","getFormattedValue","field","formatter","getFieldFormatter","toggleDetailsFactory","hasDetailsSlot","_this","$set","rowHovered","event","tbodyRowEventStopped","emitTbodyRowEvent","rowUnhovered","renderTbodyRowCell","colIndex","rowIndex","_this2","isStacked","label","isRowHeader","h","$createElement","hasNormalizedSlot","formatted","stickyColumn","isResponsive","stickyHeader","cellTag","cellVariant","variant","data","class","tdClass","attrs","String","thAttr","tdAttr","stackedHeading","role","scope","dark","slotScope","index","unformatted","toggleDetails","detailsShowing","Boolean","supportsSelectableRows","rowSelected","isRowSelected","selectRow","unselectRow","slotName","$_bodyFieldSlotNameCache","$childNodes","normalizeSlot","renderTbodyRow","_this3","_safeVueInstance","fields","computedFields","striped","primaryKey","currentPage","perPage","hasSelectableRowClick","rowShowDetails","hasRowClickHandler","$listeners","$rows","detailsId","safeId","$tds","map","ariaRowIndex","primaryKeyValue","rowKey","rowId","selectableClasses","selectableRowClasses","selectableAttrs","selectableRowAttrs","userTrClasses","userTrAttrs","id","tabindex","on","mouseenter","mouseleave","ref","detailsScope","$details","colspan","staticClass","userDetailsTrClasses","userDetailsTrAttrs"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tbody-row.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { extend, REF_FOR_KEY } from '../../../vue';\nimport { EVENT_NAME_ROW_CLICKED, EVENT_NAME_ROW_HOVERED, EVENT_NAME_ROW_UNHOVERED } from '../../../constants/events';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_FUNCTION, PROP_TYPE_OBJECT_FUNCTION } from '../../../constants/props';\nimport { SLOT_NAME_ROW_DETAILS } from '../../../constants/slots';\nimport { useParentMixin } from '../../../mixins/use-parent';\nimport { get } from '../../../utils/get';\nimport { isFunction, isString, isUndefinedOrNull } from '../../../utils/inspect';\nimport { makeProp } from '../../../utils/props';\nimport { safeVueInstance } from '../../../utils/safe-vue-instance';\nimport { toString } from '../../../utils/string';\nimport { BTr } from '../tr';\nimport { BTd } from '../td';\nimport { BTh } from '../th';\nimport { FIELD_KEY_CELL_VARIANT, FIELD_KEY_ROW_VARIANT, FIELD_KEY_SHOW_DETAILS } from './constants'; // --- Props ---\n\nexport var props = {\n  detailsTdClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  tbodyTrAttr: makeProp(PROP_TYPE_OBJECT_FUNCTION),\n  tbodyTrClass: makeProp([].concat(_toConsumableArray(PROP_TYPE_ARRAY_OBJECT_STRING), [PROP_TYPE_FUNCTION]))\n}; // --- Mixin ---\n// @vue/component\n\nexport var tbodyRowMixin = extend({\n  mixins: [useParentMixin],\n  props: props,\n  methods: {\n    // Methods for computing classes, attributes and styles for table cells\n    getTdValues: function getTdValues(item, key, tdValue, defaultValue) {\n      var bvParent = this.bvParent;\n\n      if (tdValue) {\n        var value = get(item, key, '');\n\n        if (isFunction(tdValue)) {\n          return tdValue(value, key, item);\n        } else if (isString(tdValue) && isFunction(bvParent[tdValue])) {\n          return bvParent[tdValue](value, key, item);\n        }\n\n        return tdValue;\n      }\n\n      return defaultValue;\n    },\n    getThValues: function getThValues(item, key, thValue, type, defaultValue) {\n      var bvParent = this.bvParent;\n\n      if (thValue) {\n        var value = get(item, key, '');\n\n        if (isFunction(thValue)) {\n          return thValue(value, key, item, type);\n        } else if (isString(thValue) && isFunction(bvParent[thValue])) {\n          return bvParent[thValue](value, key, item, type);\n        }\n\n        return thValue;\n      }\n\n      return defaultValue;\n    },\n    // Method to get the value for a field\n    getFormattedValue: function getFormattedValue(item, field) {\n      var key = field.key;\n      var formatter = this.getFieldFormatter(key);\n      var value = get(item, key, null);\n\n      if (isFunction(formatter)) {\n        value = formatter(value, key, item);\n      }\n\n      return isUndefinedOrNull(value) ? '' : value;\n    },\n    // Factory function methods\n    toggleDetailsFactory: function toggleDetailsFactory(hasDetailsSlot, item) {\n      var _this = this;\n\n      // Returns a function to toggle a row's details slot\n      return function () {\n        if (hasDetailsSlot) {\n          _this.$set(item, FIELD_KEY_SHOW_DETAILS, !item[FIELD_KEY_SHOW_DETAILS]);\n        }\n      };\n    },\n    // Row event handlers\n    rowHovered: function rowHovered(event) {\n      // `mouseenter` handler (non-bubbling)\n      // `this.tbodyRowEventStopped` from tbody mixin\n      if (!this.tbodyRowEventStopped(event)) {\n        // `this.emitTbodyRowEvent` from tbody mixin\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_HOVERED, event);\n      }\n    },\n    rowUnhovered: function rowUnhovered(event) {\n      // `mouseleave` handler (non-bubbling)\n      // `this.tbodyRowEventStopped` from tbody mixin\n      if (!this.tbodyRowEventStopped(event)) {\n        // `this.emitTbodyRowEvent` from tbody mixin\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_UNHOVERED, event);\n      }\n    },\n    // Renders a TD or TH for a row's field\n    renderTbodyRowCell: function renderTbodyRowCell(field, colIndex, item, rowIndex) {\n      var _this2 = this;\n\n      var isStacked = this.isStacked;\n      var key = field.key,\n          label = field.label,\n          isRowHeader = field.isRowHeader;\n      var h = this.$createElement;\n      var hasDetailsSlot = this.hasNormalizedSlot(SLOT_NAME_ROW_DETAILS);\n      var formatted = this.getFormattedValue(item, field);\n      var stickyColumn = !isStacked && (this.isResponsive || this.stickyHeader) && field.stickyColumn; // We only uses the helper components for sticky columns to\n      // improve performance of BTable/BTableLite by reducing the\n      // total number of vue instances created during render\n\n      var cellTag = stickyColumn ? isRowHeader ? BTh : BTd : isRowHeader ? 'th' : 'td';\n      var cellVariant = item[FIELD_KEY_CELL_VARIANT] && item[FIELD_KEY_CELL_VARIANT][key] ? item[FIELD_KEY_CELL_VARIANT][key] : field.variant || null;\n      var data = {\n        // For the Vue key, we concatenate the column index and\n        // field key (as field keys could be duplicated)\n        // TODO: Although we do prevent duplicate field keys...\n        //   So we could change this to: `row-${rowIndex}-cell-${key}`\n        class: [field.class ? field.class : '', this.getTdValues(item, key, field.tdClass, '')],\n        props: {},\n        attrs: _objectSpread({\n          'aria-colindex': String(colIndex + 1)\n        }, isRowHeader ? this.getThValues(item, key, field.thAttr, 'row', {}) : this.getTdValues(item, key, field.tdAttr, {})),\n        key: \"row-\".concat(rowIndex, \"-cell-\").concat(colIndex, \"-\").concat(key)\n      };\n\n      if (stickyColumn) {\n        // We are using the helper BTd or BTh\n        data.props = {\n          stackedHeading: isStacked ? label : null,\n          stickyColumn: true,\n          variant: cellVariant\n        };\n      } else {\n        // Using native TD or TH element, so we need to\n        // add in the attributes and variant class\n        data.attrs['data-label'] = isStacked && !isUndefinedOrNull(label) ? toString(label) : null;\n        data.attrs.role = isRowHeader ? 'rowheader' : 'cell';\n        data.attrs.scope = isRowHeader ? 'row' : null; // Add in the variant class\n\n        if (cellVariant) {\n          data.class.push(\"\".concat(this.dark ? 'bg' : 'table', \"-\").concat(cellVariant));\n        }\n      }\n\n      var slotScope = {\n        item: item,\n        index: rowIndex,\n        field: field,\n        unformatted: get(item, key, ''),\n        value: formatted,\n        toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item),\n        detailsShowing: Boolean(item[FIELD_KEY_SHOW_DETAILS])\n      }; // If table supports selectable mode, then add in the following scope\n      // this.supportsSelectableRows will be undefined if mixin isn't loaded\n\n      if (safeVueInstance(this).supportsSelectableRows) {\n        slotScope.rowSelected = this.isRowSelected(rowIndex);\n\n        slotScope.selectRow = function () {\n          return _this2.selectRow(rowIndex);\n        };\n\n        slotScope.unselectRow = function () {\n          return _this2.unselectRow(rowIndex);\n        };\n      } // The new `v-slot` syntax doesn't like a slot name starting with\n      // a square bracket and if using in-document HTML templates, the\n      // v-slot attributes are lower-cased by the browser.\n      // Switched to round bracket syntax to prevent confusion with\n      // dynamic slot name syntax.\n      // We look for slots in this order: `cell(${key})`, `cell(${key.toLowerCase()})`, 'cell()'\n      // Slot names are now cached by mixin tbody in `this.$_bodyFieldSlotNameCache`\n      // Will be `null` if no slot (or fallback slot) exists\n\n\n      var slotName = this.$_bodyFieldSlotNameCache[key];\n      var $childNodes = slotName ? this.normalizeSlot(slotName, slotScope) : toString(formatted);\n\n      if (this.isStacked) {\n        // We wrap in a DIV to ensure rendered as a single cell when visually stacked!\n        $childNodes = [h('div', [$childNodes])];\n      } // Render either a td or th cell\n\n\n      return h(cellTag, data, [$childNodes]);\n    },\n    // Renders an item's row (or rows if details supported)\n    renderTbodyRow: function renderTbodyRow(item, rowIndex) {\n      var _this3 = this;\n\n      var _safeVueInstance = safeVueInstance(this),\n          fields = _safeVueInstance.computedFields,\n          striped = _safeVueInstance.striped,\n          primaryKey = _safeVueInstance.primaryKey,\n          currentPage = _safeVueInstance.currentPage,\n          perPage = _safeVueInstance.perPage,\n          tbodyTrClass = _safeVueInstance.tbodyTrClass,\n          tbodyTrAttr = _safeVueInstance.tbodyTrAttr,\n          hasSelectableRowClick = _safeVueInstance.hasSelectableRowClick;\n\n      var h = this.$createElement;\n      var hasDetailsSlot = this.hasNormalizedSlot(SLOT_NAME_ROW_DETAILS);\n      var rowShowDetails = item[FIELD_KEY_SHOW_DETAILS] && hasDetailsSlot;\n      var hasRowClickHandler = this.$listeners[EVENT_NAME_ROW_CLICKED] || hasSelectableRowClick; // We can return more than one TR if rowDetails enabled\n\n      var $rows = []; // Details ID needed for `aria-details` when details showing\n      // We set it to `null` when not showing so that attribute\n      // does not appear on the element\n\n      var detailsId = rowShowDetails ? this.safeId(\"_details_\".concat(rowIndex, \"_\")) : null; // For each item data field in row\n\n      var $tds = fields.map(function (field, colIndex) {\n        return _this3.renderTbodyRowCell(field, colIndex, item, rowIndex);\n      }); // Calculate the row number in the dataset (indexed from 1)\n\n      var ariaRowIndex = null;\n\n      if (currentPage && perPage && perPage > 0) {\n        ariaRowIndex = String((currentPage - 1) * perPage + rowIndex + 1);\n      } // Create a unique :key to help ensure that sub components are re-rendered rather than\n      // re-used, which can cause issues. If a primary key is not provided we use the rendered\n      // rows index within the tbody.\n      // See: https://github.com/bootstrap-vue/bootstrap-vue/issues/2410\n\n\n      var primaryKeyValue = toString(get(item, primaryKey)) || null;\n      var rowKey = primaryKeyValue || toString(rowIndex); // If primary key is provided, use it to generate a unique ID on each tbody > tr\n      // In the format of '{tableId}__row_{primaryKeyValue}'\n\n      var rowId = primaryKeyValue ? this.safeId(\"_row_\".concat(primaryKeyValue)) : null; // Selectable classes and attributes\n\n      var selectableClasses = safeVueInstance(this).selectableRowClasses ? this.selectableRowClasses(rowIndex) : {};\n      var selectableAttrs = safeVueInstance(this).selectableRowAttrs ? this.selectableRowAttrs(rowIndex) : {}; // Additional classes and attributes\n\n      var userTrClasses = isFunction(tbodyTrClass) ? tbodyTrClass(item, 'row') : tbodyTrClass;\n      var userTrAttrs = isFunction(tbodyTrAttr) ?\n      /* istanbul ignore next */\n      tbodyTrAttr(item, 'row') : tbodyTrAttr; // Add the item row\n\n      $rows.push(h(BTr, _defineProperty({\n        class: [userTrClasses, selectableClasses, rowShowDetails ? 'b-table-has-details' : ''],\n        props: {\n          variant: item[FIELD_KEY_ROW_VARIANT] || null\n        },\n        attrs: _objectSpread(_objectSpread({\n          id: rowId\n        }, userTrAttrs), {}, {\n          // Users cannot override the following attributes\n          tabindex: hasRowClickHandler ? '0' : null,\n          'data-pk': primaryKeyValue || null,\n          'aria-details': detailsId,\n          'aria-owns': detailsId,\n          'aria-rowindex': ariaRowIndex\n        }, selectableAttrs),\n        on: {\n          // Note: These events are not A11Y friendly!\n          mouseenter: this.rowHovered,\n          mouseleave: this.rowUnhovered\n        },\n        key: \"__b-table-row-\".concat(rowKey, \"__\"),\n        ref: 'item-rows'\n      }, REF_FOR_KEY, true), $tds)); // Row Details slot\n\n      if (rowShowDetails) {\n        var detailsScope = {\n          item: item,\n          index: rowIndex,\n          fields: fields,\n          toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item)\n        }; // If table supports selectable mode, then add in the following scope\n        // this.supportsSelectableRows will be undefined if mixin isn't loaded\n\n        if (safeVueInstance(this).supportsSelectableRows) {\n          detailsScope.rowSelected = this.isRowSelected(rowIndex);\n\n          detailsScope.selectRow = function () {\n            return _this3.selectRow(rowIndex);\n          };\n\n          detailsScope.unselectRow = function () {\n            return _this3.unselectRow(rowIndex);\n          };\n        } // Render the details slot in a TD\n\n\n        var $details = h(BTd, {\n          props: {\n            colspan: fields.length\n          },\n          class: this.detailsTdClass\n        }, [this.normalizeSlot(SLOT_NAME_ROW_DETAILS, detailsScope)]); // Add a hidden row to keep table row striping consistent when details showing\n        // Only added if the table is striped\n\n        if (striped) {\n          $rows.push( // We don't use `BTr` here as we don't need the extra functionality\n          h('tr', {\n            staticClass: 'd-none',\n            attrs: {\n              'aria-hidden': 'true',\n              role: 'presentation'\n            },\n            key: \"__b-table-details-stripe__\".concat(rowKey)\n          }));\n        } // Add the actual details row\n\n\n        var userDetailsTrClasses = isFunction(this.tbodyTrClass) ?\n        /* istanbul ignore next */\n        this.tbodyTrClass(item, SLOT_NAME_ROW_DETAILS) : this.tbodyTrClass;\n        var userDetailsTrAttrs = isFunction(this.tbodyTrAttr) ?\n        /* istanbul ignore next */\n        this.tbodyTrAttr(item, SLOT_NAME_ROW_DETAILS) : this.tbodyTrAttr;\n        $rows.push(h(BTr, {\n          staticClass: 'b-table-details',\n          class: [userDetailsTrClasses],\n          props: {\n            variant: item[FIELD_KEY_ROW_VARIANT] || null\n          },\n          attrs: _objectSpread(_objectSpread({}, userDetailsTrAttrs), {}, {\n            // Users cannot override the following attributes\n            id: detailsId,\n            tabindex: '-1'\n          }),\n          key: \"__b-table-details__\".concat(rowKey)\n        }, [$details]));\n      } else if (hasDetailsSlot) {\n        // Only add the placeholder if a the table has a row-details slot defined (but not shown)\n        $rows.push(h());\n\n        if (striped) {\n          // Add extra placeholder if table is striped\n          $rows.push(h());\n        }\n      } // Return the row(s)\n\n\n      return $rows;\n    }\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}