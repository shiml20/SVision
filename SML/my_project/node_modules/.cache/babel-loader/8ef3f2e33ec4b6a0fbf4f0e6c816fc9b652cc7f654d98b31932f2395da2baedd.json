{"ast":null,"code":"// --- General ---\nexport var RX_ARRAY_NOTATION = /\\[(\\d+)]/g;\nexport var RX_BV_PREFIX = /^(BV?)/;\nexport var RX_DIGITS = /^\\d+$/;\nexport var RX_EXTENSION = /^\\..+/;\nexport var RX_HASH = /^#/;\nexport var RX_HASH_ID = /^#[A-Za-z]+[\\w\\-:.]*$/;\nexport var RX_HTML_TAGS = /(<([^>]+)>)/gi;\nexport var RX_HYPHENATE = /\\B([A-Z])/g;\nexport var RX_LOWER_UPPER = /([a-z])([A-Z])/g;\nexport var RX_NUMBER = /^[0-9]*\\.?[0-9]+$/;\nexport var RX_PLUS = /\\+/g;\nexport var RX_REGEXP_REPLACE = /[-/\\\\^$*+?.()|[\\]{}]/g;\nexport var RX_SPACES = /[\\s\\uFEFF\\xA0]+/g;\nexport var RX_SPACE_SPLIT = /\\s+/;\nexport var RX_STAR = /\\/\\*$/;\nexport var RX_START_SPACE_WORD = /(\\s|^)(\\w)/g;\nexport var RX_TRIM_LEFT = /^\\s+/;\nexport var RX_TRIM_RIGHT = /\\s+$/;\nexport var RX_UNDERSCORE = /_/g;\nexport var RX_UN_KEBAB = /-(\\w)/g; // --- Date ---\n// Loose YYYY-MM-DD matching, ignores any appended time inforation\n// Matches '1999-12-20', '1999-1-1', '1999-01-20T22:51:49.118Z', '1999-01-02 13:00:00'\n\nexport var RX_DATE = /^\\d+-\\d\\d?-\\d\\d?(?:\\s|T|$)/; // Used to split off the date parts of the YYYY-MM-DD string\n\nexport var RX_DATE_SPLIT = /-|\\s|T/; // Time string RegEx (optional seconds)\n\nexport var RX_TIME = /^([0-1]?[0-9]|2[0-3]):[0-5]?[0-9](:[0-5]?[0-9])?$/; // --- URL ---\n// HREFs must end with a hash followed by at least one non-hash character\n\nexport var RX_HREF = /^.*(#[^#]+)$/;\nexport var RX_ENCODED_COMMA = /%2C/g;\nexport var RX_ENCODE_REVERSE = /[!'()*]/g;\nexport var RX_QUERY_START = /^(\\?|#|&)/; // --- Aspect ---\n\nexport var RX_ASPECT = /^\\d+(\\.\\d*)?[/:]\\d+(\\.\\d*)?$/;\nexport var RX_ASPECT_SEPARATOR = /[/:]/; // --- Grid ---\n\nexport var RX_COL_CLASS = /^col-/; // --- Icon ---\n\nexport var RX_ICON_PREFIX = /^BIcon/; // --- Locale ---\n\nexport var RX_STRIP_LOCALE_MODS = /-u-.+/;","map":{"version":3,"names":["RX_ARRAY_NOTATION","RX_BV_PREFIX","RX_DIGITS","RX_EXTENSION","RX_HASH","RX_HASH_ID","RX_HTML_TAGS","RX_HYPHENATE","RX_LOWER_UPPER","RX_NUMBER","RX_PLUS","RX_REGEXP_REPLACE","RX_SPACES","RX_SPACE_SPLIT","RX_STAR","RX_START_SPACE_WORD","RX_TRIM_LEFT","RX_TRIM_RIGHT","RX_UNDERSCORE","RX_UN_KEBAB","RX_DATE","RX_DATE_SPLIT","RX_TIME","RX_HREF","RX_ENCODED_COMMA","RX_ENCODE_REVERSE","RX_QUERY_START","RX_ASPECT","RX_ASPECT_SEPARATOR","RX_COL_CLASS","RX_ICON_PREFIX","RX_STRIP_LOCALE_MODS"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/constants/regex.js"],"sourcesContent":["// --- General ---\nexport var RX_ARRAY_NOTATION = /\\[(\\d+)]/g;\nexport var RX_BV_PREFIX = /^(BV?)/;\nexport var RX_DIGITS = /^\\d+$/;\nexport var RX_EXTENSION = /^\\..+/;\nexport var RX_HASH = /^#/;\nexport var RX_HASH_ID = /^#[A-Za-z]+[\\w\\-:.]*$/;\nexport var RX_HTML_TAGS = /(<([^>]+)>)/gi;\nexport var RX_HYPHENATE = /\\B([A-Z])/g;\nexport var RX_LOWER_UPPER = /([a-z])([A-Z])/g;\nexport var RX_NUMBER = /^[0-9]*\\.?[0-9]+$/;\nexport var RX_PLUS = /\\+/g;\nexport var RX_REGEXP_REPLACE = /[-/\\\\^$*+?.()|[\\]{}]/g;\nexport var RX_SPACES = /[\\s\\uFEFF\\xA0]+/g;\nexport var RX_SPACE_SPLIT = /\\s+/;\nexport var RX_STAR = /\\/\\*$/;\nexport var RX_START_SPACE_WORD = /(\\s|^)(\\w)/g;\nexport var RX_TRIM_LEFT = /^\\s+/;\nexport var RX_TRIM_RIGHT = /\\s+$/;\nexport var RX_UNDERSCORE = /_/g;\nexport var RX_UN_KEBAB = /-(\\w)/g; // --- Date ---\n// Loose YYYY-MM-DD matching, ignores any appended time inforation\n// Matches '1999-12-20', '1999-1-1', '1999-01-20T22:51:49.118Z', '1999-01-02 13:00:00'\n\nexport var RX_DATE = /^\\d+-\\d\\d?-\\d\\d?(?:\\s|T|$)/; // Used to split off the date parts of the YYYY-MM-DD string\n\nexport var RX_DATE_SPLIT = /-|\\s|T/; // Time string RegEx (optional seconds)\n\nexport var RX_TIME = /^([0-1]?[0-9]|2[0-3]):[0-5]?[0-9](:[0-5]?[0-9])?$/; // --- URL ---\n// HREFs must end with a hash followed by at least one non-hash character\n\nexport var RX_HREF = /^.*(#[^#]+)$/;\nexport var RX_ENCODED_COMMA = /%2C/g;\nexport var RX_ENCODE_REVERSE = /[!'()*]/g;\nexport var RX_QUERY_START = /^(\\?|#|&)/; // --- Aspect ---\n\nexport var RX_ASPECT = /^\\d+(\\.\\d*)?[/:]\\d+(\\.\\d*)?$/;\nexport var RX_ASPECT_SEPARATOR = /[/:]/; // --- Grid ---\n\nexport var RX_COL_CLASS = /^col-/; // --- Icon ---\n\nexport var RX_ICON_PREFIX = /^BIcon/; // --- Locale ---\n\nexport var RX_STRIP_LOCALE_MODS = /-u-.+/;"],"mappings":"AAAA;AACA,OAAO,IAAIA,iBAAiB,GAAG,WAAW;AAC1C,OAAO,IAAIC,YAAY,GAAG,QAAQ;AAClC,OAAO,IAAIC,SAAS,GAAG,OAAO;AAC9B,OAAO,IAAIC,YAAY,GAAG,OAAO;AACjC,OAAO,IAAIC,OAAO,GAAG,IAAI;AACzB,OAAO,IAAIC,UAAU,GAAG,uBAAuB;AAC/C,OAAO,IAAIC,YAAY,GAAG,eAAe;AACzC,OAAO,IAAIC,YAAY,GAAG,YAAY;AACtC,OAAO,IAAIC,cAAc,GAAG,iBAAiB;AAC7C,OAAO,IAAIC,SAAS,GAAG,mBAAmB;AAC1C,OAAO,IAAIC,OAAO,GAAG,KAAK;AAC1B,OAAO,IAAIC,iBAAiB,GAAG,uBAAuB;AACtD,OAAO,IAAIC,SAAS,GAAG,kBAAkB;AACzC,OAAO,IAAIC,cAAc,GAAG,KAAK;AACjC,OAAO,IAAIC,OAAO,GAAG,OAAO;AAC5B,OAAO,IAAIC,mBAAmB,GAAG,aAAa;AAC9C,OAAO,IAAIC,YAAY,GAAG,MAAM;AAChC,OAAO,IAAIC,aAAa,GAAG,MAAM;AACjC,OAAO,IAAIC,aAAa,GAAG,IAAI;AAC/B,OAAO,IAAIC,WAAW,GAAG,QAAQ,CAAC,CAAC;AACnC;AACA;;AAEA,OAAO,IAAIC,OAAO,GAAG,4BAA4B,CAAC,CAAC;;AAEnD,OAAO,IAAIC,aAAa,GAAG,QAAQ,CAAC,CAAC;;AAErC,OAAO,IAAIC,OAAO,GAAG,mDAAmD,CAAC,CAAC;AAC1E;;AAEA,OAAO,IAAIC,OAAO,GAAG,cAAc;AACnC,OAAO,IAAIC,gBAAgB,GAAG,MAAM;AACpC,OAAO,IAAIC,iBAAiB,GAAG,UAAU;AACzC,OAAO,IAAIC,cAAc,GAAG,WAAW,CAAC,CAAC;;AAEzC,OAAO,IAAIC,SAAS,GAAG,8BAA8B;AACrD,OAAO,IAAIC,mBAAmB,GAAG,MAAM,CAAC,CAAC;;AAEzC,OAAO,IAAIC,YAAY,GAAG,OAAO,CAAC,CAAC;;AAEnC,OAAO,IAAIC,cAAc,GAAG,QAAQ,CAAC,CAAC;;AAEtC,OAAO,IAAIC,oBAAoB,GAAG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}