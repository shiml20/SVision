{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { extend } from '../../../vue';\nimport { EVENT_NAME_ROW_CLICKED, EVENT_NAME_ROW_CONTEXTMENU, EVENT_NAME_ROW_DBLCLICKED, EVENT_NAME_ROW_MIDDLE_CLICKED } from '../../../constants/events';\nimport { CODE_DOWN, CODE_END, CODE_ENTER, CODE_HOME, CODE_SPACE, CODE_UP } from '../../../constants/key-codes';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING } from '../../../constants/props';\nimport { arrayIncludes, from as arrayFrom } from '../../../utils/array';\nimport { attemptFocus, closest, isActiveElement, isElement } from '../../../utils/dom';\nimport { safeVueInstance } from '../../../utils/safe-vue-instance';\nimport { stopEvent } from '../../../utils/events';\nimport { sortKeys } from '../../../utils/object';\nimport { makeProp, pluckProps } from '../../../utils/props';\nimport { BTbody, props as BTbodyProps } from '../tbody';\nimport { filterEvent } from './filter-event';\nimport { textSelectionActive } from './text-selection-active';\nimport { tbodyRowMixin, props as tbodyRowProps } from './mixin-tbody-row'; // --- Helper methods ---\n\nvar getCellSlotName = function getCellSlotName(value) {\n  return \"cell(\".concat(value || '', \")\");\n}; // --- Props ---\n\nexport var props = sortKeys(_objectSpread(_objectSpread(_objectSpread({}, BTbodyProps), tbodyRowProps), {}, {\n  tbodyClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING)\n})); // --- Mixin ---\n// @vue/component\n\nexport var tbodyMixin = extend({\n  mixins: [tbodyRowMixin],\n  props: props,\n  beforeDestroy: function beforeDestroy() {\n    this.$_bodyFieldSlotNameCache = null;\n  },\n  methods: {\n    // Returns all the item TR elements (excludes detail and spacer rows)\n    // `this.$refs['item-rows']` is an array of item TR components/elements\n    // Rows should all be `<b-tr>` components, but we map to TR elements\n    // Also note that `this.$refs['item-rows']` may not always be in document order\n    getTbodyTrs: function getTbodyTrs() {\n      var $refs = this.$refs;\n      var tbody = $refs.tbody ? $refs.tbody.$el || $refs.tbody : null;\n      var trs = ($refs['item-rows'] || []).map(function (tr) {\n        return tr.$el || tr;\n      });\n      return tbody && tbody.children && tbody.children.length > 0 && trs && trs.length > 0 ? arrayFrom(tbody.children).filter(function (tr) {\n        return arrayIncludes(trs, tr);\n      }) : /* istanbul ignore next */\n      [];\n    },\n    // Returns index of a particular TBODY item TR\n    // We set `true` on closest to include self in result\n    getTbodyTrIndex: function getTbodyTrIndex(el) {\n      /* istanbul ignore next: should not normally happen */\n      if (!isElement(el)) {\n        return -1;\n      }\n      var tr = el.tagName === 'TR' ? el : closest('tr', el, true);\n      return tr ? this.getTbodyTrs().indexOf(tr) : -1;\n    },\n    // Emits a row event, with the item object, row index and original event\n    emitTbodyRowEvent: function emitTbodyRowEvent(type, event) {\n      if (type && this.hasListener(type) && event && event.target) {\n        var rowIndex = this.getTbodyTrIndex(event.target);\n        if (rowIndex > -1) {\n          // The array of TRs correlate to the `computedItems` array\n          var item = this.computedItems[rowIndex];\n          this.$emit(type, item, rowIndex, event);\n        }\n      }\n    },\n    tbodyRowEventStopped: function tbodyRowEventStopped(event) {\n      return this.stopIfBusy && this.stopIfBusy(event);\n    },\n    // Delegated row event handlers\n    onTbodyRowKeydown: function onTbodyRowKeydown(event) {\n      // Keyboard navigation and row click emulation\n      var target = event.target,\n        keyCode = event.keyCode;\n      if (this.tbodyRowEventStopped(event) || target.tagName !== 'TR' || !isActiveElement(target) || target.tabIndex !== 0) {\n        // Early exit if not an item row TR\n        return;\n      }\n      if (arrayIncludes([CODE_ENTER, CODE_SPACE], keyCode)) {\n        // Emulated click for keyboard users, transfer to click handler\n        stopEvent(event);\n        this.onTBodyRowClicked(event);\n      } else if (arrayIncludes([CODE_UP, CODE_DOWN, CODE_HOME, CODE_END], keyCode)) {\n        // Keyboard navigation\n        var rowIndex = this.getTbodyTrIndex(target);\n        if (rowIndex > -1) {\n          stopEvent(event);\n          var trs = this.getTbodyTrs();\n          var shift = event.shiftKey;\n          if (keyCode === CODE_HOME || shift && keyCode === CODE_UP) {\n            // Focus first row\n            attemptFocus(trs[0]);\n          } else if (keyCode === CODE_END || shift && keyCode === CODE_DOWN) {\n            // Focus last row\n            attemptFocus(trs[trs.length - 1]);\n          } else if (keyCode === CODE_UP && rowIndex > 0) {\n            // Focus previous row\n            attemptFocus(trs[rowIndex - 1]);\n          } else if (keyCode === CODE_DOWN && rowIndex < trs.length - 1) {\n            // Focus next row\n            attemptFocus(trs[rowIndex + 1]);\n          }\n        }\n      }\n    },\n    onTBodyRowClicked: function onTBodyRowClicked(event) {\n      var $refs = this.$refs;\n      var tbody = $refs.tbody ? $refs.tbody.$el || $refs.tbody : null; // Don't emit event when the table is busy, the user clicked\n      // on a non-disabled control or is selecting text\n\n      if (this.tbodyRowEventStopped(event) || filterEvent(event) || textSelectionActive(tbody || this.$el)) {\n        return;\n      }\n      this.emitTbodyRowEvent(EVENT_NAME_ROW_CLICKED, event);\n    },\n    onTbodyRowMiddleMouseRowClicked: function onTbodyRowMiddleMouseRowClicked(event) {\n      if (!this.tbodyRowEventStopped(event) && event.which === 2) {\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_MIDDLE_CLICKED, event);\n      }\n    },\n    onTbodyRowContextmenu: function onTbodyRowContextmenu(event) {\n      if (!this.tbodyRowEventStopped(event)) {\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_CONTEXTMENU, event);\n      }\n    },\n    onTbodyRowDblClicked: function onTbodyRowDblClicked(event) {\n      if (!this.tbodyRowEventStopped(event) && !filterEvent(event)) {\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_DBLCLICKED, event);\n      }\n    },\n    // Render the tbody element and children\n    // Note:\n    //   Row hover handlers are handled by the tbody-row mixin\n    //   As mouseenter/mouseleave events do not bubble\n    renderTbody: function renderTbody() {\n      var _this = this;\n      var _safeVueInstance = safeVueInstance(this),\n        items = _safeVueInstance.computedItems,\n        renderBusy = _safeVueInstance.renderBusy,\n        renderTopRow = _safeVueInstance.renderTopRow,\n        renderEmpty = _safeVueInstance.renderEmpty,\n        renderBottomRow = _safeVueInstance.renderBottomRow,\n        hasSelectableRowClick = _safeVueInstance.hasSelectableRowClick;\n      var h = this.$createElement;\n      var hasRowClickHandler = this.hasListener(EVENT_NAME_ROW_CLICKED) || hasSelectableRowClick; // Prepare the tbody rows\n\n      var $rows = []; // Add the item data rows or the busy slot\n\n      var $busy = renderBusy ? renderBusy() : null;\n      if ($busy) {\n        // If table is busy and a busy slot, then return only the busy \"row\" indicator\n        $rows.push($busy);\n      } else {\n        // Table isn't busy, or we don't have a busy slot\n        // Create a slot cache for improved performance when looking up cell slot names\n        // Values will be keyed by the field's `key` and will store the slot's name\n        // Slots could be dynamic (i.e. `v-if`), so we must compute on each render\n        // Used by tbody-row mixin render helper\n        var cache = {};\n        var defaultSlotName = getCellSlotName();\n        defaultSlotName = this.hasNormalizedSlot(defaultSlotName) ? defaultSlotName : null;\n        this.computedFields.forEach(function (field) {\n          var key = field.key;\n          var slotName = getCellSlotName(key);\n          var lowercaseSlotName = getCellSlotName(key.toLowerCase());\n          cache[key] = _this.hasNormalizedSlot(slotName) ? slotName : _this.hasNormalizedSlot(lowercaseSlotName) ? /* istanbul ignore next */\n          lowercaseSlotName : defaultSlotName;\n        }); // Created as a non-reactive property so to not trigger component updates\n        // Must be a fresh object each render\n\n        this.$_bodyFieldSlotNameCache = cache; // Add static top row slot (hidden in visibly stacked mode\n        // as we can't control `data-label` attr)\n\n        $rows.push(renderTopRow ? renderTopRow() : h()); // Render the rows\n\n        items.forEach(function (item, rowIndex) {\n          // Render the individual item row (rows if details slot)\n          $rows.push(_this.renderTbodyRow(item, rowIndex));\n        }); // Empty items / empty filtered row slot (only shows if `items.length < 1`)\n\n        $rows.push(renderEmpty ? renderEmpty() : h()); // Static bottom row slot (hidden in visibly stacked mode\n        // as we can't control `data-label` attr)\n\n        $rows.push(renderBottomRow ? renderBottomRow() : h());\n      } // Note: these events will only emit if a listener is registered\n\n      var handlers = {\n        auxclick: this.onTbodyRowMiddleMouseRowClicked,\n        // TODO:\n        //   Perhaps we do want to automatically prevent the\n        //   default context menu from showing if there is a\n        //   `row-contextmenu` listener registered\n        contextmenu: this.onTbodyRowContextmenu,\n        // The following event(s) is not considered A11Y friendly\n        dblclick: this.onTbodyRowDblClicked // Hover events (`mouseenter`/`mouseleave`) are handled by `tbody-row` mixin\n      }; // Add in click/keydown listeners if needed\n\n      if (hasRowClickHandler) {\n        handlers.click = this.onTBodyRowClicked;\n        handlers.keydown = this.onTbodyRowKeydown;\n      } // Assemble rows into the tbody\n\n      var $tbody = h(BTbody, {\n        class: this.tbodyClass || null,\n        props: pluckProps(BTbodyProps, this.$props),\n        // BTbody transfers all native event listeners to the root element\n        // TODO: Only set the handlers if the table is not busy\n        on: handlers,\n        ref: 'tbody'\n      }, $rows); // Return the assembled tbody\n\n      return $tbody;\n    }\n  }\n});","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","extend","EVENT_NAME_ROW_CLICKED","EVENT_NAME_ROW_CONTEXTMENU","EVENT_NAME_ROW_DBLCLICKED","EVENT_NAME_ROW_MIDDLE_CLICKED","CODE_DOWN","CODE_END","CODE_ENTER","CODE_HOME","CODE_SPACE","CODE_UP","PROP_TYPE_ARRAY_OBJECT_STRING","arrayIncludes","from","arrayFrom","attemptFocus","closest","isActiveElement","isElement","safeVueInstance","stopEvent","sortKeys","makeProp","pluckProps","BTbody","props","BTbodyProps","filterEvent","textSelectionActive","tbodyRowMixin","tbodyRowProps","getCellSlotName","concat","tbodyClass","tbodyMixin","mixins","beforeDestroy","$_bodyFieldSlotNameCache","methods","getTbodyTrs","$refs","tbody","$el","trs","map","tr","children","getTbodyTrIndex","el","tagName","indexOf","emitTbodyRowEvent","type","event","hasListener","rowIndex","item","computedItems","$emit","tbodyRowEventStopped","stopIfBusy","onTbodyRowKeydown","keyCode","tabIndex","onTBodyRowClicked","shift","shiftKey","onTbodyRowMiddleMouseRowClicked","which","onTbodyRowContextmenu","onTbodyRowDblClicked","renderTbody","_this","_safeVueInstance","items","renderBusy","renderTopRow","renderEmpty","renderBottomRow","hasSelectableRowClick","h","$createElement","hasRowClickHandler","$rows","$busy","cache","defaultSlotName","hasNormalizedSlot","computedFields","field","slotName","lowercaseSlotName","toLowerCase","renderTbodyRow","handlers","auxclick","contextmenu","dblclick","click","keydown","$tbody","class","$props","on","ref"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tbody.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { extend } from '../../../vue';\nimport { EVENT_NAME_ROW_CLICKED, EVENT_NAME_ROW_CONTEXTMENU, EVENT_NAME_ROW_DBLCLICKED, EVENT_NAME_ROW_MIDDLE_CLICKED } from '../../../constants/events';\nimport { CODE_DOWN, CODE_END, CODE_ENTER, CODE_HOME, CODE_SPACE, CODE_UP } from '../../../constants/key-codes';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING } from '../../../constants/props';\nimport { arrayIncludes, from as arrayFrom } from '../../../utils/array';\nimport { attemptFocus, closest, isActiveElement, isElement } from '../../../utils/dom';\nimport { safeVueInstance } from '../../../utils/safe-vue-instance';\nimport { stopEvent } from '../../../utils/events';\nimport { sortKeys } from '../../../utils/object';\nimport { makeProp, pluckProps } from '../../../utils/props';\nimport { BTbody, props as BTbodyProps } from '../tbody';\nimport { filterEvent } from './filter-event';\nimport { textSelectionActive } from './text-selection-active';\nimport { tbodyRowMixin, props as tbodyRowProps } from './mixin-tbody-row'; // --- Helper methods ---\n\nvar getCellSlotName = function getCellSlotName(value) {\n  return \"cell(\".concat(value || '', \")\");\n}; // --- Props ---\n\n\nexport var props = sortKeys(_objectSpread(_objectSpread(_objectSpread({}, BTbodyProps), tbodyRowProps), {}, {\n  tbodyClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING)\n})); // --- Mixin ---\n// @vue/component\n\nexport var tbodyMixin = extend({\n  mixins: [tbodyRowMixin],\n  props: props,\n  beforeDestroy: function beforeDestroy() {\n    this.$_bodyFieldSlotNameCache = null;\n  },\n  methods: {\n    // Returns all the item TR elements (excludes detail and spacer rows)\n    // `this.$refs['item-rows']` is an array of item TR components/elements\n    // Rows should all be `<b-tr>` components, but we map to TR elements\n    // Also note that `this.$refs['item-rows']` may not always be in document order\n    getTbodyTrs: function getTbodyTrs() {\n      var $refs = this.$refs;\n      var tbody = $refs.tbody ? $refs.tbody.$el || $refs.tbody : null;\n      var trs = ($refs['item-rows'] || []).map(function (tr) {\n        return tr.$el || tr;\n      });\n      return tbody && tbody.children && tbody.children.length > 0 && trs && trs.length > 0 ? arrayFrom(tbody.children).filter(function (tr) {\n        return arrayIncludes(trs, tr);\n      }) :\n      /* istanbul ignore next */\n      [];\n    },\n    // Returns index of a particular TBODY item TR\n    // We set `true` on closest to include self in result\n    getTbodyTrIndex: function getTbodyTrIndex(el) {\n      /* istanbul ignore next: should not normally happen */\n      if (!isElement(el)) {\n        return -1;\n      }\n\n      var tr = el.tagName === 'TR' ? el : closest('tr', el, true);\n      return tr ? this.getTbodyTrs().indexOf(tr) : -1;\n    },\n    // Emits a row event, with the item object, row index and original event\n    emitTbodyRowEvent: function emitTbodyRowEvent(type, event) {\n      if (type && this.hasListener(type) && event && event.target) {\n        var rowIndex = this.getTbodyTrIndex(event.target);\n\n        if (rowIndex > -1) {\n          // The array of TRs correlate to the `computedItems` array\n          var item = this.computedItems[rowIndex];\n          this.$emit(type, item, rowIndex, event);\n        }\n      }\n    },\n    tbodyRowEventStopped: function tbodyRowEventStopped(event) {\n      return this.stopIfBusy && this.stopIfBusy(event);\n    },\n    // Delegated row event handlers\n    onTbodyRowKeydown: function onTbodyRowKeydown(event) {\n      // Keyboard navigation and row click emulation\n      var target = event.target,\n          keyCode = event.keyCode;\n\n      if (this.tbodyRowEventStopped(event) || target.tagName !== 'TR' || !isActiveElement(target) || target.tabIndex !== 0) {\n        // Early exit if not an item row TR\n        return;\n      }\n\n      if (arrayIncludes([CODE_ENTER, CODE_SPACE], keyCode)) {\n        // Emulated click for keyboard users, transfer to click handler\n        stopEvent(event);\n        this.onTBodyRowClicked(event);\n      } else if (arrayIncludes([CODE_UP, CODE_DOWN, CODE_HOME, CODE_END], keyCode)) {\n        // Keyboard navigation\n        var rowIndex = this.getTbodyTrIndex(target);\n\n        if (rowIndex > -1) {\n          stopEvent(event);\n          var trs = this.getTbodyTrs();\n          var shift = event.shiftKey;\n\n          if (keyCode === CODE_HOME || shift && keyCode === CODE_UP) {\n            // Focus first row\n            attemptFocus(trs[0]);\n          } else if (keyCode === CODE_END || shift && keyCode === CODE_DOWN) {\n            // Focus last row\n            attemptFocus(trs[trs.length - 1]);\n          } else if (keyCode === CODE_UP && rowIndex > 0) {\n            // Focus previous row\n            attemptFocus(trs[rowIndex - 1]);\n          } else if (keyCode === CODE_DOWN && rowIndex < trs.length - 1) {\n            // Focus next row\n            attemptFocus(trs[rowIndex + 1]);\n          }\n        }\n      }\n    },\n    onTBodyRowClicked: function onTBodyRowClicked(event) {\n      var $refs = this.$refs;\n      var tbody = $refs.tbody ? $refs.tbody.$el || $refs.tbody : null; // Don't emit event when the table is busy, the user clicked\n      // on a non-disabled control or is selecting text\n\n      if (this.tbodyRowEventStopped(event) || filterEvent(event) || textSelectionActive(tbody || this.$el)) {\n        return;\n      }\n\n      this.emitTbodyRowEvent(EVENT_NAME_ROW_CLICKED, event);\n    },\n    onTbodyRowMiddleMouseRowClicked: function onTbodyRowMiddleMouseRowClicked(event) {\n      if (!this.tbodyRowEventStopped(event) && event.which === 2) {\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_MIDDLE_CLICKED, event);\n      }\n    },\n    onTbodyRowContextmenu: function onTbodyRowContextmenu(event) {\n      if (!this.tbodyRowEventStopped(event)) {\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_CONTEXTMENU, event);\n      }\n    },\n    onTbodyRowDblClicked: function onTbodyRowDblClicked(event) {\n      if (!this.tbodyRowEventStopped(event) && !filterEvent(event)) {\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_DBLCLICKED, event);\n      }\n    },\n    // Render the tbody element and children\n    // Note:\n    //   Row hover handlers are handled by the tbody-row mixin\n    //   As mouseenter/mouseleave events do not bubble\n    renderTbody: function renderTbody() {\n      var _this = this;\n\n      var _safeVueInstance = safeVueInstance(this),\n          items = _safeVueInstance.computedItems,\n          renderBusy = _safeVueInstance.renderBusy,\n          renderTopRow = _safeVueInstance.renderTopRow,\n          renderEmpty = _safeVueInstance.renderEmpty,\n          renderBottomRow = _safeVueInstance.renderBottomRow,\n          hasSelectableRowClick = _safeVueInstance.hasSelectableRowClick;\n\n      var h = this.$createElement;\n      var hasRowClickHandler = this.hasListener(EVENT_NAME_ROW_CLICKED) || hasSelectableRowClick; // Prepare the tbody rows\n\n      var $rows = []; // Add the item data rows or the busy slot\n\n      var $busy = renderBusy ? renderBusy() : null;\n\n      if ($busy) {\n        // If table is busy and a busy slot, then return only the busy \"row\" indicator\n        $rows.push($busy);\n      } else {\n        // Table isn't busy, or we don't have a busy slot\n        // Create a slot cache for improved performance when looking up cell slot names\n        // Values will be keyed by the field's `key` and will store the slot's name\n        // Slots could be dynamic (i.e. `v-if`), so we must compute on each render\n        // Used by tbody-row mixin render helper\n        var cache = {};\n        var defaultSlotName = getCellSlotName();\n        defaultSlotName = this.hasNormalizedSlot(defaultSlotName) ? defaultSlotName : null;\n        this.computedFields.forEach(function (field) {\n          var key = field.key;\n          var slotName = getCellSlotName(key);\n          var lowercaseSlotName = getCellSlotName(key.toLowerCase());\n          cache[key] = _this.hasNormalizedSlot(slotName) ? slotName : _this.hasNormalizedSlot(lowercaseSlotName) ?\n          /* istanbul ignore next */\n          lowercaseSlotName : defaultSlotName;\n        }); // Created as a non-reactive property so to not trigger component updates\n        // Must be a fresh object each render\n\n        this.$_bodyFieldSlotNameCache = cache; // Add static top row slot (hidden in visibly stacked mode\n        // as we can't control `data-label` attr)\n\n        $rows.push(renderTopRow ? renderTopRow() : h()); // Render the rows\n\n        items.forEach(function (item, rowIndex) {\n          // Render the individual item row (rows if details slot)\n          $rows.push(_this.renderTbodyRow(item, rowIndex));\n        }); // Empty items / empty filtered row slot (only shows if `items.length < 1`)\n\n        $rows.push(renderEmpty ? renderEmpty() : h()); // Static bottom row slot (hidden in visibly stacked mode\n        // as we can't control `data-label` attr)\n\n        $rows.push(renderBottomRow ? renderBottomRow() : h());\n      } // Note: these events will only emit if a listener is registered\n\n\n      var handlers = {\n        auxclick: this.onTbodyRowMiddleMouseRowClicked,\n        // TODO:\n        //   Perhaps we do want to automatically prevent the\n        //   default context menu from showing if there is a\n        //   `row-contextmenu` listener registered\n        contextmenu: this.onTbodyRowContextmenu,\n        // The following event(s) is not considered A11Y friendly\n        dblclick: this.onTbodyRowDblClicked // Hover events (`mouseenter`/`mouseleave`) are handled by `tbody-row` mixin\n\n      }; // Add in click/keydown listeners if needed\n\n      if (hasRowClickHandler) {\n        handlers.click = this.onTBodyRowClicked;\n        handlers.keydown = this.onTbodyRowKeydown;\n      } // Assemble rows into the tbody\n\n\n      var $tbody = h(BTbody, {\n        class: this.tbodyClass || null,\n        props: pluckProps(BTbodyProps, this.$props),\n        // BTbody transfers all native event listeners to the root element\n        // TODO: Only set the handlers if the table is not busy\n        on: handlers,\n        ref: 'tbody'\n      }, $rows); // Return the assembled tbody\n\n      return $tbody;\n    }\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}