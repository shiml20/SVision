{"ast":null,"code":"import { NAME_AVATAR_GROUP } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { mathMax, mathMin } from '../../utils/math';\nimport { toFloat } from '../../utils/number';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { extend } from '../../vue';\nimport { computeSize } from './avatar'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  overlap: makeProp(PROP_TYPE_NUMBER_STRING, 0.3),\n  // Child avatars will prefer this prop (if set) over their own\n  rounded: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  // Child avatars will always use this over their own size\n  size: makeProp(PROP_TYPE_STRING),\n  // Child avatars will prefer this prop (if set) over their own\n  square: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'div'),\n  // Child avatars will prefer this variant over their own\n  variant: makeProp(PROP_TYPE_STRING)\n}, NAME_AVATAR_GROUP); // --- Main component ---\n// @vue/component\n\nexport var BAvatarGroup = /*#__PURE__*/extend({\n  name: NAME_AVATAR_GROUP,\n  mixins: [normalizeSlotMixin],\n  provide: function provide() {\n    var _this = this;\n    return {\n      getBvAvatarGroup: function getBvAvatarGroup() {\n        return _this;\n      }\n    };\n  },\n  props: props,\n  computed: {\n    computedSize: function computedSize() {\n      return computeSize(this.size);\n    },\n    overlapScale: function overlapScale() {\n      return mathMin(mathMax(toFloat(this.overlap, 0), 0), 1) / 2;\n    },\n    paddingStyle: function paddingStyle() {\n      var value = this.computedSize;\n      value = value ? \"calc(\".concat(value, \" * \").concat(this.overlapScale, \")\") : null;\n      return value ? {\n        paddingLeft: value,\n        paddingRight: value\n      } : {};\n    }\n  },\n  render: function render(h) {\n    var $inner = h('div', {\n      staticClass: 'b-avatar-group-inner',\n      style: this.paddingStyle\n    }, this.normalizeSlot());\n    return h(this.tag, {\n      staticClass: 'b-avatar-group',\n      attrs: {\n        role: 'group'\n      }\n    }, [$inner]);\n  }\n});","map":{"version":3,"names":["NAME_AVATAR_GROUP","PROP_TYPE_BOOLEAN","PROP_TYPE_BOOLEAN_STRING","PROP_TYPE_NUMBER_STRING","PROP_TYPE_STRING","normalizeSlotMixin","mathMax","mathMin","toFloat","makeProp","makePropsConfigurable","extend","computeSize","props","overlap","rounded","size","square","tag","variant","BAvatarGroup","name","mixins","provide","_this","getBvAvatarGroup","computed","computedSize","overlapScale","paddingStyle","value","concat","paddingLeft","paddingRight","render","h","$inner","staticClass","style","normalizeSlot","attrs","role"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js"],"sourcesContent":["import { NAME_AVATAR_GROUP } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { mathMax, mathMin } from '../../utils/math';\nimport { toFloat } from '../../utils/number';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { extend } from '../../vue';\nimport { computeSize } from './avatar'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  overlap: makeProp(PROP_TYPE_NUMBER_STRING, 0.3),\n  // Child avatars will prefer this prop (if set) over their own\n  rounded: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  // Child avatars will always use this over their own size\n  size: makeProp(PROP_TYPE_STRING),\n  // Child avatars will prefer this prop (if set) over their own\n  square: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'div'),\n  // Child avatars will prefer this variant over their own\n  variant: makeProp(PROP_TYPE_STRING)\n}, NAME_AVATAR_GROUP); // --- Main component ---\n// @vue/component\n\nexport var BAvatarGroup = /*#__PURE__*/extend({\n  name: NAME_AVATAR_GROUP,\n  mixins: [normalizeSlotMixin],\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      getBvAvatarGroup: function getBvAvatarGroup() {\n        return _this;\n      }\n    };\n  },\n  props: props,\n  computed: {\n    computedSize: function computedSize() {\n      return computeSize(this.size);\n    },\n    overlapScale: function overlapScale() {\n      return mathMin(mathMax(toFloat(this.overlap, 0), 0), 1) / 2;\n    },\n    paddingStyle: function paddingStyle() {\n      var value = this.computedSize;\n      value = value ? \"calc(\".concat(value, \" * \").concat(this.overlapScale, \")\") : null;\n      return value ? {\n        paddingLeft: value,\n        paddingRight: value\n      } : {};\n    }\n  },\n  render: function render(h) {\n    var $inner = h('div', {\n      staticClass: 'b-avatar-group-inner',\n      style: this.paddingStyle\n    }, this.normalizeSlot());\n    return h(this.tag, {\n      staticClass: 'b-avatar-group',\n      attrs: {\n        role: 'group'\n      }\n    }, [$inner]);\n  }\n});"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,iBAAiB,EAAEC,wBAAwB,EAAEC,uBAAuB,EAAEC,gBAAgB,QAAQ,uBAAuB;AAC9H,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,OAAO,EAAEC,OAAO,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,QAAQ,EAAEC,qBAAqB,QAAQ,mBAAmB;AACnE,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,WAAW,QAAQ,UAAU,CAAC,CAAC;;AAExC,OAAO,IAAIC,KAAK,GAAGH,qBAAqB,CAAC;EACvCI,OAAO,EAAEL,QAAQ,CAACN,uBAAuB,EAAE,GAAG,CAAC;EAC/C;EACAY,OAAO,EAAEN,QAAQ,CAACP,wBAAwB,EAAE,KAAK,CAAC;EAClD;EACAc,IAAI,EAAEP,QAAQ,CAACL,gBAAgB,CAAC;EAChC;EACAa,MAAM,EAAER,QAAQ,CAACR,iBAAiB,EAAE,KAAK,CAAC;EAC1CiB,GAAG,EAAET,QAAQ,CAACL,gBAAgB,EAAE,KAAK,CAAC;EACtC;EACAe,OAAO,EAAEV,QAAQ,CAACL,gBAAgB;AACpC,CAAC,EAAEJ,iBAAiB,CAAC,CAAC,CAAC;AACvB;;AAEA,OAAO,IAAIoB,YAAY,GAAG,aAAaT,MAAM,CAAC;EAC5CU,IAAI,EAAErB,iBAAiB;EACvBsB,MAAM,EAAE,CAACjB,kBAAkB,CAAC;EAC5BkB,OAAO,EAAE,SAASA,OAAO,GAAG;IAC1B,IAAIC,KAAK,GAAG,IAAI;IAEhB,OAAO;MACLC,gBAAgB,EAAE,SAASA,gBAAgB,GAAG;QAC5C,OAAOD,KAAK;MACd;IACF,CAAC;EACH,CAAC;EACDX,KAAK,EAAEA,KAAK;EACZa,QAAQ,EAAE;IACRC,YAAY,EAAE,SAASA,YAAY,GAAG;MACpC,OAAOf,WAAW,CAAC,IAAI,CAACI,IAAI,CAAC;IAC/B,CAAC;IACDY,YAAY,EAAE,SAASA,YAAY,GAAG;MACpC,OAAOrB,OAAO,CAACD,OAAO,CAACE,OAAO,CAAC,IAAI,CAACM,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;IAC7D,CAAC;IACDe,YAAY,EAAE,SAASA,YAAY,GAAG;MACpC,IAAIC,KAAK,GAAG,IAAI,CAACH,YAAY;MAC7BG,KAAK,GAAGA,KAAK,GAAG,OAAO,CAACC,MAAM,CAACD,KAAK,EAAE,KAAK,CAAC,CAACC,MAAM,CAAC,IAAI,CAACH,YAAY,EAAE,GAAG,CAAC,GAAG,IAAI;MAClF,OAAOE,KAAK,GAAG;QACbE,WAAW,EAAEF,KAAK;QAClBG,YAAY,EAAEH;MAChB,CAAC,GAAG,CAAC,CAAC;IACR;EACF,CAAC;EACDI,MAAM,EAAE,SAASA,MAAM,CAACC,CAAC,EAAE;IACzB,IAAIC,MAAM,GAAGD,CAAC,CAAC,KAAK,EAAE;MACpBE,WAAW,EAAE,sBAAsB;MACnCC,KAAK,EAAE,IAAI,CAACT;IACd,CAAC,EAAE,IAAI,CAACU,aAAa,EAAE,CAAC;IACxB,OAAOJ,CAAC,CAAC,IAAI,CAACjB,GAAG,EAAE;MACjBmB,WAAW,EAAE,gBAAgB;MAC7BG,KAAK,EAAE;QACLC,IAAI,EAAE;MACR;IACF,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}