{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { extend, mergeData } from '../../vue';\nimport { NAME_IMG } from '../../constants/components';\nimport { PROP_TYPE_ARRAY_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { concat } from '../../utils/array';\nimport { identity } from '../../utils/identity';\nimport { isString } from '../../utils/inspect';\nimport { toInteger } from '../../utils/number';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { toString } from '../../utils/string'; // --- Constants --\n// Blank image with fill template\n\nvar BLANK_TEMPLATE = '<svg width=\"%{w}\" height=\"%{h}\" ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'viewBox=\"0 0 %{w} %{h}\" preserveAspectRatio=\"none\">' + '<rect width=\"100%\" height=\"100%\" style=\"fill:%{f};\"></rect>' + '</svg>'; // --- Helper methods ---\n\nvar makeBlankImgSrc = function makeBlankImgSrc(width, height, color) {\n  var src = encodeURIComponent(BLANK_TEMPLATE.replace('%{w}', toString(width)).replace('%{h}', toString(height)).replace('%{f}', color));\n  return \"data:image/svg+xml;charset=UTF-8,\".concat(src);\n}; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  alt: makeProp(PROP_TYPE_STRING),\n  blank: makeProp(PROP_TYPE_BOOLEAN, false),\n  blankColor: makeProp(PROP_TYPE_STRING, 'transparent'),\n  block: makeProp(PROP_TYPE_BOOLEAN, false),\n  center: makeProp(PROP_TYPE_BOOLEAN, false),\n  fluid: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Gives fluid images class `w-100` to make them grow to fit container\n  fluidGrow: makeProp(PROP_TYPE_BOOLEAN, false),\n  height: makeProp(PROP_TYPE_NUMBER_STRING),\n  left: makeProp(PROP_TYPE_BOOLEAN, false),\n  right: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Possible values:\n  //   `false`: no rounding of corners\n  //   `true`: slightly rounded corners\n  //   'top': top corners rounded\n  //   'right': right corners rounded\n  //   'bottom': bottom corners rounded\n  //   'left': left corners rounded\n  //   'circle': circle/oval\n  //   '0': force rounding off\n  rounded: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  sizes: makeProp(PROP_TYPE_ARRAY_STRING),\n  src: makeProp(PROP_TYPE_STRING),\n  srcset: makeProp(PROP_TYPE_ARRAY_STRING),\n  thumbnail: makeProp(PROP_TYPE_BOOLEAN, false),\n  width: makeProp(PROP_TYPE_NUMBER_STRING)\n}, NAME_IMG); // --- Main component ---\n// @vue/component\n\nexport var BImg = /*#__PURE__*/extend({\n  name: NAME_IMG,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class;\n    var props = _ref.props,\n      data = _ref.data;\n    var alt = props.alt,\n      src = props.src,\n      block = props.block,\n      fluidGrow = props.fluidGrow,\n      rounded = props.rounded;\n    var width = toInteger(props.width) || null;\n    var height = toInteger(props.height) || null;\n    var align = null;\n    var srcset = concat(props.srcset).filter(identity).join(',');\n    var sizes = concat(props.sizes).filter(identity).join(',');\n    if (props.blank) {\n      if (!height && width) {\n        height = width;\n      } else if (!width && height) {\n        width = height;\n      }\n      if (!width && !height) {\n        width = 1;\n        height = 1;\n      } // Make a blank SVG image\n\n      src = makeBlankImgSrc(width, height, props.blankColor || 'transparent'); // Disable srcset and sizes\n\n      srcset = null;\n      sizes = null;\n    }\n    if (props.left) {\n      align = 'float-left';\n    } else if (props.right) {\n      align = 'float-right';\n    } else if (props.center) {\n      align = 'mx-auto';\n      block = true;\n    }\n    return h('img', mergeData(data, {\n      attrs: {\n        src: src,\n        alt: alt,\n        width: width ? toString(width) : null,\n        height: height ? toString(height) : null,\n        srcset: srcset || null,\n        sizes: sizes || null\n      },\n      class: (_class = {\n        'img-thumbnail': props.thumbnail,\n        'img-fluid': props.fluid || fluidGrow,\n        'w-100': fluidGrow,\n        rounded: rounded === '' || rounded === true\n      }, _defineProperty(_class, \"rounded-\".concat(rounded), isString(rounded) && rounded !== ''), _defineProperty(_class, align, align), _defineProperty(_class, 'd-block', block), _class)\n    }));\n  }\n});","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","extend","mergeData","NAME_IMG","PROP_TYPE_ARRAY_STRING","PROP_TYPE_BOOLEAN","PROP_TYPE_BOOLEAN_STRING","PROP_TYPE_NUMBER_STRING","PROP_TYPE_STRING","concat","identity","isString","toInteger","makeProp","makePropsConfigurable","toString","BLANK_TEMPLATE","makeBlankImgSrc","width","height","color","src","encodeURIComponent","replace","props","alt","blank","blankColor","block","center","fluid","fluidGrow","left","right","rounded","sizes","srcset","thumbnail","BImg","name","functional","render","h","_ref","_class","data","align","filter","join","attrs","class"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/image/img.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { extend, mergeData } from '../../vue';\nimport { NAME_IMG } from '../../constants/components';\nimport { PROP_TYPE_ARRAY_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { concat } from '../../utils/array';\nimport { identity } from '../../utils/identity';\nimport { isString } from '../../utils/inspect';\nimport { toInteger } from '../../utils/number';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { toString } from '../../utils/string'; // --- Constants --\n// Blank image with fill template\n\nvar BLANK_TEMPLATE = '<svg width=\"%{w}\" height=\"%{h}\" ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'viewBox=\"0 0 %{w} %{h}\" preserveAspectRatio=\"none\">' + '<rect width=\"100%\" height=\"100%\" style=\"fill:%{f};\"></rect>' + '</svg>'; // --- Helper methods ---\n\nvar makeBlankImgSrc = function makeBlankImgSrc(width, height, color) {\n  var src = encodeURIComponent(BLANK_TEMPLATE.replace('%{w}', toString(width)).replace('%{h}', toString(height)).replace('%{f}', color));\n  return \"data:image/svg+xml;charset=UTF-8,\".concat(src);\n}; // --- Props ---\n\n\nexport var props = makePropsConfigurable({\n  alt: makeProp(PROP_TYPE_STRING),\n  blank: makeProp(PROP_TYPE_BOOLEAN, false),\n  blankColor: makeProp(PROP_TYPE_STRING, 'transparent'),\n  block: makeProp(PROP_TYPE_BOOLEAN, false),\n  center: makeProp(PROP_TYPE_BOOLEAN, false),\n  fluid: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Gives fluid images class `w-100` to make them grow to fit container\n  fluidGrow: makeProp(PROP_TYPE_BOOLEAN, false),\n  height: makeProp(PROP_TYPE_NUMBER_STRING),\n  left: makeProp(PROP_TYPE_BOOLEAN, false),\n  right: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Possible values:\n  //   `false`: no rounding of corners\n  //   `true`: slightly rounded corners\n  //   'top': top corners rounded\n  //   'right': right corners rounded\n  //   'bottom': bottom corners rounded\n  //   'left': left corners rounded\n  //   'circle': circle/oval\n  //   '0': force rounding off\n  rounded: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  sizes: makeProp(PROP_TYPE_ARRAY_STRING),\n  src: makeProp(PROP_TYPE_STRING),\n  srcset: makeProp(PROP_TYPE_ARRAY_STRING),\n  thumbnail: makeProp(PROP_TYPE_BOOLEAN, false),\n  width: makeProp(PROP_TYPE_NUMBER_STRING)\n}, NAME_IMG); // --- Main component ---\n// @vue/component\n\nexport var BImg = /*#__PURE__*/extend({\n  name: NAME_IMG,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class;\n\n    var props = _ref.props,\n        data = _ref.data;\n    var alt = props.alt,\n        src = props.src,\n        block = props.block,\n        fluidGrow = props.fluidGrow,\n        rounded = props.rounded;\n    var width = toInteger(props.width) || null;\n    var height = toInteger(props.height) || null;\n    var align = null;\n    var srcset = concat(props.srcset).filter(identity).join(',');\n    var sizes = concat(props.sizes).filter(identity).join(',');\n\n    if (props.blank) {\n      if (!height && width) {\n        height = width;\n      } else if (!width && height) {\n        width = height;\n      }\n\n      if (!width && !height) {\n        width = 1;\n        height = 1;\n      } // Make a blank SVG image\n\n\n      src = makeBlankImgSrc(width, height, props.blankColor || 'transparent'); // Disable srcset and sizes\n\n      srcset = null;\n      sizes = null;\n    }\n\n    if (props.left) {\n      align = 'float-left';\n    } else if (props.right) {\n      align = 'float-right';\n    } else if (props.center) {\n      align = 'mx-auto';\n      block = true;\n    }\n\n    return h('img', mergeData(data, {\n      attrs: {\n        src: src,\n        alt: alt,\n        width: width ? toString(width) : null,\n        height: height ? toString(height) : null,\n        srcset: srcset || null,\n        sizes: sizes || null\n      },\n      class: (_class = {\n        'img-thumbnail': props.thumbnail,\n        'img-fluid': props.fluid || fluidGrow,\n        'w-100': fluidGrow,\n        rounded: rounded === '' || rounded === true\n      }, _defineProperty(_class, \"rounded-\".concat(rounded), isString(rounded) && rounded !== ''), _defineProperty(_class, align, align), _defineProperty(_class, 'd-block', block), _class)\n    }));\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}