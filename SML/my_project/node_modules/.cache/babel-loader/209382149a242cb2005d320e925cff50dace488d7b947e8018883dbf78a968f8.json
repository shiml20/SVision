{"ast":null,"code":"import { extend } from '../vue'; // @vue/component\n\nexport var formSelectionMixin = extend({\n  computed: {\n    selectionStart: {\n      // Expose selectionStart for formatters, etc\n      cache: false,\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionStart;\n      },\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionStart = val;\n      }\n    },\n    selectionEnd: {\n      // Expose selectionEnd for formatters, etc\n      cache: false,\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionEnd;\n      },\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionEnd = val;\n      }\n    },\n    selectionDirection: {\n      // Expose selectionDirection for formatters, etc\n      cache: false,\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionDirection;\n      },\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionDirection = val;\n      }\n    }\n  },\n  methods: {\n    /* istanbul ignore next */\n    select: function select() {\n      var _this$$refs$input;\n\n      // For external handler that may want a select() method\n      (_this$$refs$input = this.$refs.input).select.apply(_this$$refs$input, arguments);\n    },\n    /* istanbul ignore next */\n    setSelectionRange: function setSelectionRange() {\n      var _this$$refs$input2;\n\n      // For external handler that may want a setSelectionRange(a,b,c) method\n      (_this$$refs$input2 = this.$refs.input).setSelectionRange.apply(_this$$refs$input2, arguments);\n    },\n    /* istanbul ignore next */\n    setRangeText: function setRangeText() {\n      var _this$$refs$input3;\n\n      // For external handler that may want a setRangeText(a,b,c) method\n      (_this$$refs$input3 = this.$refs.input).setRangeText.apply(_this$$refs$input3, arguments);\n    }\n  }\n});","map":{"version":3,"names":["extend","formSelectionMixin","computed","selectionStart","cache","get","$refs","input","set","val","selectionEnd","selectionDirection","methods","select","_this$$refs$input","apply","arguments","setSelectionRange","_this$$refs$input2","setRangeText","_this$$refs$input3"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/mixins/form-selection.js"],"sourcesContent":["import { extend } from '../vue'; // @vue/component\n\nexport var formSelectionMixin = extend({\n  computed: {\n    selectionStart: {\n      // Expose selectionStart for formatters, etc\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionStart;\n      },\n\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionStart = val;\n      }\n    },\n    selectionEnd: {\n      // Expose selectionEnd for formatters, etc\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionEnd;\n      },\n\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionEnd = val;\n      }\n    },\n    selectionDirection: {\n      // Expose selectionDirection for formatters, etc\n      cache: false,\n\n      /* istanbul ignore next */\n      get: function get() {\n        return this.$refs.input.selectionDirection;\n      },\n\n      /* istanbul ignore next */\n      set: function set(val) {\n        this.$refs.input.selectionDirection = val;\n      }\n    }\n  },\n  methods: {\n    /* istanbul ignore next */\n    select: function select() {\n      var _this$$refs$input;\n\n      // For external handler that may want a select() method\n      (_this$$refs$input = this.$refs.input).select.apply(_this$$refs$input, arguments);\n    },\n\n    /* istanbul ignore next */\n    setSelectionRange: function setSelectionRange() {\n      var _this$$refs$input2;\n\n      // For external handler that may want a setSelectionRange(a,b,c) method\n      (_this$$refs$input2 = this.$refs.input).setSelectionRange.apply(_this$$refs$input2, arguments);\n    },\n\n    /* istanbul ignore next */\n    setRangeText: function setRangeText() {\n      var _this$$refs$input3;\n\n      // For external handler that may want a setRangeText(a,b,c) method\n      (_this$$refs$input3 = this.$refs.input).setRangeText.apply(_this$$refs$input3, arguments);\n    }\n  }\n});"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ,CAAC,CAAC;;AAEjC,OAAO,IAAIC,kBAAkB,GAAGD,MAAM,CAAC;EACrCE,QAAQ,EAAE;IACRC,cAAc,EAAE;MACd;MACAC,KAAK,EAAE,KAAK;MAEZ;MACAC,GAAG,EAAE,SAASA,GAAG,GAAG;QAClB,OAAO,IAAI,CAACC,KAAK,CAACC,KAAK,CAACJ,cAAc;MACxC,CAAC;MAED;MACAK,GAAG,EAAE,SAASA,GAAG,CAACC,GAAG,EAAE;QACrB,IAAI,CAACH,KAAK,CAACC,KAAK,CAACJ,cAAc,GAAGM,GAAG;MACvC;IACF,CAAC;IACDC,YAAY,EAAE;MACZ;MACAN,KAAK,EAAE,KAAK;MAEZ;MACAC,GAAG,EAAE,SAASA,GAAG,GAAG;QAClB,OAAO,IAAI,CAACC,KAAK,CAACC,KAAK,CAACG,YAAY;MACtC,CAAC;MAED;MACAF,GAAG,EAAE,SAASA,GAAG,CAACC,GAAG,EAAE;QACrB,IAAI,CAACH,KAAK,CAACC,KAAK,CAACG,YAAY,GAAGD,GAAG;MACrC;IACF,CAAC;IACDE,kBAAkB,EAAE;MAClB;MACAP,KAAK,EAAE,KAAK;MAEZ;MACAC,GAAG,EAAE,SAASA,GAAG,GAAG;QAClB,OAAO,IAAI,CAACC,KAAK,CAACC,KAAK,CAACI,kBAAkB;MAC5C,CAAC;MAED;MACAH,GAAG,EAAE,SAASA,GAAG,CAACC,GAAG,EAAE;QACrB,IAAI,CAACH,KAAK,CAACC,KAAK,CAACI,kBAAkB,GAAGF,GAAG;MAC3C;IACF;EACF,CAAC;EACDG,OAAO,EAAE;IACP;IACAC,MAAM,EAAE,SAASA,MAAM,GAAG;MACxB,IAAIC,iBAAiB;;MAErB;MACA,CAACA,iBAAiB,GAAG,IAAI,CAACR,KAAK,CAACC,KAAK,EAAEM,MAAM,CAACE,KAAK,CAACD,iBAAiB,EAAEE,SAAS,CAAC;IACnF,CAAC;IAED;IACAC,iBAAiB,EAAE,SAASA,iBAAiB,GAAG;MAC9C,IAAIC,kBAAkB;;MAEtB;MACA,CAACA,kBAAkB,GAAG,IAAI,CAACZ,KAAK,CAACC,KAAK,EAAEU,iBAAiB,CAACF,KAAK,CAACG,kBAAkB,EAAEF,SAAS,CAAC;IAChG,CAAC;IAED;IACAG,YAAY,EAAE,SAASA,YAAY,GAAG;MACpC,IAAIC,kBAAkB;;MAEtB;MACA,CAACA,kBAAkB,GAAG,IAAI,CAACd,KAAK,CAACC,KAAK,EAAEY,YAAY,CAACJ,KAAK,CAACK,kBAAkB,EAAEJ,SAAS,CAAC;IAC3F;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}