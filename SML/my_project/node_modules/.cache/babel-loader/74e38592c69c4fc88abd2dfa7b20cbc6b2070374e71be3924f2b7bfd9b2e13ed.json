{"ast":null,"code":"import { closest, getAttr, getById, matches, select } from '../../../utils/dom';\nimport { EVENT_FILTER } from './constants';\nvar TABLE_TAG_NAMES = ['TD', 'TH', 'TR']; // Returns `true` if we should ignore the click/double-click/keypress event\n// Avoids having the user need to use `@click.stop` on the form control\n\nexport var filterEvent = function filterEvent(event) {\n  // Exit early when we don't have a target element\n  if (!event || !event.target) {\n    /* istanbul ignore next */\n    return false;\n  }\n  var el = event.target; // Exit early when element is disabled or a table element\n\n  if (el.disabled || TABLE_TAG_NAMES.indexOf(el.tagName) !== -1) {\n    return false;\n  } // Ignore the click when it was inside a dropdown menu\n\n  if (closest('.dropdown-menu', el)) {\n    return true;\n  }\n  var label = el.tagName === 'LABEL' ? el : closest('label', el); // If the label's form control is not disabled then we don't propagate event\n  // Modern browsers have `label.control` that references the associated input, but IE 11\n  // does not have this property on the label element, so we resort to DOM lookups\n\n  if (label) {\n    var labelFor = getAttr(label, 'for');\n    var input = labelFor ? getById(labelFor) : select('input, select, textarea', label);\n    if (input && !input.disabled) {\n      return true;\n    }\n  } // Otherwise check if the event target matches one of the selectors in the\n  // event filter (i.e. anchors, non disabled inputs, etc.)\n  // Return `true` if we should ignore the event\n\n  return matches(el, EVENT_FILTER);\n};","map":{"version":3,"names":["closest","getAttr","getById","matches","select","EVENT_FILTER","TABLE_TAG_NAMES","filterEvent","event","target","el","disabled","indexOf","tagName","label","labelFor","input"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/table/helpers/filter-event.js"],"sourcesContent":["import { closest, getAttr, getById, matches, select } from '../../../utils/dom';\nimport { EVENT_FILTER } from './constants';\nvar TABLE_TAG_NAMES = ['TD', 'TH', 'TR']; // Returns `true` if we should ignore the click/double-click/keypress event\n// Avoids having the user need to use `@click.stop` on the form control\n\nexport var filterEvent = function filterEvent(event) {\n  // Exit early when we don't have a target element\n  if (!event || !event.target) {\n    /* istanbul ignore next */\n    return false;\n  }\n\n  var el = event.target; // Exit early when element is disabled or a table element\n\n  if (el.disabled || TABLE_TAG_NAMES.indexOf(el.tagName) !== -1) {\n    return false;\n  } // Ignore the click when it was inside a dropdown menu\n\n\n  if (closest('.dropdown-menu', el)) {\n    return true;\n  }\n\n  var label = el.tagName === 'LABEL' ? el : closest('label', el); // If the label's form control is not disabled then we don't propagate event\n  // Modern browsers have `label.control` that references the associated input, but IE 11\n  // does not have this property on the label element, so we resort to DOM lookups\n\n  if (label) {\n    var labelFor = getAttr(label, 'for');\n    var input = labelFor ? getById(labelFor) : select('input, select, textarea', label);\n\n    if (input && !input.disabled) {\n      return true;\n    }\n  } // Otherwise check if the event target matches one of the selectors in the\n  // event filter (i.e. anchors, non disabled inputs, etc.)\n  // Return `true` if we should ignore the event\n\n\n  return matches(el, EVENT_FILTER);\n};"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,MAAM,QAAQ,oBAAoB;AAC/E,SAASC,YAAY,QAAQ,aAAa;AAC1C,IAAIC,eAAe,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAC1C;;AAEA,OAAO,IAAIC,WAAW,GAAG,SAASA,WAAW,CAACC,KAAK,EAAE;EACnD;EACA,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,MAAM,EAAE;IAC3B;IACA,OAAO,KAAK;EACd;EAEA,IAAIC,EAAE,GAAGF,KAAK,CAACC,MAAM,CAAC,CAAC;;EAEvB,IAAIC,EAAE,CAACC,QAAQ,IAAIL,eAAe,CAACM,OAAO,CAACF,EAAE,CAACG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;IAC7D,OAAO,KAAK;EACd,CAAC,CAAC;;EAGF,IAAIb,OAAO,CAAC,gBAAgB,EAAEU,EAAE,CAAC,EAAE;IACjC,OAAO,IAAI;EACb;EAEA,IAAII,KAAK,GAAGJ,EAAE,CAACG,OAAO,KAAK,OAAO,GAAGH,EAAE,GAAGV,OAAO,CAAC,OAAO,EAAEU,EAAE,CAAC,CAAC,CAAC;EAChE;EACA;;EAEA,IAAII,KAAK,EAAE;IACT,IAAIC,QAAQ,GAAGd,OAAO,CAACa,KAAK,EAAE,KAAK,CAAC;IACpC,IAAIE,KAAK,GAAGD,QAAQ,GAAGb,OAAO,CAACa,QAAQ,CAAC,GAAGX,MAAM,CAAC,yBAAyB,EAAEU,KAAK,CAAC;IAEnF,IAAIE,KAAK,IAAI,CAACA,KAAK,CAACL,QAAQ,EAAE;MAC5B,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EACF;EACA;;EAGA,OAAOR,OAAO,CAACO,EAAE,EAAEL,YAAY,CAAC;AAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}