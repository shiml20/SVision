{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { extend, mergeData } from '../../vue';\nimport { NAME_SKELETON_IMG } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { BAspect } from '../aspect';\nimport { BSkeleton } from './skeleton'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  animation: makeProp(PROP_TYPE_STRING),\n  aspect: makeProp(PROP_TYPE_STRING, '16:9'),\n  cardImg: makeProp(PROP_TYPE_STRING),\n  height: makeProp(PROP_TYPE_STRING),\n  noAspect: makeProp(PROP_TYPE_BOOLEAN, false),\n  variant: makeProp(PROP_TYPE_STRING),\n  width: makeProp(PROP_TYPE_STRING)\n}, NAME_SKELETON_IMG); // --- Main component ---\n// @vue/component\n\nexport var BSkeletonImg = /*#__PURE__*/extend({\n  name: NAME_SKELETON_IMG,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var data = _ref.data,\n      props = _ref.props;\n    var aspect = props.aspect,\n      width = props.width,\n      height = props.height,\n      animation = props.animation,\n      variant = props.variant,\n      cardImg = props.cardImg;\n    var $img = h(BSkeleton, mergeData(data, {\n      props: {\n        type: 'img',\n        width: width,\n        height: height,\n        animation: animation,\n        variant: variant\n      },\n      class: _defineProperty({}, \"card-img-\".concat(cardImg), cardImg)\n    }));\n    return props.noAspect ? $img : h(BAspect, {\n      props: {\n        aspect: aspect\n      }\n    }, [$img]);\n  }\n});","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","extend","mergeData","NAME_SKELETON_IMG","PROP_TYPE_BOOLEAN","PROP_TYPE_STRING","makeProp","makePropsConfigurable","BAspect","BSkeleton","props","animation","aspect","cardImg","height","noAspect","variant","width","BSkeletonImg","name","functional","render","h","_ref","data","$img","type","class","concat"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/skeleton/skeleton-img.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { extend, mergeData } from '../../vue';\nimport { NAME_SKELETON_IMG } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../constants/props';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { BAspect } from '../aspect';\nimport { BSkeleton } from './skeleton'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  animation: makeProp(PROP_TYPE_STRING),\n  aspect: makeProp(PROP_TYPE_STRING, '16:9'),\n  cardImg: makeProp(PROP_TYPE_STRING),\n  height: makeProp(PROP_TYPE_STRING),\n  noAspect: makeProp(PROP_TYPE_BOOLEAN, false),\n  variant: makeProp(PROP_TYPE_STRING),\n  width: makeProp(PROP_TYPE_STRING)\n}, NAME_SKELETON_IMG); // --- Main component ---\n// @vue/component\n\nexport var BSkeletonImg = /*#__PURE__*/extend({\n  name: NAME_SKELETON_IMG,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var data = _ref.data,\n        props = _ref.props;\n    var aspect = props.aspect,\n        width = props.width,\n        height = props.height,\n        animation = props.animation,\n        variant = props.variant,\n        cardImg = props.cardImg;\n    var $img = h(BSkeleton, mergeData(data, {\n      props: {\n        type: 'img',\n        width: width,\n        height: height,\n        animation: animation,\n        variant: variant\n      },\n      class: _defineProperty({}, \"card-img-\".concat(cardImg), cardImg)\n    }));\n    return props.noAspect ? $img : h(BAspect, {\n      props: {\n        aspect: aspect\n      }\n    }, [$img]);\n  }\n});"],"mappings":"AAAA,SAASA,eAAe,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAAE,IAAID,GAAG,IAAID,GAAG,EAAE;IAAEG,MAAM,CAACC,cAAc,CAACJ,GAAG,EAAEC,GAAG,EAAE;MAAEC,KAAK,EAAEA,KAAK;MAAEG,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEP,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;EAAE;EAAE,OAAOF,GAAG;AAAE;AAEhN,SAASQ,MAAM,EAAEC,SAAS,QAAQ,WAAW;AAC7C,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,uBAAuB;AAC3E,SAASC,QAAQ,EAAEC,qBAAqB,QAAQ,mBAAmB;AACnE,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;;AAExC,OAAO,IAAIC,KAAK,GAAGH,qBAAqB,CAAC;EACvCI,SAAS,EAAEL,QAAQ,CAACD,gBAAgB,CAAC;EACrCO,MAAM,EAAEN,QAAQ,CAACD,gBAAgB,EAAE,MAAM,CAAC;EAC1CQ,OAAO,EAAEP,QAAQ,CAACD,gBAAgB,CAAC;EACnCS,MAAM,EAAER,QAAQ,CAACD,gBAAgB,CAAC;EAClCU,QAAQ,EAAET,QAAQ,CAACF,iBAAiB,EAAE,KAAK,CAAC;EAC5CY,OAAO,EAAEV,QAAQ,CAACD,gBAAgB,CAAC;EACnCY,KAAK,EAAEX,QAAQ,CAACD,gBAAgB;AAClC,CAAC,EAAEF,iBAAiB,CAAC,CAAC,CAAC;AACvB;;AAEA,OAAO,IAAIe,YAAY,GAAG,aAAajB,MAAM,CAAC;EAC5CkB,IAAI,EAAEhB,iBAAiB;EACvBiB,UAAU,EAAE,IAAI;EAChBV,KAAK,EAAEA,KAAK;EACZW,MAAM,EAAE,SAASA,MAAM,CAACC,CAAC,EAAEC,IAAI,EAAE;IAC/B,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;MAChBd,KAAK,GAAGa,IAAI,CAACb,KAAK;IACtB,IAAIE,MAAM,GAAGF,KAAK,CAACE,MAAM;MACrBK,KAAK,GAAGP,KAAK,CAACO,KAAK;MACnBH,MAAM,GAAGJ,KAAK,CAACI,MAAM;MACrBH,SAAS,GAAGD,KAAK,CAACC,SAAS;MAC3BK,OAAO,GAAGN,KAAK,CAACM,OAAO;MACvBH,OAAO,GAAGH,KAAK,CAACG,OAAO;IAC3B,IAAIY,IAAI,GAAGH,CAAC,CAACb,SAAS,EAAEP,SAAS,CAACsB,IAAI,EAAE;MACtCd,KAAK,EAAE;QACLgB,IAAI,EAAE,KAAK;QACXT,KAAK,EAAEA,KAAK;QACZH,MAAM,EAAEA,MAAM;QACdH,SAAS,EAAEA,SAAS;QACpBK,OAAO,EAAEA;MACX,CAAC;MACDW,KAAK,EAAEnC,eAAe,CAAC,CAAC,CAAC,EAAE,WAAW,CAACoC,MAAM,CAACf,OAAO,CAAC,EAAEA,OAAO;IACjE,CAAC,CAAC,CAAC;IACH,OAAOH,KAAK,CAACK,QAAQ,GAAGU,IAAI,GAAGH,CAAC,CAACd,OAAO,EAAE;MACxCE,KAAK,EAAE;QACLE,MAAM,EAAEA;MACV;IACF,CAAC,EAAE,CAACa,IAAI,CAAC,CAAC;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}