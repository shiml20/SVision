{"ast":null,"code":"import { isObject } from '../../../utils/inspect';\nimport { stringifyObjectValues } from '../../../utils/stringify-object-values';\nimport { sanitizeRow } from './sanitize-row'; // Stringifies the values of a record, ignoring any special top level field keys\n// TODO: Add option to stringify `scopedSlot` items\n\nexport var stringifyRecordValues = function stringifyRecordValues(row, ignoreFields, includeFields, fieldsObj) {\n  return isObject(row) ? stringifyObjectValues(sanitizeRow(row, ignoreFields, includeFields, fieldsObj)) : /* istanbul ignore next */\n  '';\n};","map":{"version":3,"names":["isObject","stringifyObjectValues","sanitizeRow","stringifyRecordValues","row","ignoreFields","includeFields","fieldsObj"],"sources":["E:/flask_learn/my_project/node_modules/bootstrap-vue/esm/components/table/helpers/stringify-record-values.js"],"sourcesContent":["import { isObject } from '../../../utils/inspect';\nimport { stringifyObjectValues } from '../../../utils/stringify-object-values';\nimport { sanitizeRow } from './sanitize-row'; // Stringifies the values of a record, ignoring any special top level field keys\n// TODO: Add option to stringify `scopedSlot` items\n\nexport var stringifyRecordValues = function stringifyRecordValues(row, ignoreFields, includeFields, fieldsObj) {\n  return isObject(row) ? stringifyObjectValues(sanitizeRow(row, ignoreFields, includeFields, fieldsObj)) :\n  /* istanbul ignore next */\n  '';\n};"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,qBAAqB,QAAQ,wCAAwC;AAC9E,SAASC,WAAW,QAAQ,gBAAgB,CAAC,CAAC;AAC9C;;AAEA,OAAO,IAAIC,qBAAqB,GAAG,SAASA,qBAAqB,CAACC,GAAG,EAAEC,YAAY,EAAEC,aAAa,EAAEC,SAAS,EAAE;EAC7G,OAAOP,QAAQ,CAACI,GAAG,CAAC,GAAGH,qBAAqB,CAACC,WAAW,CAACE,GAAG,EAAEC,YAAY,EAAEC,aAAa,EAAEC,SAAS,CAAC,CAAC,GACtG;EACA,EAAE;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}